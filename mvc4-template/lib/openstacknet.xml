<?xml version="1.0"?>
<doc>
    <assembly>
        <name>openstacknet</name>
    </assembly>
    <members>
        <member name="T:net.openstack.Core.AsyncCompletionOption">
            <summary>
            Specifies when a <see cref="T:System.Threading.Tasks.Task"/> representing an asynchronous server operation
            should be considered complete.
            </summary>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Core.AsyncCompletionOption.RequestSubmitted">
            <summary>
            The <see cref="T:System.Threading.Tasks.Task"/> representing the operation is considered complete after the
            request has been submitted to the server.
            </summary>
        </member>
        <member name="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted">
            <summary>
            The <see cref="T:System.Threading.Tasks.Task"/> representing the operation is considered complete after the
            server has completed processing the request.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Caching.ICache`1">
            <summary>
            Represents a thread-safe cache of objects identified by string keys.
            </summary>
            <typeparam name="T">Type type of objects stored in the cache.</typeparam>
        </member>
        <member name="M:net.openstack.Core.Caching.ICache`1.Get(System.String,System.Func{`0},System.Boolean)">
             <summary>
             Gets a value cached for a particular key, updating the value if necessary.
             </summary>
             <remarks>
             This method returns a previously cached value when possible. If any of the following
             conditions are met, the <paramref name="refreshCallback"/> function will be called to
             obtain a new value for <paramref name="key"/> which is then added to the cache,
             replacing any previously cached value.
             
             <list type="bullet">
             <item>The cache does not contain any value associated with <paramref name="key"/>.</item>
             <item><paramref name="forceCacheRefresh"/> is <c>true</c>.</item>
             <item>The previously cached value for <paramref name="key"/> is no longer valid. The exact
             algorithm for determining whether or not a value is valid in implementation-defined.</item>
             </list>
            
             <para>If any of the above conditions is met and <paramref name="refreshCallback"/> is <c>null</c>,
             the previously cached value for <paramref name="key"/>, if any, is removed from the cache
             and the default value for <typeparamref name="T"/> is returned.</para>
             </remarks>
             <param name="key">The key.</param>
             <param name="refreshCallback">A function which returns a new value for the specified <paramref name="key"/>, or <c>null</c> if no update function available (see remarks).</param>
             <param name="forceCacheRefresh">If <c>true</c>, the value associated with <paramref name="key"/> will be always be refreshed by calling <paramref name="refreshCallback"/>, even if a value is already cached.</param>
             <returns>
             The cached value associated with the specified <paramref name="key"/>. If no cached value is
             available (see remarks), the method returns the default value for <typeparamref name="T"/>.
             </returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="key"/> is <c>null</c>.</exception>
        </member>
        <member name="T:net.openstack.Core.Caching.NamespaceDoc">
            <summary>
            The <see cref="N:net.openstack.Core.Caching"/> namespace defines types
            used for caching, for example, the results of calls to various REST APIs
            that are frequently reused.
            </summary>
        </member>
        <member name="T:net.openstack.Core.BackoffPolicy">
            <summary>
            This class provides a default implementation of <see cref="T:net.openstack.Core.IBackoffPolicy"/>.
            The default implementation uses a progressive back-off policy with no expiration.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="T:net.openstack.Core.IBackoffPolicy">
            <summary>
            Represents a back-off policy.
            </summary>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Core.IBackoffPolicy.GetBackoffIntervals">
            <summary>
            Gets an enumeration of <see cref="T:System.TimeSpan"/> instances representing the
            back-off policy intervals.
            </summary>
            <remarks>
            <note type="caller">
            This enumeration should always be lazily enumerated since implementations may
            not bound the number of elements returned.
            </note>
            </remarks>
            <returns>
            An enumeration of <see cref="T:System.TimeSpan"/> instances representing the back-off
            policy intervals.
            </returns>
        </member>
        <member name="F:net.openstack.Core.BackoffPolicy._default">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Core.BackoffPolicy.Default"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Core.BackoffPolicy.GetBackoffIntervals">
            <inheritdoc/>
            <remarks>
            The default implementation uses the following progressive back-off strategy.
            <list type="bullet">
            <item>No delay before polling the first time.</item>
            <item>Poll once per second, up to 10 times.</item>
            <item>Poll once per 5 seconds, up to 10 times.</item>
            <item>Poll once per 15 seconds, up to 10 times.</item>
            <item>Poll once per 30 seconds indefinitely.</item>
            </list>
            </remarks>
        </member>
        <member name="P:net.openstack.Core.BackoffPolicy.Default">
            <summary>
            Gets a default instance of <see cref="T:net.openstack.Core.BackoffPolicy"/>.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.AuthenticationRequirement">
            <summary>
            This class models the authentication requirements resource hints
            of the home document described by <strong>Home Documents for HTTP APIs</strong>.
            </summary>
            <seealso cref="P:net.openstack.Core.Domain.ResourceHints.AuthenticationRequirements"/>
            <seealso href="http://tools.ietf.org/html/draft-nottingham-json-home-03#section-4.9">Resource Hints: auth-req (Home Documents for HTTP APIs - draft-nottingham-json-home-03)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Core.Domain.AuthenticationRequirement._scheme">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Core.Domain.AuthenticationRequirement.Scheme"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.AuthenticationRequirement._realms">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Core.Domain.AuthenticationRequirement.Realms"/> property.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.AuthenticationRequirement.Scheme">
            <summary>
            Gets the HTTP authentication scheme.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.AuthenticationRequirement.Realms">
            <summary>
            Gets an optional collection of identity protection spaces the resource is a member of.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.AuthenticationType">
            <summary>
            Represents the way a user has authenticated.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known authentication types,
            with added support for unknown types returned by a server extension.
            </remarks>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="T:net.openstack.Core.ExtensibleEnum`1">
            <summary>
            Represents the base class for extensible enumeration types used
            for strongly-typed values in JSON object models.
            </summary>
            <typeparam name="T">The enumeration type.</typeparam>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="F:net.openstack.Core.ExtensibleEnum`1._name">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Core.ExtensibleEnum`1.Name"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Core.ExtensibleEnum`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.ExtensibleEnum`1"/> class with the specified name.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="M:net.openstack.Core.ExtensibleEnum`1.Equals(`0)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Core.ExtensibleEnum`1.ToString">
            <inheritdoc/>
        </member>
        <member name="P:net.openstack.Core.ExtensibleEnum`1.Name">
            <summary>
            Gets the canonical name of this member.
            </summary>
        </member>
        <member name="T:net.openstack.Core.ExtensibleEnum`1.ConverterBase">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Core.ExtensibleEnum`1"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="T:net.openstack.Core.Domain.Converters.SimpleStringJsonConverter`1">
            <summary>
            Provides a base class for JSON converters that represent serialized objects
            as a simple string.
            </summary>
            <typeparam name="T">The deserialized object type.</typeparam>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.Converters.SimpleStringJsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <remarks>
            Serialization is performed by calling <see cref="M:net.openstack.Core.Domain.Converters.SimpleStringJsonConverter`1.ConvertToString(`0)"/> and writing
            the result as a string value.
            </remarks>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Core.Domain.Converters.SimpleStringJsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <remarks>
            Deserialization is performed by reading the raw value as a string and using
            <see cref="M:net.openstack.Core.Domain.Converters.SimpleStringJsonConverter`1.ConvertToObject(System.String)"/> to convert it to an object of type
            <typeparamref name="T"/>.
            </remarks>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Core.Domain.Converters.SimpleStringJsonConverter`1.CanConvert(System.Type)">
            <returns><c>true</c> if <paramref name="objectType"/> equals <typeparamref name="T"/>; otherwise, <c>false</c>.</returns>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Core.Domain.Converters.SimpleStringJsonConverter`1.ConvertToString(`0)">
            <summary>
            Serializes an object of type <typeparamref name="T"/> to a string value.
            </summary>
            <remarks>
            The default implementation returns the result of calling <see cref="M:System.Object.ToString"/>.
            </remarks>
            <param name="obj">The object to serialize.</param>
            <returns>A string representation of the object.</returns>
        </member>
        <member name="M:net.openstack.Core.Domain.Converters.SimpleStringJsonConverter`1.ConvertToObject(System.String)">
            <summary>
            Deserializes a string value to an object of type <typeparamref name="T"/>.
            </summary>
            <param name="str">The string to deserialize.</param>
            <returns>The deserialized object.</returns>
        </member>
        <member name="M:net.openstack.Core.ExtensibleEnum`1.ConverterBase.ConvertToString(`0)">
            <remarks>
            This method uses <see cref="P:net.openstack.Core.ExtensibleEnum`1.Name"/> for serialization.
            </remarks>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Core.ExtensibleEnum`1.ConverterBase.ConvertToObject(System.String)">
            <remarks>
            If <paramref name="str"/> is an empty string, this method returns <c>null</c>.
            Otherwise, this method uses <see cref="M:net.openstack.Core.ExtensibleEnum`1.ConverterBase.FromName(System.String)"/> for deserialization.
            </remarks>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Core.ExtensibleEnum`1.ConverterBase.FromName(System.String)">
            <summary>
            Gets or creates the enumeration member with the given name.
            </summary>
            <param name="name">The name of the member. This value is never <c>null</c> or empty.</param>
            <returns>The instance of <typeparamref name="T"/> corresponding to the specified <paramref name="name"/>.</returns>
        </member>
        <member name="M:net.openstack.Core.Domain.AuthenticationType.FromName(System.String)">
            <summary>
            Gets the <see cref="T:net.openstack.Core.Domain.AuthenticationType"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Core.Domain.AuthenticationType.Password">
            <summary>
            Gets an <see cref="T:net.openstack.Core.Domain.AuthenticationType"/> representing that a user authenticated using a password.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.AuthenticationType.RSA">
            <summary>
            Gets an <see cref="T:net.openstack.Core.Domain.AuthenticationType"/> representing that a user authenticated using an RSA key.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.AuthenticationType.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Core.Domain.AuthenticationType"/> objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Core.Domain.AuthenticationType.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Core.Domain.Converters.NamespaceDoc">
            <summary>
            The <see cref="N:net.openstack.Core.Domain.Converters"/> namespace defines specialized
            JSON converters for calling the OpenStack REST APIs. These converters are useful for
            standard .NET classes that have a one or more specific representations in the
            OpenStack APIs (e.g. <see cref="T:System.Net.IPAddress"/> or <see cref="T:System.Net.NetworkInformation.PhysicalAddress"/>), and
            for extensible enumerations (e.g. <see cref="T:net.openstack.Core.Domain.ServerState"/>).
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.Converters.PhysicalAddressSimpleConverter">
            <summary>
            This implementation of <see cref="T:Newtonsoft.Json.JsonConverter"/> allows for JSON serialization
            and deserialization of <see cref="T:System.Net.NetworkInformation.PhysicalAddress"/> objects using a simple string
            representation. Serialization produces an IEEE 802 representation of the form
            <literal>00:11:22:33:44:55</literal>, and deserialization supports representations
            using hyphens or colons, along with bare strings containing 12 hexadecimal digits.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.Converters.PhysicalAddressSimpleConverter.ConvertToObject(System.String)">
             <remarks>
             If <paramref name="str"/> is an empty string, this method returns <c>null</c>.
             Otherwise, this method converts IEEE 802 addresses containing hyphens or colons
             to a bare representation, and then uses <see cref="M:System.Net.NetworkInformation.PhysicalAddress.Parse(System.String)"/> for
             deserialization. As a result, this converter can handle physical addresses in
             any of the following forms:
            
             <list type="bullet">
             <item><literal>01-23-45-67-89-ab</literal></item>
             <item><literal>01:23:45:67:89:ab</literal></item>
             <item><literal>0123456789ab</literal></item>
             </list>
             </remarks>
             <inheritdoc/>
        </member>
        <member name="T:net.openstack.Core.Domain.Converters.IPAddressSimpleConverter">
            <summary>
            This implementation of <see cref="T:Newtonsoft.Json.JsonConverter"/> allows for JSON serialization
            and deserialization of <see cref="T:System.Net.IPAddress"/> objects using a simple string
            representation. Serialization is performed using <see cref="M:System.Net.IPAddress.ToString"/>,
            and deserialization is performed using <see cref="M:System.Net.IPAddress.Parse(System.String)"/>.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Addresses-d1e3014.html">List Addresses (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Addresses_by_Network-d1e3118.html">List Addresses by Network (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.Converters.IPAddressSimpleConverter.ConvertToObject(System.String)">
            <remarks>
            If <paramref name="str"/> is an empty string, this method returns <c>null</c>.
            Otherwise, this method uses <see cref="M:System.Net.IPAddress.Parse(System.String)"/> for deserialization.
            </remarks>
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Core.Domain.DiskConfiguration">
            <summary>
            This enumeration is part of the <see href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/ch_extensions.html#diskconfig_attribute"><newTerm>disk configuration extension</newTerm></see>,
            which adds at attribute to images and servers to control how the disk is partitioned when
            servers are created, rebuilt, or resized.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known disk configurations,
            with added support for unknown types returned by a server extension.
            </remarks>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/ch_extensions.html#diskconfig_attribute">Disk Configuration Extension (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.DiskConfiguration.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.DiskConfiguration"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Core.Domain.DiskConfiguration.FromName(System.String)">
            <summary>
            Gets the <see cref="T:net.openstack.Core.Domain.DiskConfiguration"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Core.Domain.DiskConfiguration.Auto">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.DiskConfiguration"/> representing automatic configuration.
            </summary>
            <remarks>
            The server is built with a single partition the size of the target flavor disk. The
            file system is automatically adjusted to fit the entire partition. This keeps things
            simple and automated. <see cref="P:net.openstack.Core.Domain.DiskConfiguration.Auto"/> is valid only for images and servers with a
            single partition that use the EXT3 file system. This is the default setting for
            applicable Rackspace base images.
            </remarks>
        </member>
        <member name="P:net.openstack.Core.Domain.DiskConfiguration.Manual">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.DiskConfiguration"/> manual configuration.
            </summary>
            <remarks>
            The server is built using whatever partition scheme and file system is in the source
            image. If the target flavor disk is larger, the remaining disk space is left
            unpartitioned. This enables images to have non-EXT3 file systems, multiple partitions,
            and so on, and enables you to manage the disk configuration.
            </remarks>
        </member>
        <member name="T:net.openstack.Core.Domain.DiskConfiguration.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Core.Domain.DiskConfiguration"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.DiskConfiguration.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Core.Domain.CloudIdentity">
            <summary>
            Represents a set of credentials used for accessing a cloud account. Individual providers
            may impose restrictions on the values allowed for individual properties.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Core.Domain.CloudIdentity.Username">
            <summary>
            Gets or sets the username for this identity.
            </summary>
            <value>
            The username for this identity. The value may be <c>null</c> if the particular
            provider supports authenticating without a username.
            </value>
        </member>
        <member name="P:net.openstack.Core.Domain.CloudIdentity.Password">
            <summary>
            Gets or sets the password for this identity.
            </summary>
            <remarks>
            The <see cref="T:net.openstack.Core.Domain.CloudIdentity"/> class represents <em>credentials</em> (as opposed
            to an <em>account</em>), so any changes made to this property value will not be
            reflected in the account.
            </remarks>
            <value>
            A password to use when authenticating this identity, or <c>null</c> if authentication
            should be performed by different method (e.g. with a <see cref="P:net.openstack.Core.Domain.CloudIdentity.APIKey"/>).
            </value>
        </member>
        <member name="P:net.openstack.Core.Domain.CloudIdentity.APIKey">
            <summary>
            Gets or sets the API key for this identity.
            </summary>
            <remarks>
            The <see cref="T:net.openstack.Core.Domain.CloudIdentity"/> class represents <em>credentials</em> (as opposed
            to an <em>account</em>), so any changes made to this property value will not be
            reflected in the account.
            </remarks>
            <value>
            An API key to use when authenticating this identity, or <c>null</c> if authentication
            should be performed by different method (e.g. with a <see cref="P:net.openstack.Core.Domain.CloudIdentity.Password"/>).
            </value>
        </member>
        <member name="T:net.openstack.Core.Domain.ExtendedEndpoint">
            <summary>
            Represents an endpoint for a tenant that is returned outside of the <see cref="T:net.openstack.Core.Domain.ServiceCatalog"/>.
            </summary>
            <threadsafety static="true" instance="false"/>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_listEndpointsForToken_v2.0_tokens__tokenId__endpoints_Token_Operations.html">List Token Endpoints (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="T:net.openstack.Core.Domain.Endpoint">
            <summary>
            Represents an endpoint for a service provided in the <see cref="T:net.openstack.Core.Domain.ServiceCatalog"/>.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Core.Domain.Endpoint.PublicURL">
            <summary>
            Gets the public URL of the service.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Endpoint.Region">
            <summary>
            Gets the region where this service endpoint is located. If this is <c>null</c>
            or empty, the region is not specified.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Endpoint.TenantId">
            <summary>
            Gets the tenant (or account) ID which this endpoint operates on.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Endpoint.VersionId">
            <summary>
            Gets the "versionId" property associated with the endpoint.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.Endpoint.VersionInfo">
            <summary>
            Gets the "versionInfo" property associated with the endpoint.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.Endpoint.VersionList">
            <summary>
            Gets the "versionList" property associated with the endpoint.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.Endpoint.InternalURL">
            <summary>
            Gets the internal URL of the service. If this is <c>null</c> or empty,
            the service should be accessed using the <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.ExtendedEndpoint.Id">
            <summary>
            Gets the id of the endpoint, which may be a vendor-specific id.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_listEndpointsForToken_v2.0_tokens__tokenId__endpoints_Token_Operations.html">List Token Endpoints (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.ExtendedEndpoint.Name">
            <summary>
            Gets the display name of the service, which may be a vendor-specific
            product name.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_listEndpointsForToken_v2.0_tokens__tokenId__endpoints_Token_Operations.html">List Token Endpoints (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.ExtendedEndpoint.Type">
            <summary>
            Gets the canonical name of the specification implemented by this service.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_listEndpointsForToken_v2.0_tokens__tokenId__endpoints_Token_Operations.html">List Token Endpoint (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="T:net.openstack.Core.Domain.ImageState">
            <summary>
            Represents the state of a compute image.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known image states,
            with added support for unknown states returned by an image extension.
            </remarks>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.ImageState.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.ImageState"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Core.Domain.ImageState.FromName(System.String)">
            <summary>
            Gets the <see cref="T:net.openstack.Core.Domain.ImageState"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Core.Domain.ImageState.Active">
            <summary>
            Gets an <see cref="T:net.openstack.Core.Domain.ImageState"/> representing an image which is active and ready to use.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.ImageState.Saving">
            <summary>
            Gets an <see cref="T:net.openstack.Core.Domain.ImageState"/> representing an image currently being saved.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.ImageState.Deleted">
            <summary>
            Gets an <see cref="T:net.openstack.Core.Domain.ImageState"/> representing an image which has been deleted.
            </summary>
            <remarks>
            By default, the <see cref="M:net.openstack.Core.Providers.IComputeProvider.ListImages(System.String,System.String,net.openstack.Core.Domain.ImageState,System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Int32},net.openstack.Core.Domain.ImageType,System.String,net.openstack.Core.Domain.CloudIdentity)"/> operation does not return
            images which have been deleted. To list deleted images, call
            <see cref="M:net.openstack.Core.Providers.IComputeProvider.ListImages(System.String,System.String,net.openstack.Core.Domain.ImageState,System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Int32},net.openstack.Core.Domain.ImageType,System.String,net.openstack.Core.Domain.CloudIdentity)"/> specifying the <c>changesSince</c>
            parameter.
            </remarks>
        </member>
        <member name="P:net.openstack.Core.Domain.ImageState.Error">
            <summary>
            Gets an <see cref="T:net.openstack.Core.Domain.ImageState"/> representing an image which failed to perform
            an operation and is now in an error state.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.ImageState.Unknown">
            <summary>
            Gets an <see cref="T:net.openstack.Core.Domain.ImageState"/> for an image that is currently in an unknown state.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.ImageState.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Core.Domain.ImageState"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.ImageState.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Core.Domain.IPAddressList">
            <summary>
            This implementation of <see cref="T:System.Collections.Generic.List`1"/> is used to ensure the elements
            are deserialized from a JSON string using the <see cref="T:net.openstack.Core.Domain.Converters.IPAddressDetailsConverter"/>.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.IPAddressList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.IPAddressList"/> class.
            that is empty and has the default initial capacity.
            </summary>
        </member>
        <member name="M:net.openstack.Core.Domain.IPAddressList.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.IPAddressList"/> class
            that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="capacity"/> is less than 0.</exception>
        </member>
        <member name="M:net.openstack.Core.Domain.IPAddressList.#ctor(System.Collections.Generic.IEnumerable{System.Net.IPAddress})">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.IPAddressList"/> class that
            contains elements copied from the specified <paramref name="collection"/>
            and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="collection"/> is <c>null</c>.</exception>
        </member>
        <member name="T:net.openstack.Core.Domain.PowerState">
             <summary>
             Represents the power state of a server.
             </summary>
             <remarks>
             This class functions as a strongly-typed enumeration of known power states,
             with added support for unknown states returned by a server extension.
            
             <note>
             This property is defined by the Rackspace-specific Extended Status Extension
             to the OpenStack Compute API. The API does not regulate the status values,
             so it is possible that values can be added, removed, or renamed.
             </note>
             </remarks>
             <seealso cref="P:net.openstack.Core.Domain.Server.PowerState"/>
             <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/ch_extensions.html#power_state">OS-EXT-STS:power_state (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
             <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.PowerState.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.PowerState"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Core.Domain.PowerState.FromName(System.String)">
            <summary>
            Gets the <see cref="T:net.openstack.Core.Domain.PowerState"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Core.Domain.PowerState.PoweredDown">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.PowerState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.PowerState.PoweredUp">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.PowerState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.PowerState.ShutOff">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.PowerState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.PowerState.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Core.Domain.PowerState"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.PowerState.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Core.Domain.Queues.Claim">
            <summary>
            Represents a claim of messages in a queue.
            </summary>
            <remarks>
            The claim is released when <see cref="M:net.openstack.Core.Domain.Queues.Claim.Dispose"/> or <see cref="M:net.openstack.Core.Domain.Queues.Claim.DisposeAsync(System.Threading.CancellationToken)"/>
            is called. At that time, any messages belonging to this claim which have not
            been deleted will be eligible for claiming by another node in the system.
            Messages belonging to this claim may be deleted by calling
            <see cref="M:net.openstack.Core.Providers.IQueueingService.DeleteMessageAsync(net.openstack.Core.Domain.Queues.QueueName,net.openstack.Core.Domain.Queues.MessageId,net.openstack.Core.Domain.Queues.Claim,System.Threading.CancellationToken)"/> or
            <see cref="M:net.openstack.Core.Providers.IQueueingService.DeleteMessagesAsync(net.openstack.Core.Domain.Queues.QueueName,System.Collections.Generic.IEnumerable{net.openstack.Core.Domain.Queues.MessageId},System.Threading.CancellationToken)"/>.
            </remarks>
            <seealso cref="T:net.openstack.Core.Providers.IQueueingService"/>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Core.Domain.Queues.Claim._lock">
            <summary>
            A private object used to ensure <see cref="F:net.openstack.Core.Domain.Queues.Claim._releaseTask"/> is only
            initialized once in <see cref="M:net.openstack.Core.Domain.Queues.Claim.DisposeAsync(System.Threading.CancellationToken)"/>.
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.Queues.Claim._service">
            <summary>
            The queueing service instance used for commands related to this claim.
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.Queues.Claim._queueName">
            <summary>
            The name of the queue this claim belongs to.
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.Queues.Claim._location">
            <summary>
            The backing field for the <see cref="P:net.openstack.Core.Domain.Queues.Claim.Location"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.Queues.Claim._age">
            <summary>
            The backing field for the <see cref="P:net.openstack.Core.Domain.Queues.Claim.Age"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.Queues.Claim._timeToLive">
            <summary>
            The backing field for the <see cref="P:net.openstack.Core.Domain.Queues.Claim.TimeToLive"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.Queues.Claim._messages">
            <summary>
            The backing field for the <see cref="P:net.openstack.Core.Domain.Queues.Claim.Messages"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.Queues.Claim._releaseTask">
            <summary>
            The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous release of this claim.
            Prior to calling <see cref="M:net.openstack.Core.Domain.Queues.Claim.Dispose"/> or <see cref="M:net.openstack.Core.Domain.Queues.Claim.DisposeAsync(System.Threading.CancellationToken)"/>, the value of
            this field is <c>null</c>.
            </summary>
        </member>
        <member name="M:net.openstack.Core.Domain.Queues.Claim.#ctor(net.openstack.Core.Providers.IQueueingService,net.openstack.Core.Domain.Queues.QueueName,System.Uri,System.TimeSpan,System.TimeSpan,System.Boolean,System.Collections.Generic.IEnumerable{net.openstack.Core.Domain.Queues.QueuedMessage})">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.Queues.Claim"/> class using the provided values.
            </summary>
            <param name="service">The queueing service.</param>
            <param name="queueName">The name of the queue.</param>
            <param name="location">The absolute URI of the claim resource. If no claim was allocated by the server, this value is <c>null</c>.</param>
            <param name="timeToLive">The time to live of the claim.</param>
            <param name="age">The age of the claim.</param>
            <param name="owner"><c>true</c> if the current instance owns the claim (and is responsible for releasing it); otherwise, <c>false</c>.</param>
            <param name="messages">A collection of messages belonging to the claim.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="service"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="queueName"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="messages"/> is <c>null</c>.</para>
            </exception>
        </member>
        <member name="M:net.openstack.Core.Domain.Queues.Claim.RefreshAsync(System.Threading.CancellationToken)">
            <summary>
            Refreshes the current claim.
            </summary>
            <remarks>
            This method calls <see cref="M:net.openstack.Core.Providers.IQueueingService.QueryClaimAsync(net.openstack.Core.Domain.Queues.QueueName,net.openstack.Core.Domain.Queues.Claim,System.Threading.CancellationToken)"/> to obtain updated
            information about the current claim, and then synchronously invokes <see cref="M:net.openstack.Core.Domain.Queues.Claim.RefreshImpl(net.openstack.Core.Domain.Queues.Claim)"/>
            to update the current instance to match the results.
            </remarks>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:net.openstack.Core.Domain.Queues.Claim.RenewAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Renews the claim by resetting the age and updating the TTL for the claim.
            </summary>
            <remarks>
            This method calls <see cref="M:net.openstack.Core.Providers.IQueueingService.UpdateClaimAsync(net.openstack.Core.Domain.Queues.QueueName,net.openstack.Core.Domain.Queues.Claim,System.TimeSpan,System.Threading.CancellationToken)"/> to renew the
            current claim, and then synchronously updates the current instance to reflect
            the new age and time-to-live values.
            </remarks>
            <param name="timeToLive">
            The new Time-To-Live value for the claim. This value may differ from the original TTL of the claim.
            </param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="timeToLive"/> is negative or <see cref="F:System.TimeSpan.Zero"/>.</exception>
            <exception cref="T:System.InvalidOperationException">If the claim is empty (i.e. <see cref="P:net.openstack.Core.Domain.Queues.Claim.Messages"/> is empty).</exception>
        </member>
        <member name="M:net.openstack.Core.Domain.Queues.Claim.Dispose">
            <inheritdoc/>
            <remarks>
            This method calls <see cref="M:net.openstack.Core.Providers.IQueueingService.ReleaseClaimAsync(net.openstack.Core.Domain.Queues.QueueName,net.openstack.Core.Domain.Queues.Claim,System.Threading.CancellationToken)"/> to release messages
            claimed by this claim. To prevent other subscribers from re-claiming the messages, make
            sure to delete the messages before calling <see cref="M:net.openstack.Core.Domain.Queues.Claim.Dispose"/>.
            </remarks>
            <seealso cref="M:net.openstack.Core.Providers.IQueueingService.ReleaseClaimAsync(net.openstack.Core.Domain.Queues.QueueName,net.openstack.Core.Domain.Queues.Claim,System.Threading.CancellationToken)"/>
        </member>
        <member name="M:net.openstack.Core.Domain.Queues.Claim.DisposeAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously releases resources owned by this <see cref="T:net.openstack.Core.Domain.Queues.Claim"/>.
            </summary>
            <remarks>
            This method calls <see cref="M:net.openstack.Core.Providers.IQueueingService.ReleaseClaimAsync(net.openstack.Core.Domain.Queues.QueueName,net.openstack.Core.Domain.Queues.Claim,System.Threading.CancellationToken)"/> to release messages
            claimed by this claim. To prevent other subscribers from re-claiming the messages, make
            sure to delete the messages before calling <see cref="M:net.openstack.Core.Domain.Queues.Claim.DisposeAsync(System.Threading.CancellationToken)"/>.
            </remarks>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:net.openstack.Core.Domain.Queues.Claim.Dispose(System.Boolean)">
            <summary>
            Releases resources owned by this <see cref="T:net.openstack.Core.Domain.Queues.Claim"/>.
            </summary>
            <param name="disposing"><c>true</c> if this method was called from <see cref="M:net.openstack.Core.Domain.Queues.Claim.Dispose"/>; otherwise, <c>false</c> if this method was called from a finalizer.</param>
        </member>
        <member name="M:net.openstack.Core.Domain.Queues.Claim.RefreshImpl(net.openstack.Core.Domain.Queues.Claim)">
            <summary>
            Refresh the current claim to match the updated information in <paramref name="claim"/>.
            </summary>
            <param name="claim">A <see cref="T:net.openstack.Core.Domain.Queues.Claim"/> object containing updated claim information.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="claim"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If the specified <paramref name="claim"/> does not represent the same claim as the current instance.</exception>
        </member>
        <member name="P:net.openstack.Core.Domain.Queues.Claim.Id">
            <summary>
            Gets the claim ID.
            </summary>
            <remarks>
            The claim ID is derived from the <see cref="P:net.openstack.Core.Domain.Queues.Claim.Location"/> property according to the
            URI template documented in the <see href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1">OpenStack Marconi API v1 Blueprint</see>.
            </remarks>
            <value>
            The ID of this claim. If the claim is empty (i.e. the queue did not have any unclaimed messages), this value is <c>null</c>.
            </value>
        </member>
        <member name="P:net.openstack.Core.Domain.Queues.Claim.Location">
            <summary>
            Gets the absolute URI for this claim.
            </summary>
            <value>
            The absolute URI of this claim. If the claim is empty (i.e. the queue did not have any unclaimed messages), this value is <c>null</c>.
            </value>
        </member>
        <member name="P:net.openstack.Core.Domain.Queues.Claim.Age">
            <summary>
            Gets the age of the claim as returned by the server.
            </summary>
            <remarks>
            This value does not automatically update. To obtain the age of a claim after a period of time elapses,
            use <see cref="M:net.openstack.Core.Providers.IQueueingService.QueryClaimAsync(net.openstack.Core.Domain.Queues.QueueName,net.openstack.Core.Domain.Queues.Claim,System.Threading.CancellationToken)"/>.
            </remarks>
        </member>
        <member name="P:net.openstack.Core.Domain.Queues.Claim.TimeToLive">
            <summary>
            Gets the Time To Live (TTL) of the claim.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Queues.Claim.Messages">
            <summary>
            Gets the messages which are included in this claim.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.Queues.ClaimId">
            <summary>
            Represents the unique identifier of a claim in the <see cref="T:net.openstack.Core.Providers.IQueueingService"/>.
            </summary>
            <seealso cref="P:net.openstack.Core.Domain.Queues.Claim.Id"/>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="T:net.openstack.Core.ResourceIdentifier`1">
            <summary>
            Represents a unique identifier within the context of a cloud services provider.
            </summary>
            <typeparam name="T">The resource identifier type.</typeparam>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Core.ResourceIdentifier`1._id">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Core.ResourceIdentifier`1.Value"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Core.ResourceIdentifier`1.#ctor(System.String)">
            <summary>
            Initialized a new instance of the <see cref="T:net.openstack.Core.ResourceIdentifier`1"/> class
            with the specified identifier.
            </summary>
            <param name="id">The resource identifier value.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="id"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="id"/> is empty.</exception>
        </member>
        <member name="M:net.openstack.Core.ResourceIdentifier`1.op_Equality(net.openstack.Core.ResourceIdentifier{`0},net.openstack.Core.ResourceIdentifier{`0})">
            <summary>
            Determines whether two specified resource identifiers have the same value.
            </summary>
            <param name="left">The first resource identifier to compare, or <c>null</c>.</param>
            <param name="right">The second resource identifier to compare, or <c>null</c>.</param>
            <returns><c>true</c> if the value of <paramref name="left"/> is the same as the value of <paramref name="right"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:net.openstack.Core.ResourceIdentifier`1.op_Inequality(net.openstack.Core.ResourceIdentifier{`0},net.openstack.Core.ResourceIdentifier{`0})">
            <summary>
            Determines whether two specified resource identifiers have different values.
            </summary>
            <param name="left">The first resource identifier to compare, or <c>null</c>.</param>
            <param name="right">The second resource identifier to compare, or <c>null</c>.</param>
            <returns><c>true</c> if the value of <paramref name="left"/> is different from the value of <paramref name="right"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:net.openstack.Core.ResourceIdentifier`1.Equals(`0)">
             <inheritdoc/>
             <remarks>
             The default implementation uses <see cref="P:System.StringComparer.Ordinal"/> to compare
             the <see cref="P:net.openstack.Core.ResourceIdentifier`1.Value"/> property of two identifiers.
            
             <note type="implement">
             This method may be overridden to change the way unique identifiers are compared.
             </note>
             </remarks>
        </member>
        <member name="M:net.openstack.Core.ResourceIdentifier`1.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Core.ResourceIdentifier`1.GetHashCode">
             <inheritdoc/>
             <remarks>
             The default implementation uses <see cref="P:System.StringComparer.Ordinal"/> to calculate
             and return a hash code from the <see cref="P:net.openstack.Core.ResourceIdentifier`1.Value"/> property.
            
             <note type="implement">
             This method may be overridden to change the way unique identifiers are compared.
             </note>
             </remarks>
        </member>
        <member name="M:net.openstack.Core.ResourceIdentifier`1.ToString">
            <inheritdoc/>
        </member>
        <member name="P:net.openstack.Core.ResourceIdentifier`1.Value">
            <summary>
            Gets the value of this resource identifier.
            </summary>
        </member>
        <member name="T:net.openstack.Core.ResourceIdentifier`1.ConverterBase">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Core.ResourceIdentifier`1"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.ResourceIdentifier`1.ConverterBase.ConvertToString(`0)">
            <remarks>
            This method uses <see cref="P:net.openstack.Core.ResourceIdentifier`1.Value"/> for serialization.
            </remarks>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Core.ResourceIdentifier`1.ConverterBase.ConvertToObject(System.String)">
            <remarks>
            If <paramref name="str"/> is <c>null</c> or an empty string, this method returns <c>null</c>.
            Otherwise, this method uses <see cref="M:net.openstack.Core.ResourceIdentifier`1.ConverterBase.FromValue(System.String)"/> for deserialization.
            </remarks>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Core.ResourceIdentifier`1.ConverterBase.FromValue(System.String)">
            <summary>
            Creates a resource identifier with the given value.
            </summary>
            <param name="id">The resource identifier value. This value is never <c>null</c> or empty.</param>
            <returns>An instance of <typeparamref name="T"/> corresponding representing the specified <paramref name="id"/>.</returns>
        </member>
        <member name="M:net.openstack.Core.Domain.Queues.ClaimId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.Queues.ClaimId"/> class
            with the specified identifier value.
            </summary>
            <param name="id">The claim identifier value.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="id"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="id"/> is empty.</exception>
        </member>
        <member name="T:net.openstack.Core.Domain.Queues.ClaimId.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Core.Domain.Queues.ClaimId"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.Queues.ClaimId.Converter.FromValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Core.Domain.Queues.CloudQueue">
            <summary>
            Represents a named queue in the <see cref="T:net.openstack.Core.Providers.IQueueingService"/>.
            </summary>
            <seealso cref="T:net.openstack.Core.Providers.IQueueingService"/>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Core.Domain.Queues.CloudQueue._name">
            <summary>
            The backing field for the <see cref="P:net.openstack.Core.Domain.Queues.CloudQueue.Name"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.Queues.CloudQueue._href">
            <summary>
            The backing field for the <see cref="P:net.openstack.Core.Domain.Queues.CloudQueue.Href"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.Queues.CloudQueue._metadata">
            <summary>
            The backing field for the <see cref="P:net.openstack.Core.Domain.Queues.CloudQueue.Metadata"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Core.Domain.Queues.CloudQueue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.Queues.CloudQueue"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Queues.CloudQueue.Name">
            <summary>
            Gets the name of the queue.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Queues.CloudQueue.Href">
            <summary>
            Gets the URI of the queue resource.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Queues.CloudQueue.Metadata">
            <summary>
            Gets a dynamic object containing the metadata associated with the queue.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.Queues.Message">
            <summary>
            Represents a queue message with a dynamic <see cref="T:Newtonsoft.Json.Linq.JObject"/> body.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="T:net.openstack.Core.Domain.Queues.Message`1">
            <summary>
            Represents a queue message with a strongly-typed body.
            </summary>
            <typeparam name="T">The type of the data stored in the message body.</typeparam>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Core.Domain.Queues.Message`1._timeToLive">
            <summary>
            The backing field for the <see cref="P:net.openstack.Core.Domain.Queues.Message`1.TimeToLive"/> property.
            This value is stored in seconds.
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.Queues.Message`1._body">
            <summary>
            The backing field for the <see cref="P:net.openstack.Core.Domain.Queues.Message`1.Body"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Core.Domain.Queues.Message`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.Queues.Message`1"/> class during
            JSON deserialization.
            </summary>
        </member>
        <member name="M:net.openstack.Core.Domain.Queues.Message`1.#ctor(System.TimeSpan,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.Queues.Message`1"/> class using
            the specified time-to-live and strongly-typed message body.
            </summary>
            <param name="timeToLive">The time-to-live for the message.</param>
            <param name="body">The message data.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="timeToLive"/> is negative or <see cref="F:System.TimeSpan.Zero"/>.</exception>
        </member>
        <member name="P:net.openstack.Core.Domain.Queues.Message`1.TimeToLive">
            <summary>
            Gets the time-to-live for the message.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Queues.Message`1.Body">
            <summary>
            Gets the body of the message.
            </summary>
        </member>
        <member name="M:net.openstack.Core.Domain.Queues.Message.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.Queues.Message"/> class during
            JSON deserialization.
            </summary>
        </member>
        <member name="M:net.openstack.Core.Domain.Queues.Message.#ctor(System.TimeSpan,Newtonsoft.Json.Linq.JObject)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.Queues.Message"/> class using
            the specified time-to-live and message body.
            </summary>
            <param name="timeToLive">The time-to-live for the message.</param>
            <param name="body">The message data.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="timeToLive"/> is negative or <see cref="F:System.TimeSpan.Zero"/>.</exception>
        </member>
        <member name="T:net.openstack.Core.Domain.Queues.MessageId">
            <summary>
            Represents the unique identifier of a message in the <see cref="T:net.openstack.Core.Providers.IQueueingService"/>.
            </summary>
            <seealso cref="P:net.openstack.Core.Domain.Queues.QueuedMessage.Id"/>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Core.Domain.Queues.MessageId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.Queues.MessageId"/> class
            with the specified identifier value.
            </summary>
            <param name="id">The message identifier value.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="id"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="id"/> is empty.</exception>
        </member>
        <member name="T:net.openstack.Core.Domain.Queues.MessageId.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Core.Domain.Queues.MessageId"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.Queues.MessageId.Converter.FromValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Core.Domain.Queues.MessageStatistics">
            <summary>
            This models the JSON object used to represent statistics for a particular
            message in a message queue.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Core.Domain.Queues.MessageStatistics._href">
            <summary>
            The backing field for the <see cref="P:net.openstack.Core.Domain.Queues.MessageStatistics.Href"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.Queues.MessageStatistics._age">
            <summary>
            The backing field for the <see cref="P:net.openstack.Core.Domain.Queues.MessageStatistics.Age"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.Queues.MessageStatistics._created">
            <summary>
            The backing field for the <see cref="P:net.openstack.Core.Domain.Queues.MessageStatistics.Created"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Core.Domain.Queues.MessageStatistics.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.Queues.MessageStatistics"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Queues.MessageStatistics.Href">
            <summary>
            Gets the absolute path of the URI to this message.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Queues.MessageStatistics.Age">
            <summary>
            Gets the age of the message in the queue.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Queues.MessageStatistics.Created">
            <summary>
            Gets the timestamp when this message was first added to the queue.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.Queues.NamespaceDoc">
            <summary>
            The <see cref="N:net.openstack.Core.Domain.Queues"/> namespace defines the provider-independent
            object model for calling the OpenStack Queues API.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.Queues.QueuedMessage">
            <summary>
            Represents a message which is queued in the <see cref="T:net.openstack.Core.Providers.IQueueingService"/>.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Core.Domain.Queues.QueuedMessage._href">
            <summary>
            The backing field for the <see cref="P:net.openstack.Core.Domain.Queues.QueuedMessage.Href"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.Queues.QueuedMessage._ttl">
            <summary>
            The backing field for the <see cref="P:net.openstack.Core.Domain.Queues.QueuedMessage.TimeToLive"/> property.
            The value is stored in seconds.
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.Queues.QueuedMessage._age">
            <summary>
            The backing field for the <see cref="P:net.openstack.Core.Domain.Queues.QueuedMessage.Age"/> property.
            The value is stored in seconds.
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.Queues.QueuedMessage._body">
            <summary>
            The backing field for the <see cref="P:net.openstack.Core.Domain.Queues.QueuedMessage.Body"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Core.Domain.Queues.QueuedMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.Queues.QueuedMessage"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Queues.QueuedMessage.Id">
            <summary>
            Gets the ID of the message.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Queues.QueuedMessage.Href">
            <summary>
            Gets the URI of the message resource.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Queues.QueuedMessage.TimeToLive">
            <summary>
            Gets the time-to-live of the message.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Queues.QueuedMessage.Age">
            <summary>
            Gets the age of the message.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Queues.QueuedMessage.Body">
            <summary>
            Gets the JSON body of the message as a dynamic <see cref="T:Newtonsoft.Json.Linq.JObject"/>.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.Queues.QueuedMessageList">
            <summary>
            Represents a collection of messages stored in a queue in the <see cref="T:net.openstack.Core.Providers.IQueueingService"/>.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Core.Domain.Queues.QueuedMessageList._empty">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Core.Domain.Queues.QueuedMessageList.Empty"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.Queues.QueuedMessageList._links">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Core.Domain.Queues.QueuedMessageList.Links"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.Queues.QueuedMessageList._messages">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Core.Domain.Queues.QueuedMessageList.Messages"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Core.Domain.Queues.QueuedMessageList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.Queues.QueuedMessageList"/> class during
            JSON deserialization.
            </summary>
        </member>
        <member name="M:net.openstack.Core.Domain.Queues.QueuedMessageList.#ctor(System.Collections.Generic.IEnumerable{net.openstack.Core.Domain.Queues.QueuedMessage},System.Collections.Generic.IEnumerable{net.openstack.Core.Domain.Link})">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.Queues.QueuedMessageList"/> class.
            </summary>
            <param name="messages">A collection of <see cref="T:net.openstack.Core.Domain.Queues.QueuedMessage"/> objects describing the messages in a queue.</param>
            <param name="links">A collection of <see cref="T:net.openstack.Core.Domain.Link"/> objects describing resources related to the list of messages.</param>
            <exception cref="T:System.ArgumentException">
            If <paramref name="messages"/> contains any <c>null</c> values.
            <para>-or-</para>
            <para>If <paramref name="links"/> contains any <c>null</c> values.</para>
            </exception>
        </member>
        <member name="P:net.openstack.Core.Domain.Queues.QueuedMessageList.Empty">
            <summary>
            Gets an empty list of messages, which is not specific to any queue.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Queues.QueuedMessageList.Links">
            <summary>
            Gets a collection of <see cref="T:net.openstack.Core.Domain.Link"/> objects describing resources related
            to this list of messages.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Queues.QueuedMessageList.Messages">
            <summary>
            Gets a list of <see cref="T:net.openstack.Core.Domain.Queues.QueuedMessage"/> objects describing the messages in
            the queue.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.Queues.QueueMessagesStatistics">
            <summary>
            This models the JSON object used to represent statistics for messages
            a particular message queue.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Core.Domain.Queues.QueueMessagesStatistics._free">
            <summary>
            The backing field for the <see cref="P:net.openstack.Core.Domain.Queues.QueueMessagesStatistics.Free"/> property;
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.Queues.QueueMessagesStatistics._claimed">
            <summary>
            The backing field for the <see cref="P:net.openstack.Core.Domain.Queues.QueueMessagesStatistics.Claimed"/> property;
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.Queues.QueueMessagesStatistics._total">
            <summary>
            The backing field for the <see cref="P:net.openstack.Core.Domain.Queues.QueueMessagesStatistics.Total"/> property;
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.Queues.QueueMessagesStatistics._oldest">
            <summary>
            The backing field for the <see cref="P:net.openstack.Core.Domain.Queues.QueueMessagesStatistics.Oldest"/> property;
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.Queues.QueueMessagesStatistics._newest">
            <summary>
            The backing field for the <see cref="P:net.openstack.Core.Domain.Queues.QueueMessagesStatistics.Newest"/> property;
            </summary>
        </member>
        <member name="M:net.openstack.Core.Domain.Queues.QueueMessagesStatistics.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.Queues.QueueMessagesStatistics"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Queues.QueueMessagesStatistics.Free">
            <summary>
            Gets the number of unclaimed messages in the queue.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Queues.QueueMessagesStatistics.Claimed">
            <summary>
            Gets the number of claimed messages in the queue.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Queues.QueueMessagesStatistics.Total">
            <summary>
            Gets the total number of messages currently in the queue.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Queues.QueueMessagesStatistics.Oldest">
            <summary>
            Gets additional statistics for the oldest message in the queue.
            </summary>
            <value>
            A <see cref="T:net.openstack.Core.Domain.Queues.MessageStatistics"/> object containing statistics about the oldest message in the queue,
            or <c>null</c> if <see cref="P:net.openstack.Core.Domain.Queues.QueueMessagesStatistics.Total"/> is 0.
            </value>
        </member>
        <member name="P:net.openstack.Core.Domain.Queues.QueueMessagesStatistics.Newest">
            <summary>
            Gets additional statistics for the newest message in the queue.
            </summary>
            <value>
            A <see cref="T:net.openstack.Core.Domain.Queues.MessageStatistics"/> object containing statistics about the newest message in the queue,
            or <c>null</c> if <see cref="P:net.openstack.Core.Domain.Queues.QueueMessagesStatistics.Total"/> is 0.
            </value>
        </member>
        <member name="T:net.openstack.Core.Domain.Queues.QueueName">
            <summary>
            Represents the name of a queue in the <see cref="T:net.openstack.Core.Providers.IQueueingService"/>.
            </summary>
            <seealso cref="P:net.openstack.Core.Domain.Queues.CloudQueue.Name"/>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Core.Domain.Queues.QueueName.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.Queues.QueueName"/> class
            with the specified identifier value.
            </summary>
            <param name="id">The queue name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="id"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="id"/> is empty.</exception>
        </member>
        <member name="T:net.openstack.Core.Domain.Queues.QueueName.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Core.Domain.Queues.QueueName"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.Queues.QueueName.Converter.FromValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Core.Domain.Queues.QueueStatistics">
            <summary>
            This models the JSON object used to represent statistics returned by the
            Get Queue Statistics API call.
            </summary>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Get_Queue_Stats">Get Queue Statistics (Marconi API v1 Blueprint)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Core.Domain.Queues.QueueStatistics._messageStatistics">
            <summary>
            The backing field for the <see cref="P:net.openstack.Core.Domain.Queues.QueueStatistics.MessageStatistics"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Core.Domain.Queues.QueueStatistics.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.Queues.QueueStatistics"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Queues.QueueStatistics.MessageStatistics">
            <summary>
            Gets statistics about messages contained in the queue.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.ResourceHints">
             <summary>
             This class models the Resource Hints of the home document described by
             <strong>Home Documents for HTTP APIs</strong>.
             </summary>
             <remarks>
             Resource hints allow clients to find relevant information about
             interacting with a resource beforehand, as a means of optimizing
             communications, as well as advertising available behaviors (e.g., to
             aid in laying out a user interface for consuming the API).
            
             <para>Hints are just that - they are not a "contract", and are to only
             be taken as advisory. The runtime behavior of the resource always
             overrides hinted information.</para>
            
             <para>For example, a resource might hint that the PUT method is allowed
             on all "widget" resources. This means that generally, the user has the
             ability to PUT to a particular resource, but a specific resource
             could reject a PUT based upon access control or other considerations.
             More fine-grained information might be gathered by interacting with
             the resource (e.g., via a GET), or by another resource "containing"
             it (such as a "widgets" collection).</para>
            
             <para>The current specification defines a set of common hints, based
             upon information that's discoverable by directly interacting with
             resources. A future draft will explain how to define new hints.</para>
             </remarks>
             <seealso href="http://tools.ietf.org/html/draft-nottingham-json-home-03#section-4">Resource Hints (Home Documents for HTTP APIs - draft-nottingham-json-home-03)</seealso>
             <threadsafety static="true" instance="false"/>
             <preliminary/>
        </member>
        <member name="F:net.openstack.Core.Domain.ResourceHints._allow">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Core.Domain.ResourceHints.Allow"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.ResourceHints._formats">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Core.Domain.ResourceHints.Formats"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.ResourceHints._acceptPatch">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Core.Domain.ResourceHints.AcceptPatch"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.ResourceHints._acceptPost">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Core.Domain.ResourceHints.AcceptPost"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.ResourceHints._acceptPut">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Core.Domain.ResourceHints.AcceptPut"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.ResourceHints._acceptRanges">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Core.Domain.ResourceHints.AcceptRanges"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.ResourceHints._prefer">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Core.Domain.ResourceHints.Prefer"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.ResourceHints._docs">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Core.Domain.ResourceHints.Docs"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.ResourceHints._preconditionReq">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Core.Domain.ResourceHints.Preconditions"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.ResourceHints._authReq">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Core.Domain.ResourceHints.AuthenticationRequirements"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.ResourceHints._status">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Core.Domain.ResourceHints.Status"/> property.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.ResourceHints.Allow">
            <summary>
            Gets the HTTP methods that the current client will be able to use to interact
            with the resource; equivalent to the <strong>Allow</strong> HTTP response
            header.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.ResourceHints.Formats">
            <summary>
            Gets the representation types that the resource produces and consumes, using the
            GET and PUT methods respectively, subject to the <see cref="P:net.openstack.Core.Domain.ResourceHints.Allow"/> hint. The
            keys of this collections are <see cref="P:System.Net.Mime.ContentType.MediaType">media types</see>,
            and the values are objects which have not yet been defined.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.ResourceHints.AcceptPatch">
            <summary>
            Gets the PATCH request formats accepted by the resource for this client;
            equivalent to the <strong>Accept-Patch</strong> HTTP response header.
            </summary>
            <seealso href="http://tools.ietf.org/html/rfc5789">RFC5789 (PATCH Method for HTTP)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.ResourceHints.AcceptPost">
            <summary>
            Gets the POST request formats accepted by the resource for this client.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.ResourceHints.AcceptPut">
            <summary>
            Gets the PUT request formats accepted by the resource for this client.
            </summary>
            <remarks>
            If this value is <c>null</c>, a client may assume that any format indicated by
            the <see cref="P:net.openstack.Core.Domain.ResourceHints.Formats"/> hint is acceptable in a PUT.
            </remarks>
        </member>
        <member name="P:net.openstack.Core.Domain.ResourceHints.AcceptRanges">
            <summary>
            Gets the range-specifiers available to the client for this resource;
            equivalent to the <strong>Accept-Ranges</strong> HTTP response header.
            </summary>
            <remarks>
            The values are HTTP range specifiers.
            </remarks>
            <seealso href="http://tools.ietf.org/html/draft-ietf-httpbis-p5-range-24#section-2.3">Accept-Ranges (Hypertext Transfer Protocol (HTTP/1.1): Range Requests - draft-ietf-httpbis-p5-range-24)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.ResourceHints.Prefer">
            <summary>
            Gets the preferences supported by the resource. Note that, as per that
            specification, a preference can be ignored by the server.
            </summary>
            <seealso href="http://tools.ietf.org/html/draft-snell-http-prefer-12">Prefer Header for HTTP (draft-snell-http-prefer-12)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.ResourceHints.Docs">
            <summary>
            Gets the location for human-readable documentation for the relation type
            of the resource.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.ResourceHints.Preconditions">
            <summary>
            Gets a collection of preconditions that the resource may require for
            state-changing requests (e.g., PUT, PATCH) to include a precondition,
            to avoid conflicts due to concurrent updates.
            </summary>
            <remarks>
            This collection may contain the values <literal>"etag"</literal> and
            <literal>"last-modified"</literal> indicating the type of precondition
            expected.
            </remarks>
            <seealso href="http://tools.ietf.org/html/draft-ietf-httpbis-p4-conditional-24">Hypertext Transfer Protocol (HTTP/1.1): Conditional Requests (draft-ietf-httpbis-p4-conditional-24)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.ResourceHints.AuthenticationRequirements">
            <summary>
            Gets a collection of requirements for authentication using the HTTP Authentication Framework.
            </summary>
            <seealso cref="T:net.openstack.Core.Domain.AuthenticationRequirement"/>
            <seealso href="http://tools.ietf.org/html/draft-ietf-httpbis-p7-auth-24">Hypertext Transfer Protocol (HTTP/1.1): Authentication (draft-ietf-httpbis-p7-auth-24)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.ResourceHints.Status">
             <summary>
             Gets the status of the resource. Possible values for the status are
             <literal>"deprecated"</literal> and <literal>"gone"</literal>.
             </summary>
             <remarks>
             Some possible values for this property are:
            
             <list type="bullet">
             <item><c>deprecated</c>: indicates that use of the resource is not recommended, but it is still available.</item>
             <item><c>gone</c>: indicates that the resource is no longer available; i.e. it will return a 410 Gone HTTP status code if accessed.</item>
             </list>
             </remarks>
        </member>
        <member name="T:net.openstack.Core.Domain.ResourceObject">
            <summary>
            This class models the Resource Object of the home document described by
            <strong>Home Documents for HTTP APIs</strong>.
            </summary>
            <seealso href="http://tools.ietf.org/html/draft-nottingham-json-home-03#section-3">Resource Objects (Home Documents for HTTP APIs - draft-nottingham-json-home-03)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Core.Domain.ResourceObject._href">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Core.Domain.ResourceObject.Href"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.ResourceObject._hrefTemplate">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Core.Domain.ResourceObject.HrefTemplate"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.ResourceObject._hrefVars">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Core.Domain.ResourceObject.HrefVars"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.ResourceObject._hints">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Core.Domain.ResourceObject.Hints"/> property.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.ResourceObject.Href">
            <summary>
            Gets the URI of the resource, if the resource is a direct link. The value
            may be a relative URI whose base URI is that of the JSON Home Document itself.
            </summary>
            <value>
            The direct URI of the resource, or <c>null</c> if this resource is
            a templated link.
            </value>
            <seealso href="http://tools.ietf.org/html/rfc3986">RFC3986 (Uniform Resource Identifier (URI): Generic Syntax)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.ResourceObject.HrefTemplate">
            <summary>
            Gets the URI Template of the resource. The value may be a relative URI
            whose base URI is that of the JSON Home Document itself.
            </summary>
            <value>
            The URI Template of the resource, or <c>null</c> if this resource is
            a direct link.
            </value>
            <seealso href="http://tools.ietf.org/html/rfc6570">RFC6570 (URI Template)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.ResourceObject.HrefVars">
            <summary>
            Gets the template variables used to fill the template returned by
            <see cref="P:net.openstack.Core.Domain.ResourceObject.HrefTemplate"/>.
            </summary>
            <remarks>
            This is a mapping between variable names available to the template and
            absolute URIs that are used as global identifiers for the semantics and
            syntax of those variables.
            </remarks>
            <value>
            The template variable mapping, or <c>null</c> if this is a direct link.
            </value>
        </member>
        <member name="P:net.openstack.Core.Domain.ResourceObject.Hints">
            <summary>
            Gets the additional Resource Hints describing the resource.
            </summary>
            <seealso cref="T:net.openstack.Core.Domain.ResourceHints"/>
        </member>
        <member name="T:net.openstack.Core.Domain.SnapshotState">
            <summary>
            Represents the state of a block storage snapshot.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known snapshot states,
            with added support for unknown states returned by a server extension.
            </remarks>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.SnapshotState.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.SnapshotState"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Core.Domain.SnapshotState.FromName(System.String)">
            <summary>
            Gets the <see cref="T:net.openstack.Core.Domain.SnapshotState"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Core.Domain.SnapshotState.Creating">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.SnapshotState"/> indicating the snapshot is being created.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.SnapshotState.Available">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.SnapshotState"/> indicating the snapshot is ready to be attached to an instance.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.SnapshotState.Deleting">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.SnapshotState"/> indicating the snapshot is being deleted.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.SnapshotState.Error">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.SnapshotState"/> indicating there has been some error with the snapshot.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.SnapshotState.ErrorDeleting">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.SnapshotState"/> indicating an error occurred while deleting the snapshot.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.SnapshotState.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Core.Domain.SnapshotState"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.SnapshotState.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Core.Domain.Converters.IPAddressDetailsConverter">
            <summary>
            This implementation of <see cref="T:Newtonsoft.Json.JsonConverter"/> allows for JSON serialization
            and deserialization of <see cref="T:System.Net.IPAddress"/> objects in the "address details"
            format used by operations such as <see cref="M:net.openstack.Core.Providers.IComputeProvider.ListAddresses(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            and  <see cref="M:net.openstack.Core.Providers.IComputeProvider.ListAddressesByNetwork(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Addresses-d1e3014.html">List Addresses (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Addresses_by_Network-d1e3118.html">List Addresses by Network (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.Converters.IPAddressDetailsConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <remarks>
            Serialization is performed by creating an <see cref="T:net.openstack.Core.Domain.Converters.IPAddressDetailsConverter.AddressDetails"/> instance
            equivalent to the given <see cref="T:System.Net.IPAddress"/> instance and serializing that as
            a JSON object.
            </remarks>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Core.Domain.Converters.IPAddressDetailsConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <remarks>
            Deserialization is performed by deserializing the JSON value as an <see cref="T:net.openstack.Core.Domain.Converters.IPAddressDetailsConverter.AddressDetails"/>
            object, following by using <see cref="M:System.Net.IPAddress.Parse(System.String)"/> to convert the value of
            <see cref="P:net.openstack.Core.Domain.Converters.IPAddressDetailsConverter.AddressDetails.Address"/> to an <see cref="T:System.Net.IPAddress"/> instance.
            </remarks>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Core.Domain.Converters.IPAddressDetailsConverter.CanConvert(System.Type)">
            <returns><c>true</c> if <paramref name="objectType"/> equals <see cref="T:System.Net.IPAddress"/>; otherwise, <c>false</c>.</returns>
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Core.Domain.Converters.IPAddressDetailsConverter.AddressDetails">
            <summary>
            Represents a network address in a format compatible with communication with the Compute Service APIs.
            </summary>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.ListAddresses(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.ListAddressesByNetwork(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.Converters.IPAddressDetailsConverter.AddressDetails.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.Converters.IPAddressDetailsConverter.AddressDetails"/> class.
            </summary>
            <remarks>
            This constructor is used for JSON deserialization.
            </remarks>
        </member>
        <member name="M:net.openstack.Core.Domain.Converters.IPAddressDetailsConverter.AddressDetails.#ctor(System.Net.IPAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.Converters.IPAddressDetailsConverter.AddressDetails"/> class
            using the given IP address.
            </summary>
            <param name="address">The IP address.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="address"/> is <c>null</c>.</exception>
        </member>
        <member name="P:net.openstack.Core.Domain.Converters.IPAddressDetailsConverter.AddressDetails.Address">
            <summary>
            Gets the network address. This is an IPv4 address if <see cref="P:net.openstack.Core.Domain.Converters.IPAddressDetailsConverter.AddressDetails.Version"/> is <c>"4"</c>,
            or an IPv6 address if <see cref="P:net.openstack.Core.Domain.Converters.IPAddressDetailsConverter.AddressDetails.Version"/> is <c>"6"</c>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Converters.IPAddressDetailsConverter.AddressDetails.Version">
            <summary>
            Gets the network address version. The value is either <c>"4"</c> or <c>"6"</c>.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.Mapping.NamespaceDoc">
            <summary>
            The <see cref="N:net.openstack.Core.Domain.Mapping"/> namespace defines interfaces
            and classes for mapping between various object types. Mappings are bidirectional
            converters limited to operating on two specific types.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.NamespaceDoc">
            <summary>
            The <see cref="N:net.openstack.Core.Domain"/> namespaces define the provider-independent
            object model for calling the OpenStack REST APIs.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.ProviderStateBase`1">
            <summary>
            Provides a base class for domain objects which require access to the
            provider which created them.
            </summary>
            <typeparam name="T">The provider type.</typeparam>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Core.Domain.ProviderStateBase`1.Provider">
            <summary>
            Gets the provider which created the instance.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.ProviderStateBase`1.Region">
            <summary>
            Gets the region where the current entity resides.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.ProviderStateBase`1.Identity">
            <summary>
            Gets the identity the current entity belongs to, or <c>null</c> if
            the identity was not explicitly specified in the request that created
            this object (i.e. the default identity of <see cref="P:net.openstack.Core.Domain.ProviderStateBase`1.Provider"/> was
            used).
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.ServerBase">
            <summary>
            Provides basic information about a server.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Servers-d1e2073.html">Servers (OpenStack Compute API v2 and Extensions Reference - API v2)</seealso>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/Servers-d1e2073.html">Servers (Rackspace Next Generation Cloud Servers Developer Guide  - API v2)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.ServerBase.UpdateThis(net.openstack.Core.Domain.ServerBase)">
            <summary>
            Updates the current instance to match the information in <paramref name="server"/>.
            </summary>
            <remarks>
            <note type="implement">
            This method should be overridden in derived types to ensure all properties
            for the current instance are updated.
            </note>
            </remarks>
            <param name="server">The updated information for the current server.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="server"/> is <c>null</c>.</exception>
        </member>
        <member name="M:net.openstack.Core.Domain.ServerBase.WaitForActive(System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32})">
             <summary>
             Waits for the server to enter the <see cref="P:net.openstack.Core.Domain.ServerState.Active"/> state.
             </summary>
             <remarks>
             When the method returns, the current instance is updated to reflect the state
             of the server at the end of the operation.
            
             <note type="caller">
             This is a blocking operation and will not return until the server enters the <see cref="P:net.openstack.Core.Domain.ServerState.Active"/> state, an error state, or the retry count is exceeded.
             </note>
             </remarks>
             <param name="refreshCount">Number of times to poll the server's status.</param>
             <param name="refreshDelay">The time to wait between polling requests for the server status. If this value is <c>null</c>, the default is 2.4 seconds.</param>
             <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:net.openstack.Core.Domain.Server.Progress"/> value increases. If this value is <c>null</c>, progress updates are not reported.</param>
             <exception cref="T:System.ArgumentOutOfRangeException">
             If <paramref name="refreshCount"/> is less than 0.
             <para>-or-</para>
             <para>If <paramref name="refreshDelay"/> is negative.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Core.Domain.ServerBase.WaitForDeleted(System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32})">
            <summary>
            Waits for the server to enter the <see cref="P:net.openstack.Core.Domain.ServerState.Deleted"/> state.
            </summary>
            <remarks>
            <note type="caller">
            This is a blocking operation and will not return until the server enters the <see cref="P:net.openstack.Core.Domain.ServerState.Deleted"/> state, an error state, or the retry count is exceeded.
            </note>
            </remarks>
            <param name="refreshCount">Number of times to poll the server's status.</param>
            <param name="refreshDelay">The time to wait between polling requests for the server status. If this value is <c>null</c>, the default is 2.4 seconds.</param>
            <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:net.openstack.Core.Domain.Server.Progress"/> value increases. If this value is <c>null</c>, progress updates are not reported.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Core.Domain.ServerBase.WaitForState(net.openstack.Core.Domain.ServerState,net.openstack.Core.Domain.ServerState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32})">
             <summary>
             Waits for the server to enter a specified state.
             </summary>
             <remarks>
             When the method returns, the current instance is updated to reflect the state
             of the server at the end of the operation.
            
             <note type="caller">
             This is a blocking operation and will not return until the server enters either an expected state, an error state, or the retry count is exceeded.
             </note>
             </remarks>
             <param name="expectedState">The expected state.</param>
             <param name="errorStates">The error state(s) in which to throw an exception if the server enters.</param>
             <param name="refreshCount">Number of times to poll the server's status.</param>
             <param name="refreshDelay">The time to wait between polling requests for the server status. If this value is <c>null</c>, the default is 2.4 seconds.</param>
             <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:net.openstack.Core.Domain.Server.Progress"/> value increases. If this value is <c>null</c>, progress updates are not reported.</param>
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="expectedState"/> is <c>null</c>.
             <para>-or-</para>
             <para>If <paramref name="errorStates"/> is <c>null</c>.</para>
             </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
             If <paramref name="refreshCount"/> is less than 0.
             <para>-or-</para>
             <para>If <paramref name="refreshDelay"/> is negative.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.ServerEnteredErrorStateException">If the method returned due to the server entering one of the <paramref name="errorStates"/>.</exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Core.Domain.ServerBase.WaitForState(net.openstack.Core.Domain.ServerState[],net.openstack.Core.Domain.ServerState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32})">
             <summary>
             Waits for the server to enter any one of a set of specified states.
             </summary>
             <remarks>
             When the method returns, the current instance is updated to reflect the state
             of the server at the end of the operation.
            
             <note type="caller">
             This is a blocking operation and will not return until the server enters either an expected state, an error state, or the retry count is exceeded.
             </note>
             </remarks>
             <param name="expectedStates">The expected state(s).</param>
             <param name="errorStates">The error state(s) in which to throw an exception if the server enters.</param>
             <param name="refreshCount">Number of times to poll the server's status.</param>
             <param name="refreshDelay">The time to wait between polling requests for the server status. If this value is <c>null</c>, the default is 2.4 seconds.</param>
             <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:net.openstack.Core.Domain.Server.Progress"/> value increases. If this value is <c>null</c>, progress updates are not reported.</param>
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="expectedStates"/> is <c>null</c>.
             <para>-or-</para>
             <para>If <paramref name="errorStates"/> is <c>null</c>.</para>
             </exception>
             <exception cref="T:System.ArgumentException">
             If <paramref name="expectedStates"/> is empty.
             </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
             If <paramref name="refreshCount"/> is less than 0.
             <para>-or-</para>
             <para>If <paramref name="refreshDelay"/> is negative.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.ServerEnteredErrorStateException">If the method returned due to the server entering one of the <paramref name="errorStates"/>.</exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Core.Domain.ServerBase.SoftReboot">
            <summary>
            Initiates an asynchronous soft reboot operation on the specified server.
            </summary>
            <returns><c>true</c> if the reboot operation was successfully initiated; otherwise <c>false</c>.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support soft reboot operations.
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="P:net.openstack.Core.Domain.RebootType.Soft"/>
        </member>
        <member name="M:net.openstack.Core.Domain.ServerBase.HardReboot">
            <summary>
            Initiates an asynchronous hard reboot operation on the specified server.
            </summary>
            <returns><c>true</c> if the reboot operation was successfully initiated; otherwise <c>false</c>.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support hard reboot operations.
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="P:net.openstack.Core.Domain.RebootType.Hard"/>
        </member>
        <member name="M:net.openstack.Core.Domain.ServerBase.Rebuild(System.String,System.String,System.String,System.String,System.Net.IPAddress,System.Net.IPAddress,net.openstack.Core.Domain.Metadata,net.openstack.Core.Domain.DiskConfiguration,net.openstack.Core.Domain.Personality)">
            <summary>
            Initiates an asynchronous rebuild of the server.
            </summary>
            <remarks>
            When the method returns, the current instance is updated to reflect the state
            of the server at the end of the operation.
            </remarks>
            <param name="name">The new name for the server. If the value is <c>null</c>, the server name is not changed.</param>
            <param name="imageId">The image to rebuild the server from. This is specified as an image ID (see <see cref="P:net.openstack.Core.Domain.SimpleServerImage.Id"/>) or a full URL.</param>
            <param name="flavor">The new flavor for server. This is obtained from <see cref="P:net.openstack.Core.Domain.Flavor.Id"/>.</param>
            <param name="adminPassword">The new admin password for the server.</param>
            <param name="accessIPv4">The new IP v4 address for the server. If the value is <c>null</c>, the server's IP v4 address is not updated.</param>
            <param name="accessIPv6">The new IP v6 address for the server. If the value is <c>null</c>, the server's IP v6 address is not updated.</param>
            <param name="metadata">The list of metadata to associate with the server. If the value is <c>null</c>, the metadata associated with the server is not changed during the rebuild operation.</param>
            <param name="diskConfig">The disk configuration. If the value is <c>null</c>, the default configuration for the specified image is used.</param>
            <param name="personality">The path and contents of a file to inject in the target file system during the rebuild operation. If the value is <c>null</c>, no file is injected.</param>
            <returns><c>true</c> if the rebuild operation was successfully initiated; otherwise <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="imageId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="flavor"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="adminPassword"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="name"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="flavor"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="adminPassword"/> is empty.</para>
            <para>-or-</para>
            <para>If the <see cref="T:System.Net.Sockets.AddressFamily"/> of <paramref name="accessIPv4"/> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork"/></para>
            <para>-or-</para>
            <para>If the <see cref="T:System.Net.Sockets.AddressFamily"/> of <paramref name="accessIPv6"/> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6"/></para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="diskConfig"/>.
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Core.Domain.ServerBase.Resize(System.String,System.String,net.openstack.Core.Domain.DiskConfiguration)">
            <summary>
            Initiates an asynchronous resize of the server. A server resize is performed by
            specifying a new <see cref="T:net.openstack.Core.Domain.Flavor"/> for the server.
            </summary>
            <remarks>
            Following a resize operation, the original server is not immediately removed. After testing
            if the resulting server is operating successfully, a call should be made to <see cref="M:net.openstack.Core.Domain.ServerBase.ConfirmResize"/>
            to keep the resized server, or to <see cref="M:net.openstack.Core.Domain.ServerBase.RevertResize"/> to revert to the original server.
            If 24 hours pass and neither of these methods is called, the server will be automatically confirmed.
            </remarks>
            <param name="name">The new name for the resized server.</param>
            <param name="flavor">The new flavor. This is obtained from <see cref="P:net.openstack.Core.Domain.Flavor.Id">Flavor.Id</see>.</param>
            <param name="diskConfig">The disk configuration. If the value is <c>null</c>, the default configuration for the specified image is used.</param>
            <returns><c>true</c> if the resize operation is successfully started; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="name"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="flavor"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="name"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="flavor"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="diskConfig"/>.
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Core.Domain.ServerBase.ConfirmResize">
            <summary>
            Confirms a completed asynchronous server resize action.
            </summary>
            <remarks>
            If a server resize operation is not manually confirmed or reverted within 24 hours,
            the operation is automatically confirmed.
            </remarks>
            <returns><c>true</c> if the resize operation was confirmed; otherwise, <c>false</c>.</returns>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Core.Domain.ServerBase.RevertResize">
            <summary>
            Cancels and reverts a server resize action.
            </summary>
            <remarks>
            If a server resize operation is not manually confirmed or reverted within 24 hours,
            the operation is automatically confirmed.
            </remarks>
            <returns><c>true</c> if the resize operation was reverted; otherwise, <c>false</c>.</returns>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Core.Domain.ServerBase.Rescue">
             <summary>
             Places the server in rescue mode.
             </summary>
             <remarks>
             This operation is completed asynchronously. To wait for the server to enter rescue mode,
             call <see cref="O:WaitForState"/> with the state <see cref="P:net.openstack.Core.Domain.ServerState.Rescue"/>.
            
             <note>
             The provider may limit the duration of rescue mode, after which the rescue image is destroyed
             and the server attempts to reboot. Rescue mode may be explicitly exited at any time by
             calling <see cref="M:net.openstack.Core.Domain.ServerBase.UnRescue"/>.
             </note>
             </remarks>
             <returns>The root password assigned for use during rescue mode.</returns>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Core.Domain.ServerBase.UnRescue">
             <summary>
             Takes the server out of rescue mode.
             </summary>
             <remarks>
             This operation is completed asynchronously. To wait for the server to exit rescue mode,
             call <see cref="O:WaitForActive"/>.
            
             <note>
             The provider may limit the duration of rescue mode, after which the rescue image is destroyed
             and the server attempts to reboot. Rescue mode may be explicitly exited at any time by
             calling <see cref="M:net.openstack.Core.Domain.ServerBase.UnRescue"/>.
             </note>
             </remarks>
             <returns><c>true</c> if the server exited rescue mode; otherwise, <c>false</c>.</returns>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Core.Domain.ServerBase.CreateSnapshot(System.String,net.openstack.Core.Domain.Metadata)">
            <summary>
            Creates a new snapshot image for a specified server at its current state.
            </summary>
            <remarks>
            The server snapshot process is completed asynchronously. To wait for the image
            to be completed, you may call <see cref="M:net.openstack.Core.Providers.IComputeProvider.WaitForImageActive(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,net.openstack.Core.Domain.CloudIdentity)"/>.
            </remarks>
            <param name="imageName">Name of the new image.</param>
            <param name="metadata">The metadata to associate to the new image.</param>
            <returns><c>true</c> if the image creation process was successfully started; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="imageName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="imageName"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Core.Domain.ServerBase.GetDetails">
            <summary>
            Gets the detailed information for the server.
            </summary>
            <returns>A <see cref="T:net.openstack.Core.Domain.Server"/> object containing the details for the server.</returns>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Core.Domain.ServerBase.ListVolumes">
            <summary>
            Lists the volume attachments for the server.
            </summary>
            <returns>A collection of <see cref="T:net.openstack.Core.Domain.ServerVolume"/> objects describing the volumes attached to the server.</returns>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Core.Domain.ServerBase.AttachVolume(System.String,System.String)">
            <summary>
            Attaches a volume to the server.
            </summary>
            <param name="volumeId">The volume ID. This is obtained from <see cref="P:net.openstack.Core.Domain.Volume.Id"/>.</param>
            <param name="storageDevice">The name of the device, such as <localUri>/dev/xvdb</localUri>. If the value is <c>null</c>, an automatically generated device name will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.ServerVolume"/> object containing the details about the volume.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="volumeId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="volumeId"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Core.Domain.ServerBase.DetachVolume(System.String)">
            <summary>
            Detaches the specified volume from the server.
            </summary>
            <param name="volumeId">The volume attachment ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerVolume.Id">ServerVolume.Id</see>.</param>
            <returns><c>true</c> if the volume was successfully detached; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="volumeId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="volumeId"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Core.Domain.ServerBase.Refresh">
            <summary>
            Updates the current instance to match the values in the <see cref="T:net.openstack.Core.Domain.Server"/>
            instance returned from a call to <see cref="M:net.openstack.Core.Domain.ServerBase.GetDetails"/>.
            </summary>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerBase.Id">
            <summary>
            Gets the unique identifier for the server.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerBase.Links">
            <summary>
            Gets a collection of links related to the current server.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/LinksReferences.html">Links and References (OpenStack Compute API v2 and Extensions Reference - API v2)</seealso>
        </member>
        <member name="T:net.openstack.Core.Domain.ServerImage">
            <summary>
            Extends <see cref="T:net.openstack.Core.Domain.SimpleServerImage"/> with detailed information about an image.
            </summary>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.ListImagesWithDetails(System.String,System.String,net.openstack.Core.Domain.ImageState,System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Int32},net.openstack.Core.Domain.ImageType,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.GetImage(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Get_Image_Details-d1e4848.html">Get Image Details (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="T:net.openstack.Core.Domain.SimpleServerImage">
            <summary>
            Provides basic information about an image.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Images-d1e4427.html">Images (OpenStack Compute API v2 and Extensions Reference - API v2)</seealso>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/Images-d1e4427.html">Images (Rackspace Next Generation Cloud Servers Developer Guide  - API v2)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.SimpleServerImage.WaitForActive(System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32})">
             <summary>
             Waits for the image to enter the <see cref="P:net.openstack.Core.Domain.ImageState.Active"/> state.
             </summary>
             <remarks>
             When the method returns, the current instance is updated to reflect the state
             of the image at the end of the operation.
            
             <note type="caller">
             This is a blocking operation and will not return until the image enters either the
             <see cref="P:net.openstack.Core.Domain.ImageState.Active"/> state, an error state, or the retry count is exceeded.
             </note>
             </remarks>
             <param name="refreshCount">Number of times to poll the image's status.</param>
             <param name="refreshDelay">The time to wait between polling requests for the image status. If this value is <c>null</c>, the default is 2.4 seconds.</param>
             <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:net.openstack.Core.Domain.ServerImage.Progress"/> value increases. If this value is <c>null</c>, progress updates are not reported.</param>
             <exception cref="T:System.ArgumentOutOfRangeException">
             If <paramref name="refreshCount"/> is less than 0.
             <para>-or-</para>
             <para>If <paramref name="refreshDelay"/> is negative.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.WaitForImageActive(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,net.openstack.Core.Domain.CloudIdentity)"/>
        </member>
        <member name="M:net.openstack.Core.Domain.SimpleServerImage.WaitForDelete(System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32})">
            <summary>
            Waits for the image to enter the <see cref="P:net.openstack.Core.Domain.ImageState.Deleted"/> state or to be removed.
            </summary>
            <remarks>
            <note type="warning">
            This is a blocking operation and will not return until the image enters either the
            <see cref="P:net.openstack.Core.Domain.ImageState.Deleted"/> state, an error state, is removed, or the retry count is exceeded.
            </note>
            </remarks>
            <param name="refreshCount">Number of times to poll the image's status.</param>
            <param name="refreshDelay">The time to wait between polling requests for the image status. If this value is <c>null</c>, the default is 2.4 seconds.</param>
            <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:net.openstack.Core.Domain.ServerImage.Progress"/> value increases. If this value is <c>null</c>, progress updates are not reported.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.WaitForImageDeleted(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,net.openstack.Core.Domain.CloudIdentity)"/>
        </member>
        <member name="M:net.openstack.Core.Domain.SimpleServerImage.WaitForState(net.openstack.Core.Domain.ImageState,net.openstack.Core.Domain.ImageState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32})">
             <summary>
             Waits for the image to enter a specified state.
             </summary>
             <remarks>
             When the method returns, the current instance is updated to reflect the state
             of the image at the end of the operation.
            
             <note type="caller">
             This is a blocking operation and will not return until the image enters either the expected state, an error state, or the retry count is exceeded.
             </note>
             </remarks>
             <param name="expectedState">The expected state.</param>
             <param name="errorStates">The error state(s) in which to throw an exception if the image enters.</param>
             <param name="refreshCount">Number of times to poll the image's status.</param>
             <param name="refreshDelay">The time to wait between polling requests for the image status. If this value is <c>null</c>, the default is 2.4 seconds.</param>
             <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:net.openstack.Core.Domain.ServerImage.Progress"/> value increases. If this value is <c>null</c>, progress updates are not reported.</param>
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="expectedState"/> is <c>null</c>.
             <para>-or-</para>
             <para>If <paramref name="errorStates"/> is <c>null</c>.</para>
             </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
             If <paramref name="refreshCount"/> is less than 0.
             <para>-or-</para>
             <para>If <paramref name="refreshDelay"/> is negative.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.ImageEnteredErrorStateException">If the method returned due to the image entering one of the <paramref name="errorStates"/>.</exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.WaitForImageState(System.String,net.openstack.Core.Domain.ImageState,net.openstack.Core.Domain.ImageState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,net.openstack.Core.Domain.CloudIdentity)"/>
        </member>
        <member name="M:net.openstack.Core.Domain.SimpleServerImage.WaitForState(net.openstack.Core.Domain.ImageState[],net.openstack.Core.Domain.ImageState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32})">
             <summary>
             Waits for the image to enter any one of a set of specified states.
             </summary>
             <remarks>
             When the method returns, the current instance is updated to reflect the state
             of the image at the end of the operation.
            
             <note type="caller">
             This is a blocking operation and will not return until the image enters either an expected state, an error state, or the retry count is exceeded.
             </note>
             </remarks>
             <param name="expectedStates">The expected state(s).</param>
             <param name="errorStates">The error state(s) in which to throw an exception if the image enters.</param>
             <param name="refreshCount">Number of times to poll the image's status.</param>
             <param name="refreshDelay">The time to wait between polling requests for the image status. If this value is <c>null</c>, the default is 2.4 seconds.</param>
             <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:net.openstack.Core.Domain.ServerImage.Progress"/> value increases. If this value is <c>null</c>, progress updates are not reported.</param>
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="expectedStates"/> is <c>null</c>.
             <para>-or-</para>
             <para>If <paramref name="errorStates"/> is <c>null</c>.</para>
             </exception>
             <exception cref="T:System.ArgumentException">If <paramref name="expectedStates"/> is empty.</exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
             If <paramref name="refreshCount"/> is less than 0.
             <para>-or-</para>
             <para>If <paramref name="refreshDelay"/> is negative.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.ImageEnteredErrorStateException">If the method returned due to the image entering one of the <paramref name="errorStates"/>.</exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.WaitForImageState(System.String,net.openstack.Core.Domain.ImageState[],net.openstack.Core.Domain.ImageState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,net.openstack.Core.Domain.CloudIdentity)"/>
        </member>
        <member name="M:net.openstack.Core.Domain.SimpleServerImage.UpdateThis(net.openstack.Core.Domain.SimpleServerImage)">
            <summary>
            Updates the current instance to match the information in <paramref name="serverImage"/>.
            </summary>
            <remarks>
            <note type="implement">
            This method should be overridden in derived types to ensure all properties
            for the current instance are updated.
            </note>
            </remarks>
            <param name="serverImage">The updated information for the current image.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="serverImage"/> is <c>null</c>.</exception>
        </member>
        <member name="M:net.openstack.Core.Domain.SimpleServerImage.Delete">
            <summary>
            Deletes the specified image.
            </summary>
            <returns><c>true</c> if the image was successfully deleted; otherwise, <c>false</c>.</returns>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.DeleteImage(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Delete_Image-d1e4957.html">Delete Image (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.SimpleServerImage.Id">
            <summary>
            Gets the unique identifier for the image.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.SimpleServerImage.Links">
            <summary>
            Gets a collection of links related to the current image.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/LinksReferences.html">Links and References (OpenStack Compute API v2 and Extensions Reference - API v2)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.SimpleServerImage.Name">
            <summary>
            Gets the name of the image.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="F:net.openstack.Core.Domain.ServerImage._server">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Core.Domain.ServerImage.Server"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Core.Domain.ServerImage.UpdateThis(net.openstack.Core.Domain.SimpleServerImage)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Core.Domain.ServerImage.GetMetadata">
            <summary>
            Gets the metadata associated with the specified image.
            </summary>
            <returns>A <see cref="T:net.openstack.Core.Domain.Metadata"/> object containing the metadata associated with the image.</returns>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.ListImageMetadata(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Metadata-d1e5089.html">List Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Domain.ServerImage.SetMetadata(net.openstack.Core.Domain.Metadata)">
            <summary>
            Sets the metadata associated with the specified image, replacing any existing metadata.
            </summary>
            <param name="metadata">The metadata to associate with the image.</param>
            <returns><c>true</c> if the metadata for the image was successfully updated; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="metadata"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="metadata"/> contains any values with null or empty keys.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.SetImageMetadata(System.String,net.openstack.Core.Domain.Metadata,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_or_Replace_Metadata-d1e5358.html">Set Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Domain.ServerImage.AddMetadata(net.openstack.Core.Domain.Metadata)">
            <summary>
            Updates the metadata for the specified image.
            </summary>
            <remarks>
            For each item in <paramref name="metadata"/>, if the key exists, the value is updated; otherwise, the item is added.
            </remarks>
            <param name="metadata">The image metadata to update.</param>
            <returns><c>true</c> if the metadata for the image was successfully updated; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="metadata"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="metadata"/> contains any values with null or empty keys.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.UpdateImageMetadata(System.String,net.openstack.Core.Domain.Metadata,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Update_Metadata-d1e5208.html">Update Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Domain.ServerImage.AddMetadata(System.String,System.String)">
            <summary>
            Sets the value for the specified metadata item. If the key already exists, it is updated; otherwise, a new metadata item is added.
            </summary>
            <param name="key">The metadata key.</param>
            <param name="value">The new value for the metadata item.</param>
            <returns><c>true</c> if the metadata for the image was successfully updated; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="key"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="value"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="key"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.SetImageMetadataItem(System.String,System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_or_Update_a_Metadata_Item-d1e5633.html">Set Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Domain.ServerImage.UpdateMetadata(net.openstack.Core.Domain.Metadata)">
            <summary>
            Updates the metadata for the specified image.
            </summary>
            <remarks>
            For each item in <paramref name="metadata"/>, if the key exists, the value is updated; otherwise, the item is added.
            </remarks>
            <param name="metadata">The image metadata to update.</param>
            <returns><c>true</c> if the metadata for the image was successfully updated; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="metadata"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="metadata"/> contains any values with null or empty keys.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.UpdateImageMetadata(System.String,net.openstack.Core.Domain.Metadata,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Update_Metadata-d1e5208.html">Update Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Domain.ServerImage.DeleteMetadata(net.openstack.Core.Domain.Metadata)">
            <summary>
            Deletes the specified metadata items from the image.
            </summary>
            <remarks>
            <note>
            This method ignores the values in <paramref name="metadata"/>. Metadata items are
            removed whether or not their current values match those in <paramref name="metadata"/>.
            </note>
            </remarks>
            <param name="metadata">A collection of metadata items to delete.</param>
            <returns><c>true</c> if all of the metadata item were removed; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="metadata"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="metadata"/> contains a null or empty key.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.DeleteImageMetadataItem(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Delete_Metadata_Item-d1e5790.html">Delete Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Domain.ServerImage.DeleteMetadataItem(System.String)">
            <summary>
            Deletes the specified metadata item from the image.
            </summary>
            <param name="key">The metadata key.</param>
            <returns><c>true</c> if the metadata item was removed; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="key"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="key"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.DeleteImageMetadataItem(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Delete_Metadata_Item-d1e5790.html">Delete Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Domain.ServerImage.UpdateMetadataItem(System.String,System.String)">
            <summary>
            Sets the value for the specified metadata item. If the key already exists, it is updated; otherwise, a new metadata item is added.
            </summary>
            <param name="key">The metadata key.</param>
            <param name="value">The new value for the metadata item.</param>
            <returns><c>true</c> if the metadata for the image was successfully updated; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="key"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="value"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="key"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.SetImageMetadataItem(System.String,System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_or_Update_a_Metadata_Item-d1e5633.html">Set Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerImage.DiskConfig">
            <summary>
            Gets the default disk configuration used when creating, rebuilding, or resizing servers
            with the image. For images created from servers, the value is inherited from the server.
            </summary>
            <remarks>
            <note>This property is defined by the Rackspace-specific Disk Configuration Extension to the OpenStack Compute API.</note>
            </remarks>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/ch_extensions.html#diskconfig_attribute">Disk Configuration Extension (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerImage.Status">
            <summary>
            Gets the "status" property of the image.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerImage.Created">
            <summary>
            Gets the "created" property of the image.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerImage.Progress">
            <summary>
            Gets the image completion progress, as a percentage.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <value>A percentage from 0 to 100 (inclusive) representing the image completion progress.</value>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerImage.Updated">
            <summary>
            Gets the "updated" property of the image.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerImage.MinDisk">
            <summary>
            Gets the minimum disk requirements needed to create a server with the image.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Images-d1e4435.html">List Images (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerImage.Server">
            <summary>
            Gets the "server" property of the image.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerImage.MinRAM">
            <summary>
            Gets the minimum RAM requirements needed to create a server with the image.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Images-d1e4435.html">List Images (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="T:net.openstack.Core.Domain.SimpleServer">
            <summary>
            This models the basic JSON description of a server.
            </summary>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.ListServers(System.String,System.String,System.String,net.openstack.Core.Domain.ServerState,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.SimpleServer.UpdateThis(net.openstack.Core.Domain.ServerBase)">
            <inheritdoc/>
        </member>
        <member name="P:net.openstack.Core.Domain.SimpleServer.Name">
            <summary>
            Gets the server name.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.Snapshot">
            <summary>
            This models the basic JSON description of a snapshot.
            </summary>
            <seealso cref="M:net.openstack.Core.Providers.IBlockStorageProvider.ListSnapshots(System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Core.Domain.Snapshot.Id">
            <summary>
            Gets the unique identifier for the snapshot.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Snapshot.DisplayName">
            <summary>
            Gets the name of the snapshot.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Snapshot.DisplayDescription">
            <summary>
            Gets the description of the snapshot.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Snapshot.VolumeId">
            <summary>
            Gets the ID of the volume this snapshot was taken from.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <seealso cref="P:net.openstack.Core.Domain.Volume.Id"/>
        </member>
        <member name="P:net.openstack.Core.Domain.Snapshot.Status">
            <summary>
            Gets the status of the snapshot.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Snapshot.Size">
            <summary>
            Gets the "size" property of the snapshot.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Snapshot.CreatedAt">
            <summary>
            Gets the "created_at" property of the snapshot.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.TaskState">
             <summary>
             Represents the task status of a server.
             </summary>
             <remarks>
             This class functions as a strongly-typed enumeration of known task states,
             with added support for unknown states returned by a server extension.
            
             <note>
             This property is defined by the Rackspace-specific Extended Status Extension
             to the OpenStack Compute API. The API does not regulate the status values,
             so it is possible that values can be added, removed, or renamed.
             </note>
             </remarks>
             <seealso cref="P:net.openstack.Core.Domain.Server.TaskState"/>
             <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/ch_extensions.html#task_state">OS-EXT-STS:task_state (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
             <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.TaskState.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.TaskState"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Core.Domain.TaskState.FromName(System.String)">
            <summary>
            Gets the <see cref="T:net.openstack.Core.Domain.TaskState"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Core.Domain.TaskState.BlockDeviceMapping">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.TaskState.Deleting">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.TaskState.ImageSnapshot">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.TaskState.ImageBackup">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.TaskState.Migrating">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.TaskState.Networking">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.TaskState.Pausing">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.TaskState.PoweringOff">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.TaskState.PoweringOn">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.TaskState.Rebooting">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.TaskState.RebootingHard">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.TaskState.Rebuilding">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.TaskState.RebuildBlockDeviceMapping">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.TaskState.RebuildSpawning">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.TaskState.Rescuing">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.TaskState.ResizeConfirming">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.TaskState.ResizeFinish">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.TaskState.ResizeMigrated">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.TaskState.ResizeMigrating">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.TaskState.ResizePrep">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.TaskState.ResizeReverting">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.TaskState.Resuming">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.TaskState.Scheduling">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.TaskState.Spawning">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.TaskState.Starting">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.TaskState.Stopping">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.TaskState.Suspending">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.TaskState.Unpausing">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.TaskState.Unrescuing">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.TaskState.UpdatingPassword">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.TaskState.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Core.Domain.TaskState"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.TaskState.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Core.Domain.VirtualInterface">
            <summary>
            Represents the detailed configuration of a virtual network interface.
            </summary>
            <remarks>
            <note>
            Virtual network interfaces are a Rackspace-specific extension to the OpenStack Networking Service.
            </note>
            </remarks>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/list_virt_interfaces.html">List Virtual Interfaces (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Core.Domain.VirtualInterface.Id">
            <summary>
            Gets the virtual interface ID.
            </summary>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/list_virt_interfaces.html">List Virtual Interfaces (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.VirtualInterface.Addresses">
            <summary>
            Gets the network addresses associated with the virtual interface.
            </summary>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/list_virt_interfaces.html">List Virtual Interfaces (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.VirtualInterface.MACAddress">
            <summary>
            Gets the Media Access Control (MAC) address for the virtual interface.
            </summary>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/list_virt_interfaces.html">List Virtual Interfaces (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
        </member>
        <member name="T:net.openstack.Core.Domain.VirtualInterfaceAddress">
            <summary>
            Represents the IP address of a virtual interface on a specific network.
            </summary>
            <remarks>
            <note>
            Virtual network interfaces are a Rackspace-specific extension to the OpenStack Networking Service.
            </note>
            </remarks>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/list_virt_interfaces.html">List Virtual Interfaces (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Core.Domain.VirtualInterfaceAddress.Address">
            <summary>
            Gets the IP address of the virtual interface.
            </summary>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/list_virt_interfaces.html">List Virtual Interfaces (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.VirtualInterfaceAddress.NetworkId">
            <summary>
            Gets the ID of the network this virtual interface is connected to.
            </summary>
            <seealso cref="P:net.openstack.Core.Domain.CloudNetwork.Id"/>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/list_virt_interfaces.html">List Virtual Interfaces (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.VirtualInterfaceAddress.NetworkLabel">
            <summary>
            Gets the label of the network this virtual interface is connected to.
            </summary>
            <seealso cref="P:net.openstack.Core.Domain.CloudNetwork.Label"/>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/list_virt_interfaces.html">List Virtual Interfaces (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
        </member>
        <member name="T:net.openstack.Core.Domain.VirtualMachineState">
             <summary>
             Represents the virtual machine (VM) state of a server.
             </summary>
             <remarks>
             This class functions as a strongly-typed enumeration of known virtual machine states,
             with added support for unknown states returned by a server extension.
            
             <note>
             This property is defined by the Rackspace-specific Extended Status Extension
             to the OpenStack Compute API. The API does not regulate the status values,
             so it is possible that values can be added, removed, or renamed.
             </note>
             </remarks>
             <seealso cref="P:net.openstack.Core.Domain.Server.VMState"/>
             <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/ch_extensions.html#vm_state">OS-EXT-STS:vm_state (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
             <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.VirtualMachineState.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.VirtualMachineState"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Core.Domain.VirtualMachineState.FromName(System.String)">
            <summary>
            Gets the <see cref="T:net.openstack.Core.Domain.VirtualMachineState"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Core.Domain.VirtualMachineState.Active">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.VirtualMachineState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.VirtualMachineState.Build">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.VirtualMachineState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.VirtualMachineState.Deleted">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.VirtualMachineState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.VirtualMachineState.Error">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.VirtualMachineState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.VirtualMachineState.Paused">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.VirtualMachineState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.VirtualMachineState.Rescued">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.VirtualMachineState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.VirtualMachineState.Resized">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.VirtualMachineState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.VirtualMachineState.SoftDeleted">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.VirtualMachineState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.VirtualMachineState.Stopped">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.VirtualMachineState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.VirtualMachineState.Suspended">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.VirtualMachineState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.VirtualMachineState.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Core.Domain.VirtualMachineState"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.VirtualMachineState.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Core.Domain.Volume">
            <summary>
            Represents a volume in a block storage provider.
            </summary>
            <seealso cref="T:net.openstack.Core.Providers.IBlockStorageProvider"/>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Core.Domain.Volume.Id">
            <summary>
            Gets the unique identifier for the volume.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Volume.DisplayName">
            <summary>
            Gets the "display_name" property of this volume.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <remarks>
            <note>
            This property is a Rackspace-specific extension to the OpenStack Block Storage Service.
            </note>
            </remarks>
        </member>
        <member name="P:net.openstack.Core.Domain.Volume.DisplayDescription">
            <summary>
            Gets the "display_description" property of this volume.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <remarks>
            <note>
            This property is a Rackspace-specific extension to the OpenStack Block Storage Service.
            </note>
            </remarks>
        </member>
        <member name="P:net.openstack.Core.Domain.Volume.Size">
            <summary>
            Gets the "size" property of this volume.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Volume.VolumeType">
            <summary>
            Gets the "volume_type" property of this volume.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Volume.SnapshotId">
            <summary>
            Gets the "snapshot_id" property of this volume.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <seealso cref="P:net.openstack.Core.Domain.Snapshot.Id"/>
        </member>
        <member name="P:net.openstack.Core.Domain.Volume.Attachments">
            <summary>
            Gets the "attachments" property of this volume.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Volume.Status">
            <summary>
            Gets the "status" property of this volume.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Volume.AvailabilityZone">
            <summary>
            Gets the "availability_zone" property of this volume.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Volume.CreatedAt">
            <summary>
            Gets the "created_at" property of this volume.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.VolumeState">
            <summary>
            Represents the state of a block storage volume.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known volume states,
            with added support for unknown states returned by a server extension.
            </remarks>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.VolumeState.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.VolumeState"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Core.Domain.VolumeState.FromName(System.String)">
            <summary>
            Gets the <see cref="T:net.openstack.Core.Domain.VolumeState"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Core.Domain.VolumeState.Creating">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.VolumeState"/> indicating the volume is being created.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.VolumeState.Available">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.VolumeState"/> indicating the volume is ready to be attached to an instance.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.VolumeState.Attaching">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.VolumeState"/> indicating the volume is attaching to an instance.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.VolumeState.InUse">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.VolumeState"/> indicating the volume is attached to an instance.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.VolumeState.Deleting">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.VolumeState"/> indicating the volume is being deleted.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.VolumeState.Error">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.VolumeState"/> indicating there has been some error with the volume.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.VolumeState.ErrorDeleting">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.VolumeState"/> indicating an error occurred while deleting the volume.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.VolumeState.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Core.Domain.VolumeState"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.VolumeState.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Core.Domain.VolumeType">
            <summary>
            Represents the type of a volume in the Block Storage service.
            </summary>
            <seealso cref="M:net.openstack.Core.Providers.IBlockStorageProvider.ListVolumeTypes(System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso cref="M:net.openstack.Core.Providers.IBlockStorageProvider.DescribeVolumeType(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Core.Domain.VolumeType.Id">
            <summary>
            Gets the unique identifier for this volume type.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.VolumeType.Name">
            <summary>
            Gets the name of the volume type.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.CloudNetwork">
            <summary>
            Represents the detailed information for a labeled network in Rackspace Cloud Networks.
            </summary>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/ch_overview.html">Overview (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Core.Domain.CloudNetwork.Id">
            <summary>
            Gets the network ID.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.CloudNetwork.Cidr">
            <summary>
            Gets the CIDR for the network.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.CloudNetwork.Label">
            <summary>
            Gets the name of the network.
            </summary>
            <remarks>
            The Rackspace Cloud Networks product predefines two networks:
            <list type="bullet">
            <item><newTerm>PublicNet</newTerm> provides access to the Internet, Rackspace services such as Cloud Monitoring, Managed Cloud Support, RackConnect, Cloud Backup, and certain operating system updates. When you list networks through Cloud Networks, PublicNet is labeled <c>public</c>.</item>
            <item><newTerm>ServiceNet</newTerm> Provides access to Rackspace services such as Cloud Files, Cloud Databases, and Cloud Backup, and to certain packages and patches through an internal only, multi-tenant network connection within each Rackspace data center. When you list networks through Cloud Networks, ServiceNet is labeled as <c>private</c>.</item>
            </list>
            </remarks>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/ch_overview.html">Overview (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
        </member>
        <member name="T:net.openstack.Core.Domain.Container">
            <summary>
            Represents the detailed information for a container stored in an Object Storage Provider.
            </summary>
            <seealso cref="T:net.openstack.Core.Providers.IObjectStorageProvider"/>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/s_serializedlistoutput.html">Serialized List Output (OpenStack Object Storage API v1 Reference)</seealso>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/Format_Container_List-d1e124.html">Format Container List (Rackspace Cloud Files Developer Guide - API v1)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Core.Domain.Container.Name">
            <summary>
            Gets the name of the container.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/s_serializedlistoutput.html">Serialized List Output (OpenStack Object Storage API v1 Reference)</seealso>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/Format_Container_List-d1e124.html">Format Container List (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.Container.Count">
            <summary>
            Gets the number of objects in the container.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
            <remarks>
            This field is <see href="http://en.wikipedia.org/wiki/Eventual_consistency">eventually consistent</see>.
            </remarks>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/s_serializedlistoutput.html">Serialized List Output (OpenStack Object Storage API v1 Reference)</seealso>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/Format_Container_List-d1e124.html">Format Container List (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.Container.Bytes">
            <summary>
            Gets the total space utilized by the objects in this container.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
            <remarks>
            This field is <see href="http://en.wikipedia.org/wiki/Eventual_consistency">eventually consistent</see>.
            </remarks>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/s_serializedlistoutput.html">Serialized List Output (OpenStack Object Storage API v1 Reference)</seealso>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/Format_Container_List-d1e124.html">Format Container List (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="T:net.openstack.Core.Domain.ContainerCDN">
            <summary>
            Provides the CDN properties for a container in an Object Storage provider.
            </summary>
            <remarks>
            <note>
            CDN-enabled containers are a Rackspace-specific extension to the OpenStack Object Storage Service.
            </note>
            </remarks>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/CDN_Container_Services-d1e2632.html">CDN Container Services (Rackspace Cloud Files Developer Guide - API v1)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.ContainerCDN.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int64,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.ContainerCDN"/> class with the specified properties.
            </summary>
            <param name="name">The name of the container (see <see cref="P:net.openstack.Core.Domain.ContainerCDN.Name"/>).</param>
            <param name="uri">The URI of the container (see <see cref="P:net.openstack.Core.Domain.ContainerCDN.CDNUri"/>).</param>
            <param name="streamingUri">A streaming URL (see <see cref="P:net.openstack.Core.Domain.ContainerCDN.CDNStreamingUri"/>).</param>
            <param name="sslUri">An SSL URL (see <see cref="P:net.openstack.Core.Domain.ContainerCDN.CDNSslUri"/>).</param>
            <param name="iosUri">The iOS URI of the container (see <see cref="P:net.openstack.Core.Domain.ContainerCDN.CDNIosUri"/>).</param>
            <param name="enabled">Whether or not the container is CDN-enabled (see <see cref="P:net.openstack.Core.Domain.ContainerCDN.CDNEnabled"/>).</param>
            <param name="ttl">The time-to-live (see <see cref="P:net.openstack.Core.Domain.ContainerCDN.Ttl"/>).</param>
            <param name="logRetention">Whether or not log retention is enabled (see <see cref="P:net.openstack.Core.Domain.ContainerCDN.LogRetention"/>).</param>
        </member>
        <member name="P:net.openstack.Core.Domain.ContainerCDN.Name">
            <summary>
            Gets the name of the container.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.ContainerCDN.CDNStreamingUri">
            <summary>
            Gets a streaming URL suitable for use in links to content you want to stream, such as video. If streaming is not available, the value is <c>null</c>.
            </summary>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/Streaming-CDN-Enabled_Containers-d1f3721.html">Streaming CDN-Enabled Containers (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.ContainerCDN.CDNSslUri">
            <summary>
            Gets a URL SSL URL for accessing the container on the CDN. If SSL is not available, the value is <c>null</c>.
            </summary>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/CDN-Enabled_Containers_Served_via_SSL-d1e2821.html">CDN-Enabled Containers Served through SSL (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.ContainerCDN.CDNEnabled">
            <summary>
            Gets a value indicating whether or not the container is CDN-Enabled.
            </summary>
            <value>
            <c>true</c> if the container is CDN-Enabled; otherwise, <c>false</c>.
            </value>
            <seealso cref="O:IObjectStorageProvider.EnableCDNOnContainer"/>
            <seealso cref="M:net.openstack.Core.Providers.IObjectStorageProvider.DisableCDNOnContainer(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/CDN-Enable_a_Container-d1e2665.html">CDN-Enable a Container (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.ContainerCDN.Ttl">
            <summary>
            Gets the Time To Live (TTL) in seconds for a CDN-Enabled container.
            </summary>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/CDN-Enable_a_Container-d1e2665.html">CDN-Enable a Container (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.ContainerCDN.LogRetention">
            <summary>
            Gets a value indicating whether or not log retention is enabled for a CDN-Enabled container.
            </summary>
            <remarks>
            This setting specifies whether the CDN access logs should be collected and stored in the Cloud Files storage system.
            </remarks>
            <value>
            <c>true</c> if log retention is enabled for the container; otherwise, <c>false</c>.
            </value>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/List_CDN-Enabled_Container_Metadata-d1e2711.html">List a CDN-Enabled Container's Metadata (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.ContainerCDN.CDNUri">
            <summary>
            Gets a publicly accessible URL for the container, which can be combined with any object name within the container to form the publicly accessible URL for that object for distribution over a CDN system.
            </summary>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/List_CDN-Enabled_Container_Metadata-d1e2711.html">List a CDN-Enabled Container's Metadata (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.ContainerCDN.CDNIosUri">
            <summary>
            Gets a publicly accessible URL for the container for use in streaming content to iOS devices. If iOS streaming is not available for the container, the value is <c>null</c>.
            </summary>
            <remarks>
            The <see cref="P:net.openstack.Core.Domain.ContainerCDN.CDNIosUri"/> may be combined with any object name within the container to form the publicly accessible URL for streaming that object to iOS devices.
            </remarks>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/iOS-Streaming-d1f3725.html">iOS Streaming (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="T:net.openstack.Core.Domain.ContainerObject">
            <summary>
            Provides the details of an object stored in an Object Storage provider.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Core.Domain.ContainerObject.Name">
            <summary>
            Gets a "name" associated with the object.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/serialized-list-output.html">Serialized List Output (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.ContainerObject.Hash">
            <summary>
            Gets the "hash" value associated with the object.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/serialized-list-output.html">Serialized List Output (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.ContainerObject.Bytes">
            <summary>
            Gets the "bytes" value associated with the object.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/serialized-list-output.html">Serialized List Output (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.ContainerObject.ContentType">
            <summary>
            Gets the "content type" value associated with the object.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/serialized-list-output.html">Serialized List Output (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.ContainerObject.LastModified">
            <summary>
            Gets the "last modified" value associated with the object.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/serialized-list-output.html">Serialized List Output (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="T:net.openstack.Core.Domain.Flavor">
            <summary>
            Provides basic information about a flavor. A flavor is an available hardware configuration for a server.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Flavors-d1e4180.html">Flavors (OpenStack Compute API v2 and Extensions Reference - API v2)</seealso>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/Flavors-d1e4180.html">Flavors (Rackspace Next Generation Cloud Servers Developer Guide  - API v2)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Core.Domain.Flavor.Id">
            <summary>
            Gets the unique identifier for the flavor.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Flavor.Links">
            <summary>
            Gets a collection of links related to the current flavor.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/LinksReferences.html">Links and References (OpenStack Compute API v2 and Extensions Reference - API v2)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.Flavor.Name">
            <summary>
            Gets the name of the flavor.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.FlavorDetails">
            <summary>
            Contains detailed information about a flavor.
            </summary>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.ListFlavorsWithDetails(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.GetFlavor(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Core.Domain.FlavorDetails.Disabled">
            <summary>
            Gets the "OS-FLV-DISABLED:disabled" property associated with the flavor.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.FlavorDetails.DiskSizeInGB">
            <summary>
            Gets the "disk" property associated with the flavor.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.FlavorDetails.RAMInMB">
            <summary>
            Gets the "ram" property associated with the flavor.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.FlavorDetails.VirtualCPUCount">
            <summary>
            Gets the "vcpus" property associated with the flavor.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="T:net.openstack.Core.Exceptions.ContainerNotEmptyException">
            <summary>
            Thrown when an Object Storage container operation fails because the specified container was not empty.
            </summary>
            <seealso cref="M:net.openstack.Core.Providers.IObjectStorageProvider.DeleteContainer(System.String,System.Boolean,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)"/>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Exceptions.ContainerNotEmptyException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.ContainerNotEmptyException"/> class.
            </summary>
        </member>
        <member name="M:net.openstack.Core.Exceptions.ContainerNotEmptyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.ContainerNotEmptyException"/> class
            with the specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:net.openstack.Core.Exceptions.ContainerNotEmptyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.ContainerNotEmptyException"/> class
            with the specified error message and a reference to the inner exception that is
            the cause of this exception.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">
            The exception that is the cause of the current exception. If the <paramref name="innerException"/>
            parameter is not <c>null</c>, the current exception is raised in a catch block that handles the
            inner exception.
            </param>
        </member>
        <member name="M:net.openstack.Core.Exceptions.ContainerNotEmptyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.ContainerNotEmptyException"/> class with
            serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="info"/> is <c>null</c>.</exception>
        </member>
        <member name="T:net.openstack.Core.Exceptions.ImageEnteredErrorStateException">
            <summary>
            The exception that is thrown when the server enters an error state during a
            call to <see cref="O:IComputeProvider.WaitForImageState"/>.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Exceptions.ImageEnteredErrorStateException.#ctor(net.openstack.Core.Domain.ImageState)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.ImageEnteredErrorStateException"/> class
            with the specified error state.
            </summary>
            <param name="status">The error state entered by the image.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="status"/> is <c>null</c>.</exception>
        </member>
        <member name="P:net.openstack.Core.Exceptions.ImageEnteredErrorStateException.Status">
            <summary>
            Gets the error state the image entered.
            </summary>
            <seealso cref="T:net.openstack.Core.Domain.ImageState"/>
        </member>
        <member name="T:net.openstack.Core.Exceptions.NamespaceDoc">
            <summary>
            The <see cref="N:net.openstack.Core.Exceptions"/> namespace defines general
            (not provider-specific) exception classes for errors which may occur while
            working with OpenStack providers.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Exceptions.Response.NamespaceDoc">
            <summary>
            The <see cref="N:net.openstack.Core.Exceptions.Response"/> namespace contains
            exception classes that represent errors returned by a call to a REST API.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Exceptions.SnapshotEnteredErrorStateException">
            <summary>
            Represents errors that occur when a snapshot enters an error state while waiting
            on it to enter a particular state.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Exceptions.SnapshotEnteredErrorStateException.#ctor(net.openstack.Core.Domain.SnapshotState)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.SnapshotEnteredErrorStateException"/> with the
            specified snapshot state.
            </summary>
            <param name="status">The erroneous snapshot state.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="status"/> is <c>null</c>.</exception>
        </member>
        <member name="P:net.openstack.Core.Exceptions.SnapshotEnteredErrorStateException.Status">
            <summary>
            Gets the error state the snapshot entered.
            </summary>
            <seealso cref="T:net.openstack.Core.Domain.SnapshotState"/>
        </member>
        <member name="T:net.openstack.Core.Exceptions.VolumeEnteredErrorStateException">
            <summary>
            Represents errors that occur when a volume enters an error state while waiting
            on it to enter a particular state.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Exceptions.VolumeEnteredErrorStateException.#ctor(net.openstack.Core.Domain.VolumeState)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.VolumeEnteredErrorStateException"/> with the
            specified volume state.
            </summary>
            <param name="status">The erroneous volume state.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="status"/> is <c>null</c>.</exception>
        </member>
        <member name="P:net.openstack.Core.Exceptions.VolumeEnteredErrorStateException.Status">
            <summary>
            Gets the error state the volume entered.
            </summary>
            <seealso cref="T:net.openstack.Core.Domain.VolumeState"/>
        </member>
        <member name="T:net.openstack.Core.InternalTaskExtensions">
            <summary>
            Provides extension methods to <see cref="T:System.Threading.Tasks.Task"/> and <see cref="T:System.Threading.Tasks.Task`1"/> instances
            for use within the openstack.net library.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Core.InternalTaskExtensions.CompletedTask">
            <summary>
            Gets a completed <see cref="T:System.Threading.Tasks.Task"/>.
            </summary>
            <returns>A completed <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:net.openstack.Core.InternalTaskExtensions.CompletedTask``1(``0)">
            <summary>
            Gets a completed <see cref="T:System.Threading.Tasks.Task`1"/> with the specified result.
            </summary>
            <typeparam name="TResult">The task result type.</typeparam>
            <param name="result">The result of the completed task.</param>
            <returns>A completed <see cref="T:System.Threading.Tasks.Task`1"/>, whose <see cref="P:System.Threading.Tasks.Task`1.Result"/> property returns the specified <paramref name="result"/>.</returns>
        </member>
        <member name="T:net.openstack.Core.IProgress`1">
            <summary>
            Defines a provider for progress updates.
            </summary>
            <typeparam name="T">The type of progress update value.</typeparam>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Core.IProgress`1.Report(`0)">
            <summary>
            Reports a progress update.
            </summary>
            <param name="value">The value of the updated progress.</param>
        </member>
        <member name="T:net.openstack.Core.NamespaceDoc">
            <summary>
            The <see cref="N:net.openstack.Core"/> namespaces define provider-independent
            interfaces and implementations of OpenStack APIs.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.HomeDocument">
            <summary>
            This class models the root object of the home document described by
            <strong>Home Documents for HTTP APIs</strong>.
            </summary>
            <seealso href="http://tools.ietf.org/html/draft-nottingham-json-home-03#section-2">JSON Home Documents (Home Documents for HTTP APIs - draft-nottingham-json-home-03)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Core.Domain.HomeDocument._resources">
            <summary>
            The backing field for the <see cref="P:net.openstack.Core.Domain.HomeDocument.Resources"/> property.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.HomeDocument.Resources">
            <summary>
            Gets the resources. The keys of this dictionary are link relation types
            (as defined by <see href="http://tools.ietf.org/html/rfc5988">RFC5988</see>).
            </summary>
        </member>
        <member name="T:System.Threading.Tasks.TaskCompletionSourceExtensions">
            <summary>Extension methods for TaskCompletionSource.</summary>
            <preliminary/>
        </member>
        <member name="M:System.Threading.Tasks.TaskCompletionSourceExtensions.SetFromTask``1(System.Threading.Tasks.TaskCompletionSource{``0},System.Threading.Tasks.Task)">
            <summary>Transfers the result of a Task to the TaskCompletionSource.</summary>
            <typeparam name="TResult">Specifies the type of the result.</typeparam>
            <param name="resultSetter">The TaskCompletionSource.</param>
            <param name="task">The task whose completion results should be transferred.</param>
        </member>
        <member name="M:System.Threading.Tasks.TaskCompletionSourceExtensions.SetFromTask``1(System.Threading.Tasks.TaskCompletionSource{``0},System.Threading.Tasks.Task{``0})">
            <summary>Transfers the result of a Task to the TaskCompletionSource.</summary>
            <typeparam name="TResult">Specifies the type of the result.</typeparam>
            <param name="resultSetter">The TaskCompletionSource.</param>
            <param name="task">The task whose completion results should be transferred.</param>
        </member>
        <member name="M:System.Threading.Tasks.TaskCompletionSourceExtensions.TrySetFromTask``1(System.Threading.Tasks.TaskCompletionSource{``0},System.Threading.Tasks.Task)">
            <summary>Attempts to transfer the result of a Task to the TaskCompletionSource.</summary>
            <typeparam name="TResult">Specifies the type of the result.</typeparam>
            <param name="resultSetter">The TaskCompletionSource.</param>
            <param name="task">The task whose completion results should be transferred.</param>
            <returns>Whether the transfer could be completed.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskCompletionSourceExtensions.TrySetFromTask``1(System.Threading.Tasks.TaskCompletionSource{``0},System.Threading.Tasks.Task{``0})">
            <summary>Attempts to transfer the result of a Task to the TaskCompletionSource.</summary>
            <typeparam name="TResult">Specifies the type of the result.</typeparam>
            <param name="resultSetter">The TaskCompletionSource.</param>
            <param name="task">The task whose completion results should be transferred.</param>
            <returns>Whether the transfer could be completed.</returns>
        </member>
        <member name="T:System.Threading.Tasks.TaskExtrasExtensions">
            <summary>Extensions methods for Task.</summary>
            <preliminary/>
        </member>
        <member name="M:System.Threading.Tasks.TaskExtrasExtensions.ContinueWith(System.Threading.Tasks.Task,System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskFactory)">
            <summary>Creates a continuation task using the specified TaskFactory.</summary>
            <param name="task">The antecedent Task.</param>
            <param name="continuationAction">The continuation action.</param>
            <param name="factory">The TaskFactory.</param>
            <returns>A continuation task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskExtrasExtensions.ContinueWith``1(System.Threading.Tasks.Task,System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskFactory)">
            <summary>Creates a continuation task using the specified TaskFactory.</summary>
            <param name="task">The antecedent Task.</param>
            <param name="continuationFunction">The continuation function.</param>
            <param name="factory">The TaskFactory.</param>
            <returns>A continuation task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskExtrasExtensions.ContinueWith``1(System.Threading.Tasks.Task{``0},System.Action{System.Threading.Tasks.Task{``0}},System.Threading.Tasks.TaskFactory{``0})">
            <summary>Creates a continuation task using the specified TaskFactory.</summary>
            <param name="task">The antecedent Task.</param>
            <param name="continuationAction">The continuation action.</param>
            <param name="factory">The TaskFactory.</param>
            <returns>A continuation task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskExtrasExtensions.ContinueWith``2(System.Threading.Tasks.Task{``0},System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.Tasks.TaskFactory{``0})">
            <summary>Creates a continuation task using the specified TaskFactory.</summary>
            <param name="task">The antecedent Task.</param>
            <param name="continuationFunction">The continuation function.</param>
            <param name="factory">The TaskFactory.</param>
            <returns>A continuation task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskExtrasExtensions.ToAsync(System.Threading.Tasks.Task,System.AsyncCallback,System.Object)">
            <summary>
            Creates a Task that represents the completion of another Task, and 
            that schedules an AsyncCallback to run upon completion.
            </summary>
            <param name="task">The antecedent Task.</param>
            <param name="callback">The AsyncCallback to run.</param>
            <param name="state">The object state to use with the AsyncCallback.</param>
            <returns>The new task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskExtrasExtensions.ToAsync``1(System.Threading.Tasks.Task{``0},System.AsyncCallback,System.Object)">
            <summary>
            Creates a Task that represents the completion of another Task, and 
            that schedules an AsyncCallback to run upon completion.
            </summary>
            <param name="task">The antecedent Task.</param>
            <param name="callback">The AsyncCallback to run.</param>
            <param name="state">The object state to use with the AsyncCallback.</param>
            <returns>The new task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskExtrasExtensions.IgnoreExceptions(System.Threading.Tasks.Task)">
            <summary>Suppresses default exception handling of a Task that would otherwise re-raise the exception on the finalizer thread.</summary>
            <param name="task">The Task to be monitored.</param>
            <returns>The original Task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskExtrasExtensions.IgnoreExceptions``1(System.Threading.Tasks.Task{``0})">
            <summary>Suppresses default exception handling of a Task that would otherwise re-raise the exception on the finalizer thread.</summary>
            <param name="task">The Task to be monitored.</param>
            <returns>The original Task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskExtrasExtensions.FailFastOnException(System.Threading.Tasks.Task)">
            <summary>Fails immediately when an exception is encountered.</summary>
            <param name="task">The Task to be monitored.</param>
            <returns>The original Task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskExtrasExtensions.FailFastOnException``1(System.Threading.Tasks.Task{``0})">
            <summary>Fails immediately when an exception is encountered.</summary>
            <param name="task">The Task to be monitored.</param>
            <returns>The original Task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskExtrasExtensions.PropagateExceptions(System.Threading.Tasks.Task)">
            <summary>Propagates any exceptions that occurred on the specified task.</summary>
            <param name="task">The Task whose exceptions are to be propagated.</param>
        </member>
        <member name="M:System.Threading.Tasks.TaskExtrasExtensions.PropagateExceptions(System.Threading.Tasks.Task[])">
            <summary>Propagates any exceptions that occurred on the specified tasks.</summary>
            <param name="tasks">The Task instances whose exceptions are to be propagated.</param>
        </member>
        <member name="M:System.Threading.Tasks.TaskExtrasExtensions.ToObservable``1(System.Threading.Tasks.Task{``0})">
            <summary>Creates an IObservable that represents the completion of a Task.</summary>
            <typeparam name="TResult">Specifies the type of data returned by the Task.</typeparam>
            <param name="task">The Task to be represented as an IObservable.</param>
            <returns>An IObservable that represents the completion of the Task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskExtrasExtensions.WithTimeout(System.Threading.Tasks.Task,System.TimeSpan)">
            <summary>Creates a new Task that mirrors the supplied task but that will be canceled after the specified timeout.</summary>
            <param name="task">The task.</param>
            <param name="timeout">The timeout.</param>
            <returns>The new Task that may time out.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskExtrasExtensions.WithTimeout``1(System.Threading.Tasks.Task{``0},System.TimeSpan)">
            <summary>Creates a new Task that mirrors the supplied task but that will be canceled after the specified timeout.</summary>
            <typeparam name="TResult">Specifies the type of data contained in the task.</typeparam>
            <param name="task">The task.</param>
            <param name="timeout">The timeout.</param>
            <returns>The new Task that may time out.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskExtrasExtensions.AttachToParent(System.Threading.Tasks.Task)">
            <summary>
            Ensures that a parent task can't transition into a completed state
            until the specified task has also completed, even if it's not
            already a child task.
            </summary>
            <param name="task">The task to attach to the current task as a child.</param>
        </member>
        <member name="M:System.Threading.Tasks.TaskExtrasExtensions.WaitWithPumping(System.Threading.Tasks.Task)">
            <summary>Waits for the task to complete execution, pumping in the meantime.</summary>
            <param name="task">The task for which to wait.</param>
            <remarks>This method is intended for usage with Windows Presentation Foundation.</remarks>
        </member>
        <member name="M:System.Threading.Tasks.TaskExtrasExtensions.WaitForCompletionStatus(System.Threading.Tasks.Task)">
            <summary>Waits for the task to complete execution, returning the task's final status.</summary>
            <param name="task">The task for which to wait.</param>
            <returns>The completion status of the task.</returns>
            <remarks>Unlike Wait, this method will not throw an exception if the task ends in the Faulted or Canceled state.</remarks>
        </member>
        <member name="M:System.Threading.Tasks.TaskExtrasExtensions.Then(System.Threading.Tasks.Task,System.Action)">
            <summary>Creates a task that represents the completion of a follow-up action when a task completes.</summary>
            <param name="task">The task.</param>
            <param name="next">The action to run when the task completes.</param>
            <returns>The task that represents the completion of both the task and the action.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskExtrasExtensions.Then``1(System.Threading.Tasks.Task,System.Func{``0})">
            <summary>Creates a task that represents the completion of a follow-up function when a task completes.</summary>
            <param name="task">The task.</param>
            <param name="next">The function to run when the task completes.</param>
            <returns>The task that represents the completion of both the task and the function.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskExtrasExtensions.Then``1(System.Threading.Tasks.Task{``0},System.Action{``0})">
            <summary>Creates a task that represents the completion of a follow-up action when a task completes.</summary>
            <param name="task">The task.</param>
            <param name="next">The action to run when the task completes.</param>
            <returns>The task that represents the completion of both the task and the action.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskExtrasExtensions.Then``2(System.Threading.Tasks.Task{``0},System.Func{``0,``1})">
            <summary>Creates a task that represents the completion of a follow-up function when a task completes.</summary>
            <param name="task">The task.</param>
            <param name="next">The function to run when the task completes.</param>
            <returns>The task that represents the completion of both the task and the function.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskExtrasExtensions.Then(System.Threading.Tasks.Task,System.Func{System.Threading.Tasks.Task})">
            <summary>Creates a task that represents the completion of a second task when a first task completes.</summary>
            <param name="task">The first task.</param>
            <param name="next">The function that produces the second task.</param>
            <returns>The task that represents the completion of both the first and second task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskExtrasExtensions.Then``1(System.Threading.Tasks.Task{``0},System.Func{``0,System.Threading.Tasks.Task})">
            <summary>Creates a task that represents the completion of a second task when a first task completes.</summary>
            <param name="task">The first task.</param>
            <param name="next">The function that produces the second task based on the result of the first task.</param>
            <returns>The task that represents the completion of both the first and second task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskExtrasExtensions.Then``1(System.Threading.Tasks.Task,System.Func{System.Threading.Tasks.Task{``0}})">
            <summary>Creates a task that represents the completion of a second task when a first task completes.</summary>
            <param name="task">The first task.</param>
            <param name="next">The function that produces the second task.</param>
            <returns>The task that represents the completion of both the first and second task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskExtrasExtensions.Then``2(System.Threading.Tasks.Task{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})">
            <summary>Creates a task that represents the completion of a second task when a first task completes.</summary>
            <param name="task">The first task.</param>
            <param name="next">The function that produces the second task based on the result of the first.</param>
            <returns>The task that represents the completion of both the first and second task.</returns>
        </member>
        <member name="T:System.Threading.Tasks.TaskExtrasExtensions.TaskObservable`1">
            <summary>An implementation of IObservable that wraps a Task.</summary>
            <typeparam name="TResult">The type of data returned by the task.</typeparam>
        </member>
        <member name="T:System.Threading.Tasks.TaskExtrasExtensions.CancelOnDispose">
            <summary>Translate a call to IDisposable.Dispose to a CancellationTokenSource.Cancel.</summary>
        </member>
        <member name="T:System.Threading.Tasks.TaskFactoryExtensions">
            <summary>Extensions for TaskFactory.</summary>
            <preliminary/>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.ToGeneric``1(System.Threading.Tasks.TaskFactory)">
            <summary>Creates a generic TaskFactory from a non-generic one.</summary>
            <typeparam name="TResult">Specifies the type of Task results for the Tasks created by the new TaskFactory.</typeparam>
            <param name="factory">The TaskFactory to serve as a template.</param>
            <returns>The created TaskFactory.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.ToNonGeneric``1(System.Threading.Tasks.TaskFactory{``0})">
            <summary>Creates a generic TaskFactory from a non-generic one.</summary>
            <typeparam name="TResult">Specifies the type of Task results for the Tasks created by the new TaskFactory.</typeparam>
            <param name="factory">The TaskFactory to serve as a template.</param>
            <returns>The created TaskFactory.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.GetTargetScheduler(System.Threading.Tasks.TaskFactory)">
            <summary>Gets the TaskScheduler instance that should be used to schedule tasks.</summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.GetTargetScheduler``1(System.Threading.Tasks.TaskFactory{``0})">
            <summary>Gets the TaskScheduler instance that should be used to schedule tasks.</summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.ContinuationOptionsFromCreationOptions(System.Threading.Tasks.TaskCreationOptions)">
            <summary>Converts TaskCreationOptions into TaskContinuationOptions.</summary>
            <param name="creationOptions"></param>
            <returns></returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.WhenAll(System.Threading.Tasks.TaskFactory,System.Threading.Tasks.Task[])">
            <summary>
            Creates a continuation Task that will complete upon
            the completion of a set of provided Tasks.
            </summary>
            <param name="factory">The TaskFactory to use to create the continuation task.</param>
            <param name="tasks">The array of tasks from which to continue.</param>
            <returns>A task that, when completed, will return the array of completed tasks.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.WhenAll``1(System.Threading.Tasks.TaskFactory,System.Threading.Tasks.Task{``0}[])">
            <summary>
            Creates a continuation Task that will complete upon
            the completion of a set of provided Tasks.
            </summary>
            <param name="factory">The TaskFactory to use to create the continuation task.</param>
            <param name="tasks">The array of tasks from which to continue.</param>
            <returns>A task that, when completed, will return the array of completed tasks.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.WhenAny(System.Threading.Tasks.TaskFactory,System.Threading.Tasks.Task[])">
            <summary>
            Creates a continuation Task that will complete upon
            the completion of any one of a set of provided Tasks.
            </summary>
            <param name="factory">The TaskFactory to use to create the continuation task.</param>
            <param name="tasks">The array of tasks from which to continue.</param>
            <returns>A task that, when completed, will return the completed task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.WhenAny``1(System.Threading.Tasks.TaskFactory,System.Threading.Tasks.Task{``0}[])">
            <summary>
            Creates a continuation Task that will complete upon
            the completion of any one of a set of provided Tasks.
            </summary>
            <param name="factory">The TaskFactory to use to create the continuation task.</param>
            <param name="tasks">The array of tasks from which to continue.</param>
            <returns>A task that, when completed, will return the completed task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.StartNewDelayed(System.Threading.Tasks.TaskFactory,System.Int32)">
            <summary>Creates a Task that will complete after the specified delay.</summary>
            <param name="factory">The TaskFactory.</param>
            <param name="millisecondsDelay">The delay after which the Task should transition to RanToCompletion.</param>
            <returns>A Task that will be completed after the specified duration.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.StartNewDelayed(System.Threading.Tasks.TaskFactory,System.Int32,System.Threading.CancellationToken)">
            <summary>Creates a Task that will complete after the specified delay.</summary>
            <param name="factory">The TaskFactory.</param>
            <param name="millisecondsDelay">The delay after which the Task should transition to RanToCompletion.</param>
            <param name="cancellationToken">The cancellation token that can be used to cancel the timed task.</param>
            <returns>A Task that will be completed after the specified duration and that's cancelable with the specified token.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.StartNewDelayed(System.Threading.Tasks.TaskFactory,System.Int32,System.Action)">
            <summary>Creates and schedules a task for execution after the specified time delay.</summary>
            <param name="factory">The factory to use to create the task.</param>
            <param name="millisecondsDelay">The delay after which the task will be scheduled.</param>
            <param name="action">The delegate executed by the task.</param>
            <returns>The created Task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.StartNewDelayed(System.Threading.Tasks.TaskFactory,System.Int32,System.Action,System.Threading.Tasks.TaskCreationOptions)">
            <summary>Creates and schedules a task for execution after the specified time delay.</summary>
            <param name="factory">The factory to use to create the task.</param>
            <param name="millisecondsDelay">The delay after which the task will be scheduled.</param>
            <param name="action">The delegate executed by the task.</param>
            <param name="creationOptions">Options that control the task's behavior.</param>
            <returns>The created Task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.StartNewDelayed(System.Threading.Tasks.TaskFactory,System.Int32,System.Action,System.Threading.CancellationToken)">
            <summary>Creates and schedules a task for execution after the specified time delay.</summary>
            <param name="factory">The factory to use to create the task.</param>
            <param name="millisecondsDelay">The delay after which the task will be scheduled.</param>
            <param name="action">The delegate executed by the task.</param>
            <param name="cancellationToken">The cancellation token to assign to the created Task.</param>
            <returns>The created Task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.StartNewDelayed(System.Threading.Tasks.TaskFactory,System.Int32,System.Action,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)">
            <summary>Creates and schedules a task for execution after the specified time delay.</summary>
            <param name="factory">The factory to use to create the task.</param>
            <param name="millisecondsDelay">The delay after which the task will be scheduled.</param>
            <param name="action">The delegate executed by the task.</param>
            <param name="cancellationToken">The cancellation token to assign to the created Task.</param>
            <param name="creationOptions">Options that control the task's behavior.</param>
            <param name="scheduler">The scheduler to which the Task will be scheduled.</param>
            <returns>The created Task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.StartNewDelayed(System.Threading.Tasks.TaskFactory,System.Int32,System.Action{System.Object},System.Object)">
            <summary>Creates and schedules a task for execution after the specified time delay.</summary>
            <param name="factory">The factory to use to create the task.</param>
            <param name="millisecondsDelay">The delay after which the task will be scheduled.</param>
            <param name="action">The delegate executed by the task.</param>
            <param name="state">An object provided to the delegate.</param>
            <returns>The created Task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.StartNewDelayed(System.Threading.Tasks.TaskFactory,System.Int32,System.Action{System.Object},System.Object,System.Threading.Tasks.TaskCreationOptions)">
            <summary>Creates and schedules a task for execution after the specified time delay.</summary>
            <param name="factory">The factory to use to create the task.</param>
            <param name="millisecondsDelay">The delay after which the task will be scheduled.</param>
            <param name="action">The delegate executed by the task.</param>
            <param name="state">An object provided to the delegate.</param>
            <param name="creationOptions">Options that control the task's behavior.</param>
            <returns>The created Task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.StartNewDelayed(System.Threading.Tasks.TaskFactory,System.Int32,System.Action{System.Object},System.Object,System.Threading.CancellationToken)">
            <summary>Creates and schedules a task for execution after the specified time delay.</summary>
            <param name="factory">The factory to use to create the task.</param>
            <param name="millisecondsDelay">The delay after which the task will be scheduled.</param>
            <param name="action">The delegate executed by the task.</param>
            <param name="state">An object provided to the delegate.</param>
            <param name="cancellationToken">The cancellation token to assign to the created Task.</param>
            <returns>The created Task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.StartNewDelayed(System.Threading.Tasks.TaskFactory,System.Int32,System.Action{System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)">
            <summary>Creates and schedules a task for execution after the specified time delay.</summary>
            <param name="factory">The factory to use to create the task.</param>
            <param name="millisecondsDelay">The delay after which the task will be scheduled.</param>
            <param name="action">The delegate executed by the task.</param>
            <param name="state">An object provided to the delegate.</param>
            <param name="cancellationToken">The cancellation token to assign to the created Task.</param>
            <param name="creationOptions">Options that control the task's behavior.</param>
            <param name="scheduler">The scheduler to which the Task will be scheduled.</param>
            <returns>The created Task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.StartNewDelayed``1(System.Threading.Tasks.TaskFactory{``0},System.Int32,System.Func{``0})">
            <summary>Creates and schedules a task for execution after the specified time delay.</summary>
            <param name="factory">The factory to use to create the task.</param>
            <param name="millisecondsDelay">The delay after which the task will be scheduled.</param>
            <param name="function">The delegate executed by the task.</param>
            <returns>The created Task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.StartNewDelayed``1(System.Threading.Tasks.TaskFactory{``0},System.Int32,System.Func{``0},System.Threading.Tasks.TaskCreationOptions)">
            <summary>Creates and schedules a task for execution after the specified time delay.</summary>
            <param name="factory">The factory to use to create the task.</param>
            <param name="millisecondsDelay">The delay after which the task will be scheduled.</param>
            <param name="function">The delegate executed by the task.</param>
            <param name="creationOptions">Options that control the task's behavior.</param>
            <returns>The created Task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.StartNewDelayed``1(System.Threading.Tasks.TaskFactory{``0},System.Int32,System.Func{``0},System.Threading.CancellationToken)">
            <summary>Creates and schedules a task for execution after the specified time delay.</summary>
            <param name="factory">The factory to use to create the task.</param>
            <param name="millisecondsDelay">The delay after which the task will be scheduled.</param>
            <param name="function">The delegate executed by the task.</param>
            <param name="cancellationToken">The CancellationToken to assign to the Task.</param>
            <returns>The created Task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.StartNewDelayed``1(System.Threading.Tasks.TaskFactory{``0},System.Int32,System.Func{``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)">
            <summary>Creates and schedules a task for execution after the specified time delay.</summary>
            <param name="factory">The factory to use to create the task.</param>
            <param name="millisecondsDelay">The delay after which the task will be scheduled.</param>
            <param name="function">The delegate executed by the task.</param>
            <param name="cancellationToken">The CancellationToken to assign to the Task.</param>
            <param name="creationOptions">Options that control the task's behavior.</param>
            <param name="scheduler">The scheduler to which the Task will be scheduled.</param>
            <returns>The created Task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.StartNewDelayed``1(System.Threading.Tasks.TaskFactory{``0},System.Int32,System.Func{System.Object,``0},System.Object)">
            <summary>Creates and schedules a task for execution after the specified time delay.</summary>
            <param name="factory">The factory to use to create the task.</param>
            <param name="millisecondsDelay">The delay after which the task will be scheduled.</param>
            <param name="function">The delegate executed by the task.</param>
            <param name="state">An object provided to the delegate.</param>
            <returns>The created Task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.StartNewDelayed``1(System.Threading.Tasks.TaskFactory{``0},System.Int32,System.Func{System.Object,``0},System.Object,System.Threading.CancellationToken)">
            <summary>Creates and schedules a task for execution after the specified time delay.</summary>
            <param name="factory">The factory to use to create the task.</param>
            <param name="millisecondsDelay">The delay after which the task will be scheduled.</param>
            <param name="function">The delegate executed by the task.</param>
            <param name="state">An object provided to the delegate.</param>
            <param name="cancellationToken">The CancellationToken to assign to the Task.</param>
            <returns>The created Task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.StartNewDelayed``1(System.Threading.Tasks.TaskFactory{``0},System.Int32,System.Func{System.Object,``0},System.Object,System.Threading.Tasks.TaskCreationOptions)">
            <summary>Creates and schedules a task for execution after the specified time delay.</summary>
            <param name="factory">The factory to use to create the task.</param>
            <param name="millisecondsDelay">The delay after which the task will be scheduled.</param>
            <param name="function">The delegate executed by the task.</param>
            <param name="state">An object provided to the delegate.</param>
            <param name="creationOptions">Options that control the task's behavior.</param>
            <returns>The created Task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.StartNewDelayed``1(System.Threading.Tasks.TaskFactory{``0},System.Int32,System.Func{System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)">
            <summary>Creates and schedules a task for execution after the specified time delay.</summary>
            <param name="factory">The factory to use to create the task.</param>
            <param name="millisecondsDelay">The delay after which the task will be scheduled.</param>
            <param name="function">The delegate executed by the task.</param>
            <param name="state">An object provided to the delegate.</param>
            <param name="cancellationToken">The CancellationToken to assign to the Task.</param>
            <param name="creationOptions">Options that control the task's behavior.</param>
            <param name="scheduler">The scheduler to which the Task will be scheduled.</param>
            <returns>The created Task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.FromException(System.Threading.Tasks.TaskFactory,System.Exception)">
            <summary>Creates a Task that has completed in the Faulted state with the specified exception.</summary>
            <param name="factory">The target TaskFactory.</param>
            <param name="exception">The exception with which the Task should fault.</param>
            <returns>The completed Task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.FromException``1(System.Threading.Tasks.TaskFactory,System.Exception)">
            <summary>Creates a Task that has completed in the Faulted state with the specified exception.</summary>
            <typeparam name="TResult">Specifies the type of payload for the new Task.</typeparam>
            <param name="factory">The target TaskFactory.</param>
            <param name="exception">The exception with which the Task should fault.</param>
            <returns>The completed Task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.FromResult``1(System.Threading.Tasks.TaskFactory,``0)">
            <summary>Creates a Task that has completed in the RanToCompletion state with the specified result.</summary>
            <typeparam name="TResult">Specifies the type of payload for the new Task.</typeparam>
            <param name="factory">The target TaskFactory.</param>
            <param name="result">The result with which the Task should complete.</param>
            <returns>The completed Task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.FromCancellation(System.Threading.Tasks.TaskFactory,System.Threading.CancellationToken)">
            <summary>Creates a Task that has completed in the Canceled state with the specified CancellationToken.</summary>
            <param name="factory">The target TaskFactory.</param>
            <param name="cancellationToken">The CancellationToken with which the Task should complete.</param>
            <returns>The completed Task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.FromCancellation``1(System.Threading.Tasks.TaskFactory,System.Threading.CancellationToken)">
            <summary>Creates a Task that has completed in the Canceled state with the specified CancellationToken.</summary>
            <typeparam name="TResult">Specifies the type of payload for the new Task.</typeparam>
            <param name="factory">The target TaskFactory.</param>
            <param name="cancellationToken">The CancellationToken with which the Task should complete.</param>
            <returns>The completed Task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.FromException``1(System.Threading.Tasks.TaskFactory{``0},System.Exception)">
            <summary>Creates a Task that has completed in the Faulted state with the specified exception.</summary>
            <param name="factory">The target TaskFactory.</param>
            <param name="exception">The exception with which the Task should fault.</param>
            <returns>The completed Task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.FromResult``1(System.Threading.Tasks.TaskFactory{``0},``0)">
            <summary>Creates a Task that has completed in the RanToCompletion state with the specified result.</summary>
            <typeparam name="TResult">Specifies the type of payload for the new Task.</typeparam>
            <param name="factory">The target TaskFactory.</param>
            <param name="result">The result with which the Task should complete.</param>
            <returns>The completed Task.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskFactoryExtensions.FromCancellation``1(System.Threading.Tasks.TaskFactory{``0},System.Threading.CancellationToken)">
            <summary>Creates a Task that has completed in the Canceled state with the specified CancellationToken.</summary>
            <typeparam name="TResult">Specifies the type of payload for the new Task.</typeparam>
            <param name="factory">The target TaskFactory.</param>
            <param name="cancellationToken">The CancellationToken with which the Task should complete.</param>
            <returns>The completed Task.</returns>
        </member>
        <member name="T:System.Threading.Tasks.TaskFactoryExtensions.DelegateCache`1">
            <summary>A cache of delegates.</summary>
            <typeparam name="TResult">The result type.</typeparam>
        </member>
        <member name="F:System.Threading.Tasks.TaskFactoryExtensions.DelegateCache`1.DefaultResult">
            <summary>Function that returns default(TResult).</summary>
        </member>
        <member name="T:net.openstack.Core.Providers.IIdentityService">
            <summary>
            Represents a provider for asynchronous operations on the OpenStack Identity Service.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/">OpenStack Identity Service API v2.0 Reference</seealso>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Core.Providers.IIdentityService.AuthenticateAsync(net.openstack.Core.Domain.CloudIdentity,System.Threading.CancellationToken)">
            <summary>
            Authenticates the user for the specified identity.
            </summary>
            <remarks>
            This method always authenticates to the server, even if an unexpired, cached <see cref="T:net.openstack.Core.Domain.UserAccess"/>
            is available for the specified identity.
            </remarks>
            <param name="identity">The identity of the user to authenticate.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a <see cref="T:net.openstack.Core.Domain.UserAccess"/> object containing the authentication token, service catalog and user data.</returns>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the authentication request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IIdentityService.GetUserAccessAsync(net.openstack.Core.Domain.CloudIdentity,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Gets the user access details, authenticating with the server if necessary.
            </summary>
            <remarks>
            If <paramref name="forceCacheRefresh"/> is <c>false</c> and a cached <see cref="T:net.openstack.Core.Domain.UserAccess"/>
            is available for the specified <paramref name="identity"/>, this method may return the cached
            value without performing an authentication against the server. If <paramref name="forceCacheRefresh"/>
            is <c>true</c>, this method is equivalent to <see cref="M:net.openstack.Core.Providers.IIdentityService.AuthenticateAsync(net.openstack.Core.Domain.CloudIdentity,System.Threading.CancellationToken)"/>.
            </remarks>
            <param name="identity">The identity of the user to authenticate.</param>
            <param name="forceCacheRefresh">If <c>true</c>, the user is always authenticated against the server; otherwise a cached <see cref="T:net.openstack.Core.Domain.IdentityToken"/> may be returned.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a <see cref="T:net.openstack.Core.Domain.UserAccess"/> object containing the authentication token, service catalog and user data.</returns>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IIdentityService.GetTokenAsync(net.openstack.Core.Domain.CloudIdentity,System.Threading.CancellationToken)">
            <summary>
            Gets the authentication token for the specified identity. If necessary, the identity is authenticated
            on the server to obtain a token.
            </summary>
            <remarks>
            If a cached <see cref="T:net.openstack.Core.Domain.IdentityToken"/> is available for the specified <paramref name="identity"/>,
            this method may return the cached value without performing an authentication against the server.
            </remarks>
            <param name="identity">The identity of the user to authenticate.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain the user's authentication token.</returns>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the authentication request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="T:net.openstack.Core.Providers.IQueueingService">
            <summary>
            Represents a provider for asynchronous operations on the OpenStack Marconi (Cloud QUeues) Service.
            </summary>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1&amp;oldid=30943">OpenStack Marconi API v1 Blueprint</seealso>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Core.Providers.IQueueingService.GetHomeAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the home document describing the operations supported by the service.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a <see cref="T:net.openstack.Core.Domain.HomeDocument"/> object describing the operations supported by the service.</returns>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Get_Home_Document">Get Home Document (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IQueueingService.GetNodeHealthAsync(System.Threading.CancellationToken)">
            <summary>
            Checks the queueing service node status.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. If the service
            is available, the task will complete successfully. If the service is unavailable due
            to a storage driver failure or some other error, the task will fail and the
            <see cref="P:System.Threading.Tasks.Task.Exception"/> property will contain the reason for the failure.
            </returns>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/wiki/Marconi/specs/api/v1#Check_Node_Health">Check Node Health (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IQueueingService.CreateQueueAsync(net.openstack.Core.Domain.Queues.QueueName,System.Threading.CancellationToken)">
            <summary>
            Creates a queue, if it does not already exist.
            </summary>
            <param name="queueName">The queue name.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain <c>true</c> if the queue was created by the call, or <c>false</c> if the queue already existed.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueName"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Create_Queue">Create Queue (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IQueueingService.ListQueuesAsync(net.openstack.Core.Domain.Queues.QueueName,System.Nullable{System.Int32},System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Gets a list of queues.
            </summary>
            <param name="marker">The name of the last queue in the previous list. The resulting collection of queues will start with the first queue <em>after</em> this value, when sorted using <see cref="P:System.StringComparer.Ordinal"/>. If this value is <c>null</c>, the list starts at the beginning.</param>
            <param name="limit">The maximum number of queues to return. If this value is <c>null</c>, a provider-specific default value is used.</param>
            <param name="detailed"><c>true</c> to return detailed information about each queue; otherwise, <c>false</c>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain <placeholder>placeholder</placeholder>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="limit"/> is less than or equal to 0.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#List_Queues">List Queues (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IQueueingService.QueueExistsAsync(net.openstack.Core.Domain.Queues.QueueName,System.Threading.CancellationToken)">
            <summary>
            Checks for the existence of a queue with a particular name.
            </summary>
            <param name="queueName">The queue name.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain <c>true</c> if queue with the specified name exists; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueName"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Checking_Queue_Existence">Checking Queue Existence (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IQueueingService.DeleteQueueAsync(net.openstack.Core.Domain.Queues.QueueName,System.Threading.CancellationToken)">
            <summary>
            Deletes a queue.
            </summary>
            <remarks>
            The queue will be deleted whether or not it is empty, even if one or more messages in the queue is currently claimed.
            </remarks>
            <param name="queueName">The queue name.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueName"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Delete_Queue">Delete Queue (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IQueueingService.SetQueueMetadataAsync``1(net.openstack.Core.Domain.Queues.QueueName,``0,System.Threading.CancellationToken)">
            <summary>
            Sets the metadata associated with a queue.
            </summary>
            <typeparam name="T">The type of data to associate with the queue.</typeparam>
            <param name="queueName">The queue name.</param>
            <param name="metadata">The metadata to associate with the queue.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueName"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Set_Queue_Metadata">Set Queue Metadata (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IQueueingService.GetQueueMetadataAsync(net.openstack.Core.Domain.Queues.QueueName,System.Threading.CancellationToken)">
            <summary>
            Gets the metadata associated with a queue.
            </summary>
            <param name="queueName">The queue name.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a <see cref="T:Newtonsoft.Json.Linq.JObject"/> object containing the metadata associated with the queue.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueName"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Get_Queue_Metadata">Get Queue Metadata (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IQueueingService.GetQueueMetadataAsync``1(net.openstack.Core.Domain.Queues.QueueName,System.Threading.CancellationToken)">
            <summary>
            Gets the metadata associated with a queue, as a strongly-typed object.
            </summary>
            <typeparam name="T">The type of metadata associated with the queue.</typeparam>
            <param name="queueName">The queue name.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a deserialized object of type <typeparamref name="T"/> representing the metadata associated with the queue.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueName"/> is <c>null</c>.</exception>
            <exception cref="T:Newtonsoft.Json.JsonSerializationException">If an error occurs while deserializing the metadata.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Get_Queue_Metadata">Get Queue Metadata (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IQueueingService.GetQueueStatisticsAsync(net.openstack.Core.Domain.Queues.QueueName,System.Threading.CancellationToken)">
            <summary>
            Gets statistics for a queue.
            </summary>
            <param name="queueName">The queue name.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a <see cref="T:net.openstack.Core.Domain.Queues.QueueStatistics"/> object containing statistics for the queue.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueName"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Get_Queue_Stats">Get Queue Stats (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IQueueingService.ListMessagesAsync(net.openstack.Core.Domain.Queues.QueueName,net.openstack.Core.Domain.Queues.QueuedMessageList,System.Nullable{System.Int32},System.Boolean,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Gets a list of messages currently in a queue.
            </summary>
            <param name="queueName">The queue name.</param>
            <param name="marker">The <see cref="T:net.openstack.Core.Domain.Queues.QueuedMessageList"/> object returned by a previous call to <see cref="M:net.openstack.Core.Providers.IQueueingService.ListMessagesAsync(net.openstack.Core.Domain.Queues.QueueName,net.openstack.Core.Domain.Queues.QueuedMessageList,System.Nullable{System.Int32},System.Boolean,System.Boolean,System.Threading.CancellationToken)"/>. If this value is <c>null</c>, the list starts at the beginning.</param>
            <param name="limit">The maximum number of messages to return. If this value is <c>null</c>, a provider-specific default value is used.</param>
            <param name="echo"><c>true</c> to include messages created by the current client; otherwise, <c>false</c>.</param>
            <param name="includeClaimed"><c>true</c> to include claimed messages; otherwise <c>false</c> to return only unclaimed messages.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a collection of <see cref="T:net.openstack.Core.Domain.Queues.QueuedMessage"/> objects describing the messages in the queue.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="limit"/> is less than or equal to 0.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#List_Messages">List Messages (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IQueueingService.GetMessageAsync(net.openstack.Core.Domain.Queues.QueueName,net.openstack.Core.Domain.Queues.MessageId,System.Threading.CancellationToken)">
            <summary>
            Gets detailed information about a specific queued message.
            </summary>
            <remarks>
            This method will return information for the specified message regardless of the
            <literal>Client-ID</literal> or claim associated with the message.
            </remarks>
            <param name="queueName">The queue name.</param>
            <param name="messageId">The message ID. This is obtained from <see cref="P:net.openstack.Core.Domain.Queues.QueuedMessage.Id">QueuedMessage.Id</see>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a <see cref="T:net.openstack.Core.Domain.Queues.QueuedMessage"/> object containing detailed information about the specified message.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="queueName"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="messageId"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Get_a_Specific_Message">Get a Specific Message (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IQueueingService.GetMessagesAsync(net.openstack.Core.Domain.Queues.QueueName,System.Collections.Generic.IEnumerable{net.openstack.Core.Domain.Queues.MessageId},System.Threading.CancellationToken)">
            <summary>
            Get messages from a queue.
            </summary>
            <remarks>
            This method will return information for the specified message regardless of the
            <literal>Client-ID</literal> or claim associated with the message.
            </remarks>
            <param name="queueName">The queue name.</param>
            <param name="messageIds">The message IDs of messages to get.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a collection of <see cref="T:net.openstack.Core.Domain.Queues.QueuedMessage"/> objects containing detailed information about the specified messages.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="queueName"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="messageIds"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="messageIds"/> contains a <c>null</c> value.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Get_a_Set_of_Messages_by_ID">Get a Set of Messages by ID (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IQueueingService.PostMessagesAsync(net.openstack.Core.Domain.Queues.QueueName,System.Collections.Generic.IEnumerable{net.openstack.Core.Domain.Queues.Message},System.Threading.CancellationToken)">
            <summary>
            Posts messages to a queue.
            </summary>
            <param name="queueName">The queue name.</param>
            <param name="messages">The messages to post.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="queueName"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="messages"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="messages"/> contains a <c>null</c> value.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Post_Message.28s.29">Post Message(s) (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IQueueingService.PostMessagesAsync(net.openstack.Core.Domain.Queues.QueueName,System.Threading.CancellationToken,net.openstack.Core.Domain.Queues.Message[])">
            <summary>
            Posts messages to a queue.
            </summary>
            <param name="queueName">The queue name.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="messages">The messages to post.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="queueName"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="messages"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="messages"/> contains a <c>null</c> value.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Post_Message.28s.29">Post Message(s) (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IQueueingService.PostMessagesAsync``1(net.openstack.Core.Domain.Queues.QueueName,System.Collections.Generic.IEnumerable{net.openstack.Core.Domain.Queues.Message{``0}},System.Threading.CancellationToken)">
            <summary>
            Posts messages to a queue.
            </summary>
            <param name="queueName">The queue name.</param>
            <param name="messages">The messages to post.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="queueName"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="messages"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="messages"/> contains a <c>null</c> value.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Post_Message.28s.29">Post Message(s) (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IQueueingService.PostMessagesAsync``1(net.openstack.Core.Domain.Queues.QueueName,System.Threading.CancellationToken,net.openstack.Core.Domain.Queues.Message{``0}[])">
            <summary>
            Posts messages to a queue.
            </summary>
            <param name="queueName">The queue name.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="messages">The messages to post.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="queueName"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="messages"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="messages"/> contains a <c>null</c> value.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Post_Message.28s.29">Post Message(s) (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IQueueingService.DeleteMessageAsync(net.openstack.Core.Domain.Queues.QueueName,net.openstack.Core.Domain.Queues.MessageId,net.openstack.Core.Domain.Queues.Claim,System.Threading.CancellationToken)">
            <summary>
            Deletes a message from a queue.
            </summary>
            <param name="queueName">The queue name.</param>
            <param name="messageId">The ID of the message to delete. This is obtained from <see cref="P:net.openstack.Core.Domain.Queues.QueuedMessage.Id">QueuedMessage.Id</see>.</param>
            <param name="claim">The claim for the message. If this value is <c>null</c>, the delete operation will fail if the message is claimed. If this value is non-<c>null</c>, the delete operation will fail if the message is not claimed by the specified claim.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="queueName"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="messageId"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Delete_Message">Delete Message (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IQueueingService.DeleteMessagesAsync(net.openstack.Core.Domain.Queues.QueueName,System.Collections.Generic.IEnumerable{net.openstack.Core.Domain.Queues.MessageId},System.Threading.CancellationToken)">
            <summary>
            Deletes messages from a queue.
            </summary>
            <remarks>
            <note type="warning">
            This method deletes messages from a queue whether or not they are currently claimed.
            </note>
            </remarks>
            <param name="queueName">The queue name.</param>
            <param name="messageIds">The IDs of messages to delete. These are obtained from <see cref="P:net.openstack.Core.Domain.Queues.QueuedMessage.Id">QueuedMessage.Id</see>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="queueName"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="messageIds"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="messageIds"/> contains a <c>null</c> value.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Delete_a_Set_of_Messages_by_ID">Delete a Set of Messages by ID (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IQueueingService.ClaimMessageAsync(net.openstack.Core.Domain.Queues.QueueName,System.Nullable{System.Int32},System.TimeSpan,System.TimeSpan,System.Threading.CancellationToken)">
             <summary>
             Claim messages from a queue.
             </summary>
             <remarks>
             When the claim is no longer required, the code should call <see cref="M:net.openstack.Core.Domain.Queues.Claim.DisposeAsync(System.Threading.CancellationToken)"/>
             or <see cref="M:net.openstack.Core.Domain.Queues.Claim.Dispose"/> to ensure the following actions are taken.
             <list type="bullet">
             <item>Messages which are part of this claim which were not processed are made available to other nodes.</item>
             <item>The claim resource is cleaned up without waiting for the time-to-live to expire.</item>
             </list>
            
             <para>Messages which are not deleted before the claim is released will be eligible for
             reclaiming by another process.</para>
             </remarks>
             <param name="queueName">The queue name.</param>
             <param name="limit">The maximum number of messages to claim. If this value is <c>null</c>, a provider-specific default value is used.</param>
             <param name="timeToLive">The time to wait before the server automatically releases the claim.</param>
             <param name="gracePeriod">The time to wait, after the time-to-live for the claim expires, before the server allows the claimed messages to be deleted due to the individual message's time-to-live expiring.</param>
             <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
             <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain <see cref="T:net.openstack.Core.Domain.Queues.Claim"/> object representing the claim.</returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="queueName"/> is <c>null</c>.</exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
             If <paramref name="limit"/> is less than or equal to 0.
             <para>-or-</para>
             <para>If <paramref name="timeToLive"/> is negative or <see cref="F:System.TimeSpan.Zero"/>.</para>
             <para>-or-</para>
             <para>If <paramref name="gracePeriod"/> is negative.</para>
             </exception>
             <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
             <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Claim_Messages">Claim Messages (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IQueueingService.QueryClaimAsync(net.openstack.Core.Domain.Queues.QueueName,net.openstack.Core.Domain.Queues.Claim,System.Threading.CancellationToken)">
            <summary>
            Gets detailed information about the current state of a claim.
            </summary>
            <remarks>
            <note type="caller">Use <see cref="M:net.openstack.Core.Domain.Queues.Claim.RefreshAsync(System.Threading.CancellationToken)"/> instead of calling this method directly.</note>
            </remarks>
            <param name="queueName">The queue name.</param>
            <param name="claim">The claim to query.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a <see cref="T:net.openstack.Core.Domain.Queues.Claim"/> object representing the claim.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="queueName"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="claim"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Query_Claim">Query Claim (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IQueueingService.UpdateClaimAsync(net.openstack.Core.Domain.Queues.QueueName,net.openstack.Core.Domain.Queues.Claim,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Renews a claim, by updating the time-to-live and resetting the age of the claim to zero.
            </summary>
            <remarks>
            <note type="caller">Use <see cref="M:net.openstack.Core.Domain.Queues.Claim.RenewAsync(System.TimeSpan,System.Threading.CancellationToken)"/> instead of calling this method directly.</note>
            </remarks>
            <param name="queueName">The queue name.</param>
            <param name="claim">The claim to renew.</param>
            <param name="timeToLive">The updated time-to-live for the claim.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="queueName"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="claim"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="timeToLive"/> is negative.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Update_Claim">Update Claim (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IQueueingService.ReleaseClaimAsync(net.openstack.Core.Domain.Queues.QueueName,net.openstack.Core.Domain.Queues.Claim,System.Threading.CancellationToken)">
            <summary>
            Immediately release a claim, making any (remaining, non-deleted) messages associated
            with the claim available to other workers.
            </summary>
            <remarks>
            <note type="caller">Use <see cref="M:net.openstack.Core.Domain.Queues.Claim.DisposeAsync(System.Threading.CancellationToken)"/> instead of calling this method directly.</note>
            </remarks>
            <param name="queueName">The queue name.</param>
            <param name="claim">The claim to release.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="queueName"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="claim"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Release_Claim">Release Claim (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="T:net.openstack.Core.Providers.NamespaceDoc">
            <summary>
            The <see cref="N:net.openstack.Core.Providers"/> namespace defines providers
            interfaces for OpenStack services. These interfaces may expose optional
            functionality and service extensions documented at OpenStack. Other
            provider-specific extensions are included under the specific provider.
            </summary>
        </member>
        <member name="T:net.openstack.Core.ResponseExtensions">
            <summary>
            Contains extension methods to the <see cref="T:JSIStudios.SimpleRESTServices.Client.Response"/> class.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="F:net.openstack.Core.ResponseExtensions.JsonContentType">
            <summary>
            The content type used for standard JSON requests and responses.
            </summary>
        </member>
        <member name="M:net.openstack.Core.ResponseExtensions.TryGetHeader(JSIStudios.SimpleRESTServices.Client.Response,System.Net.HttpResponseHeader,System.String@)">
            <summary>
            Retrieves a standard HTTP response header from a REST response, if available.
            </summary>
            <param name="response">The REST response.</param>
            <param name="header">The header to retrieve.</param>
            <param name="value">Returns the value for <paramref name="header"/>.</param>
            <returns><c>true</c> if the specified header is contained in <paramref name="response"/>, otherwise <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="response"/> is <c>null</c>.</exception>
        </member>
        <member name="M:net.openstack.Core.ResponseExtensions.TryGetHeader(JSIStudios.SimpleRESTServices.Client.Response,System.String,System.String@)">
            <summary>
            Retrieves a custom HTTP response header from a REST response, if available.
            </summary>
            <param name="response">The REST response.</param>
            <param name="header">The header to retrieve.</param>
            <param name="value">Returns the value for <paramref name="header"/>.</param>
            <returns><c>true</c> if the specified header is contained in <paramref name="response"/>, otherwise <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="response"/> is <c>null</c>.</exception>
        </member>
        <member name="M:net.openstack.Core.ResponseExtensions.HasJsonBody(JSIStudios.SimpleRESTServices.Client.Response)">
            <summary>
            This method checks if a REST <see cref="T:JSIStudios.SimpleRESTServices.Client.Response"/> contains a JSON-formatted body.
            The response is assumed to be JSON if the content type is reported as <c>application/json</c>
            and the body is not empty.
            </summary>
            <param name="response">The REST response.</param>
            <returns><c>true</c> if <paramref name="response"/> contains a JSON response body, otherwise <c>false</c>.</returns>
        </member>
        <member name="T:net.openstack.Core.RestWebHeaderCollection">
            <summary>
            Contains protocol headers associated with a REST request or response.
            </summary>
            <remarks>
            This collection does restrict headers which are exposed through properties,
            allowing users to explicitly construct a complete set of headers.
            </remarks>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.RestWebHeaderCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.RestWebHeaderCollection"/> class.
            </summary>
        </member>
        <member name="M:net.openstack.Core.RestWebHeaderCollection.#ctor(System.Collections.Generic.IEnumerable{JSIStudios.SimpleRESTServices.Client.HttpHeader})">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.RestWebHeaderCollection"/> class from
            the specified headers.
            </summary>
            <param name="headers">The headers to initially add to this collection.</param>
            <exception cref="T:System.ArgumentException">
            A header name is <c>null</c>, <see cref="F:System.String.Empty"/>, or contains invalid characters.
            <para>-or-</para>
            <para>A header value contains invalid characters.</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">A header contains a value longer than 65535 characters.</exception>
        </member>
        <member name="M:net.openstack.Core.RestWebHeaderCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.RestWebHeaderCollection"/> class from the specified
            instances of the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> and <see cref="T:System.Runtime.Serialization.StreamingContext"/> classes.
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> containing the information required to serialize the <see cref="T:net.openstack.Core.RestWebHeaderCollection"/>.</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> containing the source of the serialized stream associated with the new <see cref="T:net.openstack.Core.RestWebHeaderCollection"/>.</param>
            <remarks>
            This constructor implements the <see cref="T:System.Runtime.Serialization.ISerializable"/> interface for the <see cref="T:net.openstack.Core.RestWebHeaderCollection"/> class.
            </remarks>
            <exception cref="T:System.ArgumentException">If a serialized header name contains invalid characters.</exception>
            <exception cref="T:System.ArgumentNullException">If a serialized header name is a null reference or <see cref="F:System.String.Empty"/>.</exception>
        </member>
        <member name="M:net.openstack.Core.RestWebHeaderCollection.Add(System.String,System.String)">
             <summary>
             Inserts a header with the specified name and value into the collection.
             </summary>
             <remarks>
             If the header specified in <paramref name="name"/> does not exist, the <see cref="M:net.openstack.Core.RestWebHeaderCollection.Add(System.String,System.String)"/> method
             inserts a new header into the list of header name/value pairs.
            
             <para>If the header specified in <paramref name="name"/> is already present, <paramref name="value"/>
             is added to the existing comma-separated list of values associated with <paramref name="name"/>.</para>
             </remarks>
             <param name="name">The header to add to the collection.</param>
             <param name="value">The content of the header.</param>
             <exception cref="T:System.ArgumentException">
             A <paramref name="name"/> is <c>null</c>, <see cref="F:System.String.Empty"/>, or contains invalid characters.
             <para>-or-</para>
             <para>A <paramref name="value"/> contains invalid characters.</para>
             </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="value"/> is greater than 65535.</exception>
        </member>
        <member name="T:net.openstack.Core.Synchronous.DnsServiceExtensions">
            <summary>
            Provides extension methods to allow synchronous calls to the methods in <see cref="T:net.openstack.Providers.Rackspace.IDnsService"/>.
            </summary>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Core.Synchronous.DnsServiceExtensions.ListLimits(net.openstack.Providers.Rackspace.IDnsService)">
            <summary>
            Get information about the provider-specific limits of this service.
            </summary>
            <param name="service">The DNS service instance.</param>
            <returns>A <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsServiceLimits"/> object containing detailed information about the limits for the service provider.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/List_All_Limits.html">List All Limits (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.DnsServiceExtensions.ListLimitTypes(net.openstack.Providers.Rackspace.IDnsService)">
            <summary>
            Get information about the types of provider-specific limits in place for this service.
            </summary>
            <param name="service">The DNS service instance.</param>
            <returns>A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.LimitType"/> objects containing the limit types supported by the service.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/List_Limit_Types.html">List Limit Types (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.DnsServiceExtensions.ListLimits(net.openstack.Providers.Rackspace.IDnsService,net.openstack.Providers.Rackspace.Objects.Dns.LimitType)">
            <summary>
            Get information about the provider-specific limits of this service for a particular <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.LimitType"/>.
            </summary>
            <param name="service">The DNS service instance.</param>
            <param name="type">The limit type.</param>
            <returns>A <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsServiceLimits"/> object containing detailed information about the limits of the specified <paramref name="type"/> for the service provider.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="service"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="type"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/List_Specific_Limit.html">List Specific Limit (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.DnsServiceExtensions.GetJobStatus(net.openstack.Providers.Rackspace.IDnsService,net.openstack.Providers.Rackspace.Objects.Dns.DnsJob,System.Boolean)">
            <summary>
            Gets information about an asynchronous task being executed by the DNS service.
            </summary>
            <param name="service">The DNS service instance.</param>
            <param name="job">The <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob"/> to query.</param>
            <param name="showDetails"><c>true</c> to include detailed information about the job; otherwise, <c>false</c>.</param>
            <returns>A <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob"/> object containing the updated job information.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="service"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="job"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/sync_asynch_responses.html">Synchronous and Asynchronous Responses (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.DnsServiceExtensions.GetJobStatus``1(net.openstack.Providers.Rackspace.IDnsService,net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{``0},System.Boolean)">
            <summary>
            Gets information about an asynchronous task with a strongly-typed result being executed by the DNS service.
            </summary>
            <param name="service">The DNS service instance.</param>
            <param name="job">The <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob`1"/> to query.</param>
            <param name="showDetails"><c>true</c> to include detailed information about the job; otherwise, <c>false</c>.</param>
            <returns>A <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob`1"/> object containing the updated job information.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="service"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="job"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:Newtonsoft.Json.JsonSerializationException">If an error occurs while deserializing the response object.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/sync_asynch_responses.html">Synchronous and Asynchronous Responses (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.DnsServiceExtensions.ListDomains(net.openstack.Providers.Rackspace.IDnsService,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets information about domains currently listed in the DNS service.
            </summary>
            <param name="service">The DNS service instance.</param>
            <param name="domainName">If specified, the list will be filtered to only include the specified domain and its subdomains (if any exist).</param>
            <param name="offset">The index of the last item in the previous page of results. If not specified, the list starts at the beginning.</param>
            <param name="limit">The maximum number of domains to return in a single page.</param>
            <returns>
            A tuple of the resulting collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain"/> objects and the total number of domains in
            the list. If the total number of domains in the list is not available, the second element of the tuple will
            be <c>null</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="offset"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="limit"/> is less than or equal to 0.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/list_domains.html">List Domains (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/search_domains_w_filters.html">Search Domains with Filtering (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.DnsServiceExtensions.ListDomainDetails(net.openstack.Providers.Rackspace.IDnsService,net.openstack.Providers.Rackspace.Objects.Dns.DomainId,System.Boolean,System.Boolean)">
            <summary>
            Gets detailed information about a specific domain.
            </summary>
            <param name="service">The DNS service instance.</param>
            <param name="domainId">The domain ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Id">DnsDomain.Id</see>.</param>
            <param name="showRecords"><c>true</c> to populate the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Records"/> property of the result; otherwise, <c>false</c>.</param>
            <param name="showSubdomains"><c>true</c> to populate the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Subdomains"/> property of the result; otherwise, <c>false</c>.</param>
            <returns>A <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain"/> object containing the DNS information for the requested domain.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="domainId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/list_domain_details.html">List Domain Details (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.DnsServiceExtensions.ListDomainChanges(net.openstack.Providers.Rackspace.IDnsService,net.openstack.Providers.Rackspace.Objects.Dns.DomainId,System.Nullable{System.DateTimeOffset})">
            <summary>
            Gets information about all changes made to a domain since a specified time.
            </summary>
            <param name="service">The DNS service instance.</param>
            <param name="domainId">The domain ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Id">DnsDomain.Id</see>.</param>
            <param name="since">The timestamp of the earliest changes to consider. If this is <c>null</c>, a provider-specific default value is used.</param>
            <returns>A <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChanges"/> object describing the changes made to a domain registered in the DNS service.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="domainId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/List_Domain_Changes.html">List Domain Changes (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.DnsServiceExtensions.ExportDomain(net.openstack.Providers.Rackspace.IDnsService,net.openstack.Providers.Rackspace.Objects.Dns.DomainId)">
             <summary>
             Exports a domain registered in the DNS service.
             </summary>
             <remarks>
             The exported domain represents a single domain, and does not include subdomains.
            
             <note>
             The <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomainFormat.Bind9"/> format does not support comments, so any
             comments associated with a domain or its records will not be included in the exported
             result.
             </note>
             </remarks>
             <param name="service">The DNS service instance.</param>
             <param name="domainId">The domain ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Id">DnsDomain.Id</see>.</param>
             <returns>A <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob`1"/> object describing the asynchronous server operation.</returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
             <exception cref="T:System.ArgumentNullException">If <paramref name="domainId"/> is <c>null</c>.</exception>
             <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
             <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/export_domain.html">Export Domain (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.DnsServiceExtensions.CreateDomains(net.openstack.Providers.Rackspace.IDnsService,net.openstack.Providers.Rackspace.Objects.Dns.DnsConfiguration)">
            <summary>
            Registers one or more new domains in the DNS service.
            </summary>
            <param name="service">The DNS service instance.</param>
            <param name="configuration">A <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsConfiguration"/> object describing the domains to register in the DNS service.</param>
            <returns>A <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob`1"/> object describing the asynchronous server operation.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="configuration"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/create_domains.html">Create Domain(s) (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.DnsServiceExtensions.UpdateDomains(net.openstack.Providers.Rackspace.IDnsService,net.openstack.Providers.Rackspace.Objects.Dns.DnsUpdateConfiguration)">
            <summary>
            Updates one or more domains in the DNS service.
            </summary>
            <param name="service">The DNS service instance.</param>
            <param name="configuration">A <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsUpdateConfiguration"/> object describing updates to apply to the domains.</param>
            <returns>A <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob"/> object describing the asynchronous server operation.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="configuration"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/Modify_Domain_s_-d1e3848.html">Modify Domain(s) (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.DnsServiceExtensions.CloneDomain(net.openstack.Providers.Rackspace.IDnsService,net.openstack.Providers.Rackspace.Objects.Dns.DomainId,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Clones a domain registered in the DNS service, optionally cloning its subdomains as well.
            </summary>
            <param name="service">The DNS service instance.</param>
            <param name="domainId">The domain ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Id">DnsDomain.Id</see>.</param>
            <param name="cloneName">The name of the new (cloned) domain.</param>
            <param name="cloneSubdomains"><c>true</c> to recursively clone subdomains; otherwise, <c>false</c> to only clone the top-level domain and its records. Cloned subdomain configurations are modified the same way that cloned top-level domain configurations are modified. If this is <c>null</c>, a provider-specific default value is used.</param>
            <param name="modifyRecordData"><c>true</c> to replace occurrences of the reference domain name with the new domain name in comments on the cloned (new) domain. If this is <c>null</c>, a provider-specific default value is used.</param>
            <param name="modifyEmailAddress"><c>true</c> to replace occurrences of the reference domain name with the new domain name in email addresses on the cloned (new) domain. If this is <c>null</c>, a provider-specific default value is used.</param>
            <param name="modifyComment"><true>true</true> to replace occurrences of the reference domain name with the new domain name in data fields (of records) on the cloned (new) domain. Does not affect NS records. If this is <c>null</c>, a provider-specific default value is used.</param>
            <returns>A <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob`1"/> object describing the asynchronous server operation.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="domainId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="cloneName"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="cloneName"/> is empty.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/clone_domain-dle846.html">Clone Domain (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.DnsServiceExtensions.ImportDomain(net.openstack.Providers.Rackspace.IDnsService,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomain})">
            <summary>
            Imports domains into the DNS service.
            </summary>
            <param name="service">The DNS service instance.</param>
            <param name="serializedDomains">A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomain"/> objects containing the serialized domain information to import.</param>
            <returns>A <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob`1"/> object describing the asynchronous server operation.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="serializedDomains"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="serializedDomains"/> is contains any <c>null</c> values.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/import_domain.html">Import Domain (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.DnsServiceExtensions.RemoveDomains(net.openstack.Providers.Rackspace.IDnsService,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.DomainId},System.Boolean)">
            <summary>
            Removes one or more domains from the DNS service.
            </summary>
            <param name="service">The DNS service instance.</param>
            <param name="domainIds">A collection of IDs for the domains to remove. These are obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Id">DnsDomain.Id</see>.</param>
            <param name="deleteSubdomains"><c>true</c> to delete any subdomains associated with the specified domains; otherwise, <c>false</c> to promote any subdomains to top-level domains.</param>
            <returns>A <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob"/> object describing the asynchronous server operation.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="domainIds"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="domainIds"/> contains any <c>null</c> values.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/Remove_Domain_s_-d1e4022.html">Remove Domain(s) (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.DnsServiceExtensions.ListSubdomains(net.openstack.Providers.Rackspace.IDnsService,net.openstack.Providers.Rackspace.Objects.Dns.DomainId,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets information about subdomains currently associated with a domain in the DNS service.
            </summary>
            <param name="service">The DNS service instance.</param>
            <param name="domainId">The top-level domain ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Id">DnsDomain.Id</see>.</param>
            <param name="offset">The index of the last item in the previous page of results. If not specified, the list starts at the beginning.</param>
            <param name="limit">The maximum number of subdomains to return in a single page.</param>
            <returns>
            A tuple of the resulting collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomain"/> objects and the total number
            of domains in the list. If the total number of subdomains in the list is not available, the second
            element of the tuple will be <c>null</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="domainId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="offset"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="limit"/> is less than or equal to 0.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/List_Subdomains-d1e4295.html">List Subdomains (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.DnsServiceExtensions.ListRecords(net.openstack.Providers.Rackspace.IDnsService,net.openstack.Providers.Rackspace.Objects.Dns.DomainId,net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets information about records currently associated with a domain in the DNS service, optionally filtering the results
            to include only records of a specific type, name, and/or data.
            </summary>
            <param name="service">The DNS service instance.</param>
            <param name="domainId">The domain ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Id">DnsDomain.Id</see>.</param>
            <param name="recordType">The specific record type to consider, or <c>null</c> to consider all record types.</param>
            <param name="recordName">The record name, which is matched to the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord.Name"/> property, or <c>null</c> to consider all records.</param>
            <param name="recordData">The record data, which is matched to the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord.Data"/> property, or <c>null</c> to consider all records.</param>
            <param name="offset">The index of the last item in the previous page of results. If not specified, the list starts at the beginning.</param>
            <param name="limit">The maximum number of records to return in a single page.</param>
            <returns>
            A tuple of the resulting collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord"/> objects and the total number of records
            in the list. If the total number of records in the list is not available, the second element of the
            tuple will be <c>null</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="domainId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="offset"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="limit"/> is less than or equal to 0.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/List_Records-d1e4629.html">List Records (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/Search_Records-e338d7e0.html">Search Records (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.DnsServiceExtensions.ListRecordDetails(net.openstack.Providers.Rackspace.IDnsService,net.openstack.Providers.Rackspace.Objects.Dns.DomainId,net.openstack.Providers.Rackspace.Objects.Dns.RecordId)">
            <summary>
            Gets detailed information about a specific DNS record.
            </summary>
            <param name="service">The DNS service instance.</param>
            <param name="domainId">The domain ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Id">DnsDomain.Id</see>.</param>
            <param name="recordId">The record ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord.Id">DnsRecord.Id</see>.</param>
            <returns>A <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord"/> object containing the details of the specified DNS record.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="domainId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="recordId"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/List_Record_Details-d1e4770.html">List Record Details (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.DnsServiceExtensions.AddRecords(net.openstack.Providers.Rackspace.IDnsService,net.openstack.Providers.Rackspace.Objects.Dns.DomainId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration})">
            <summary>
            Adds records to a domain in the DNS service.
            </summary>
            <param name="service">The DNS service instance.</param>
            <param name="domainId">The domain ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Id">DnsDomain.Id</see>.</param>
            <param name="recordConfigurations">A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration"/> objects describing the records to add.</param>
            <returns>A <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob`1"/> object describing the asynchronous server operation.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="domainId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="recordConfigurations"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="recordConfigurations"/> contains any <c>null</c> values.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/Add_Records-d1e4895.html">Add Records (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.DnsServiceExtensions.UpdateRecords(net.openstack.Providers.Rackspace.IDnsService,net.openstack.Providers.Rackspace.Objects.Dns.DomainId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration})">
            <summary>
            Updates domain records in the DNS service.
            </summary>
            <param name="service">The DNS service instance.</param>
            <param name="domainId">The domain ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Id">DnsDomain.Id</see>.</param>
            <param name="recordConfigurations">A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration"/> objects describing the updates to apply to domain records.</param>
            <returns>A <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob"/> object describing the asynchronous server operation.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="domainId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="recordConfigurations"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="recordConfigurations"/> contains any <c>null</c> values.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/Modify_Records-d1e5033.html">Modify Records (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.DnsServiceExtensions.RemoveRecords(net.openstack.Providers.Rackspace.IDnsService,net.openstack.Providers.Rackspace.Objects.Dns.DomainId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.RecordId})">
            <summary>
            Removes one or more domain records from the DNS service.
            </summary>
            <param name="service">The DNS service instance.</param>
            <param name="domainId">The domain ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Id">DnsDomain.Id</see>.</param>
            <param name="recordId">A collection of IDs for the records to remove. These are obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord.Id">DnsRecord.Id</see>.</param>
            <returns>A <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob"/> object describing the asynchronous server operation.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="domainId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="recordId"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="recordId"/> contains any <c>null</c> values.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/Remove_Records-d1e5188.html">Remove Records (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.DnsServiceExtensions.ListPtrRecords(net.openstack.Providers.Rackspace.IDnsService,System.String,System.Uri,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets information about reverse DNS records currently associated with a cloud resource in the DNS service.
            </summary>
            <param name="service">The DNS service instance.</param>
            <param name="serviceName">The name of the service which owns the cloud resource. This is obtained from <see cref="P:net.openstack.Core.Domain.ServiceCatalog.Name"/>.</param>
            <param name="deviceResourceUri">The absolute URI of the cloud resource.</param>
            <param name="offset">The index of the last item in the previous page of results. If not specified, the list starts at the beginning.</param>
            <param name="limit">The maximum number of records to return in a single page.</param>
            <returns>
            A tuple of the resulting collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord"/> objects and the total number of domains
            in the list. If the total number of subdomains in the list is not available, the second element of the
            tuple will be <c>null</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serviceName"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="deviceResourceUri"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="serviceName"/> is empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="offset"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="limit"/> is less than or equal to 0.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/ReverseDNS-123457000.html">List PTR Records (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.DnsServiceExtensions.ListPtrRecordDetails(net.openstack.Providers.Rackspace.IDnsService,System.String,System.Uri,net.openstack.Providers.Rackspace.Objects.Dns.RecordId)">
            <summary>
            Gets detailed information about a reverse DNS record currently associated with a cloud resource in the DNS service.
            </summary>
            <param name="service">The DNS service instance.</param>
            <param name="serviceName">The name of the service which owns the cloud resource. This is obtained from <see cref="P:net.openstack.Core.Domain.ServiceCatalog.Name"/>.</param>
            <param name="deviceResourceUri">The absolute URI of the cloud resource.</param>
            <param name="recordId">The record ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord.Id">DnsRecord.Id</see>.</param>
            <returns>A <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord"/> object containing the details of the specified reverse DNS record.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serviceName"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="deviceResourceUri"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="recordId"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serviceName"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="recordId"/> is empty.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/ReverseDNS-123457001.html">List PTR Record Details (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.DnsServiceExtensions.AddPtrRecords(net.openstack.Providers.Rackspace.IDnsService,System.String,System.Uri,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration})">
            <summary>
            Adds reverse DNS records to a cloud resource in the DNS service.
            </summary>
            <param name="service">The DNS service instance.</param>
            <param name="serviceName">The name of the service which owns the cloud resource. This is obtained from <see cref="P:net.openstack.Core.Domain.ServiceCatalog.Name"/>.</param>
            <param name="deviceResourceUri">The absolute URI of the cloud resource.</param>
            <param name="recordConfigurations">A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration"/> objects describing the records to add.</param>
            <returns>A <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob`1"/> object describing the asynchronous server operation.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serviceName"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="deviceResourceUri"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="recordConfigurations"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serviceName"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="recordConfigurations"/> contains any <c>null</c> values.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/ReverseDNS-123457003.html">Add PTR Records (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.DnsServiceExtensions.UpdatePtrRecords(net.openstack.Providers.Rackspace.IDnsService,System.String,System.Uri,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration})">
            <summary>
            Update reverse DNS records for a cloud resource in the DNS service.
            </summary>
            <param name="service">The DNS service instance.</param>
            <param name="serviceName">The name of the service which owns the cloud resource. This is obtained from <see cref="P:net.openstack.Core.Domain.ServiceCatalog.Name"/>.</param>
            <param name="deviceResourceUri">The absolute URI of the cloud resource.</param>
            <param name="recordConfigurations">A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration"/> objects describing the updates to apply to domain records.</param>
            <returns>A <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob"/> object describing the asynchronous server operation.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serviceName"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="deviceResourceUri"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="recordConfigurations"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serviceName"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="recordConfigurations"/> contains any <c>null</c> values.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/ReverseDNS-123457004.html">Modify PTR Records (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.DnsServiceExtensions.RemovePtrRecords(net.openstack.Providers.Rackspace.IDnsService,System.String,System.Uri,System.Net.IPAddress)">
            <summary>
            Removes one or more reverse DNS records from the DNS service.
            </summary>
            <param name="service">The DNS service instance.</param>
            <param name="serviceName">The name of the service which owns the cloud resource. This is obtained from <see cref="P:net.openstack.Core.Domain.ServiceCatalog.Name"/>.</param>
            <param name="deviceResourceUri">The absolute URI of the cloud resource.</param>
            <param name="ipAddress">The specific record to remove. If this is <c>null</c>, all reverse DNS records associated with the specified device are removed.</param>
            <returns>A <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob"/> object describing the asynchronous server operation.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serviceName"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="deviceResourceUri"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serviceName"/> is empty.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/ReverseDNS-123457005.html">Remove PTR Records (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="T:net.openstack.Core.Synchronous.ClaimExtensions">
            <summary>
            Provides extension methods to allow synchronous calls to the methods in <see cref="T:net.openstack.Core.Domain.Queues.Claim"/>.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Core.Synchronous.ClaimExtensions.Refresh(net.openstack.Core.Domain.Queues.Claim)">
            <summary>
            Refreshes the current claim.
            </summary>
            <remarks>
            This method calls <see cref="M:net.openstack.Core.Providers.IQueueingService.QueryClaimAsync(net.openstack.Core.Domain.Queues.QueueName,net.openstack.Core.Domain.Queues.Claim,System.Threading.CancellationToken)"/> to obtain updated
            information about the current claim, and then synchronously invokes <see cref="M:net.openstack.Core.Domain.Queues.Claim.RefreshImpl(net.openstack.Core.Domain.Queues.Claim)"/>
            to update the current instance to match the results.
            </remarks>
            <param name="claim">The claim.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="claim"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
        </member>
        <member name="M:net.openstack.Core.Synchronous.ClaimExtensions.Renew(net.openstack.Core.Domain.Queues.Claim,System.TimeSpan)">
            <summary>
            Renews the claim by resetting the age and updating the TTL for the claim.
            </summary>
            <remarks>
            This method calls <see cref="M:net.openstack.Core.Providers.IQueueingService.UpdateClaimAsync(net.openstack.Core.Domain.Queues.QueueName,net.openstack.Core.Domain.Queues.Claim,System.TimeSpan,System.Threading.CancellationToken)"/> to renew the
            current claim, and then synchronously updates the current instance to reflect
            the new age and time-to-live values.
            </remarks>
            <param name="claim">The claim.</param>
            <param name="timeToLive">
            The new Time-To-Live value for the claim. This value may differ from the original TTL of the claim.
            </param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="claim"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="timeToLive"/> is negative or <see cref="F:System.TimeSpan.Zero"/>.</exception>
            <exception cref="T:System.InvalidOperationException">If the claim is empty (i.e. <see cref="P:net.openstack.Core.Domain.Queues.Claim.Messages"/> is empty).</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
        </member>
        <member name="T:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions">
            <summary>
            Provides extension methods to allow synchronous calls to the methods in <see cref="T:net.openstack.Providers.Rackspace.ILoadBalancerService"/>.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.ListLoadBalancers(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Nullable{System.Int32})">
            <summary>
            Gets a collection of current load balancers.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="markerId">The <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id"/> of the last item in the previous list. Used for <see href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Paginated_Collections-d1e786.html">pagination</see>. If the value is <c>null</c>, the list starts at the beginning.</param>
            <param name="limit">Indicates the maximum number of items to return. Used for <see href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Paginated_Collections-d1e786.html">pagination</see>. If the value is <c>null</c>, a provider-specific default value is used.</param>
            <returns>
            A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer"/> objects describing the current load balancers.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="limit"/> is less than or equal to 0.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Load_Balancers-d1e1367.html">List Load Balancers (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.GetLoadBalancer(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId)">
            <summary>
            Gets detailed information about a specific load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <returns>
            A <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer"/> object containing detailed information about the specified load balancer.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Load_Balancer_Details-d1e1522.html">List Load Balancer Details (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.CreateLoadBalancer(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration)">
            <summary>
            Creates a new load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="configuration">The configuration for the new load balancer.</param>
            <returns>
            A <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer"/> object describing the new load balancer.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="configuration"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Load_Balancer_Details-d1e1522.html">List Load Balancer Details (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.UpdateLoadBalancer(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUpdate)">
            <summary>
            Updates attributes for an existing load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="configuration">The updated configuration for the load balancer.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="configuration"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Update_Load_Balancer_Attributes-d1e1812.html">Update Load Balancer Attributes (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.RemoveLoadBalancer(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId)">
            <summary>
            Removes a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Remove_Load_Balancer-d1e2093.html">Remove Load Balancer (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.RemoveLoadBalancerRange(net.openstack.Providers.Rackspace.ILoadBalancerService,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId})">
            <summary>
            Removes one or more load balancers.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerIds">The IDs of load balancers to remove. These is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerIds"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="loadBalancerIds"/> contains any <c>null</c> values.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Remove_Load_Balancer-d1e2093.html">Remove Load Balancer (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.GetErrorPage(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId)">
            <summary>
            Gets the HTML content of the page which is shown to an end user who is attempting to access a load balancer node that is offline or unavailable.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <returns>
            The HTML content of the error page which is shown to an end user who is attempting to access a load balancer
            node that is offline or unavailable.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Errorpage-d1e2218.html">Error Page Operations (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.SetErrorPage(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.String)">
            <summary>
            Sets the HTML content of the custom error page which is shown to an end user who is attempting to access a load balancer node that is offline or unavailable.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="content">The HTML content of the error page which is shown to an end user who is attempting to access a load balancer node that is offline or unavailable.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="content"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="content"/> is empty.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Errorpage-d1e2218.html">Error Page Operations (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.RemoveErrorPage(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId)">
            <summary>
            Removes the custom error page which is shown to an end user who is attempting to access a load balancer node that is offline or unavailable.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Errorpage-d1e2218.html">Error Page Operations (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.GetStatistics(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId)">
            <summary>
            Get detailed statistics for a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <returns>
            A <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatistics"/> object containing the detailed statistics for the
            load balancer.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Load_Balancer_Stats-d1e1524.html">List Load Balancer Stats (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.ListNodes(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId)">
            <summary>
            List the load balancer nodes associated with a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <returns>
            A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node"/> objects describing the load balancer nodes associated with the specified
            load balancer.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Nodes-d1e2218.html">List Nodes (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.GetNode(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId)">
            <summary>
            Get detailed information about a load balancer node.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="nodeId">The load balancer node ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node.Id">Node.Id</see>.</param>
            <returns>
            A <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node"/> object describing the specified load balancer node.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="nodeId"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Nodes-d1e2218.html">List Nodes (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.AddNode(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration)">
            <summary>
            Add a node to a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="nodeConfiguration">A <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration"/> object describing the load balancer node to add.</param>
            <returns>
            A <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node"/> object describing the new load balancer node.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="nodeConfiguration"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Add_Nodes-d1e2379.html">Add Nodes (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.AddNodeRange(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration})">
            <summary>
            Add one or more nodes to a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="nodeConfigurations">A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration"/> objects describing the load balancer nodes to add.</param>
            <returns>
            A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node"/> objects describing the new load balancer nodes.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="nodeConfigurations"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="nodeConfigurations"/> contains any <c>null</c> values.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Add_Nodes-d1e2379.html">Add Nodes (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.UpdateNode(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeUpdate)">
            <summary>
            Update the configuration of a load balancer node.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="nodeId">The load balancer node IDs. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node.Id">Node.Id</see>.</param>
            <param name="configuration">The updated configuration for the load balancer node.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="nodeId"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="configuration"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Modify_Nodes-d1e2503.html">Modify Nodes (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.RemoveNode(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId)">
            <summary>
            Remove a nodes from a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="nodeId">The load balancer node IDs. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node.Id">Node.Id</see>.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="nodeId"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Remove_Nodes-d1e2675.html">Remove Nodes (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.RemoveNodeRange(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId})">
            <summary>
            Remove one or more nodes from a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="nodeIds">The load balancer node IDs of nodes to remove. These are obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node.Id">Node.Id</see>.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="nodeIds"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="nodeIds"/> contains any <c>null</c> values.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Remove_Nodes-d1e2675.html">Remove Nodes (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.ListNodeServiceEvents(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventId,System.Nullable{System.Int32})">
            <summary>
            List the service events for a load balancer node.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="markerId">The <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.Id"/> of the last item in the previous list. Used for <see href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Paginated_Collections-d1e786.html">pagination</see>. If the value is <c>null</c>, the list starts at the beginning.</param>
            <param name="limit">Indicates the maximum number of items to return. Used for <see href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Paginated_Collections-d1e786.html">pagination</see>. If the value is <c>null</c>, a provider-specific default value is used.</param>
            <returns>
            A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent"/> objects describing the service events for the load balancer node.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="limit"/> is less than or equal to 0.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Node-Events-d1e264.html">View Node Service Events (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.ListVirtualAddresses(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId)">
            <summary>
            Get a list of all virtual addresses associated with a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <returns>
            A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress"/> objects describing the virtual addresses
            associated with the load balancer.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Virtual_IPs-d1e2809.html">List Virtual IPs (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.AddVirtualAddress(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddressType,System.Net.Sockets.AddressFamily)">
            <summary>
            Add a virtual address to a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="type">The virtual address type.</param>
            <param name="addressFamily">The family of address to add. This should be <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork"/> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6"/>.</param>
            <returns>
            A <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress"/> object describing the added virtual address.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="type"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the specified <paramref name="addressFamily"/> is not supported by this provider.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Add_Virtual_IP_Version_6.html">Add Virtual IP Version 6 (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.RemoveVirtualAddress(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.VirtualAddressId)">
            <summary>
            Remove a virtual address associated with a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="virtualAddressId">The virtual address ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress.Id">LoadBalancerVirtualAddress.Id</see>.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="virtualAddressId"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Remove_Virtual_IP-d1e2919.html">Remove Virtual IP (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.RemoveVirtualAddressRange(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.VirtualAddressId})">
            <summary>
            Remove a collection of virtual addresses associated with a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="virtualAddressIds">The virtual address IDs. These are obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress.Id">LoadBalancerVirtualAddress.Id</see>.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="virtualAddressIds"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="virtualAddressIds"/> contains any <c>null</c> values.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Remove_Virtual_IP-d1e2919.html">Remove Virtual IP (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.ListAllowedDomains(net.openstack.Providers.Rackspace.ILoadBalancerService)">
            <summary>
            Gets the domain name restrictions in place for adding load balancer nodes.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <returns>
            A collection of strings containing the allowed domain names used for adding load balancer nodes.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Node-Events-d1e264.html">View Node Service Events (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.ListBillableLoadBalancers(net.openstack.Providers.Rackspace.ILoadBalancerService,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List billable load balancers for a given date range.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="startTime">The start date to consider. The time component, if any, is ignored. If the value is <c>null</c>, the result includes all usage prior to the specified <paramref name="endTime"/>.</param>
            <param name="endTime">The end date to consider. The time component, if any, is ignored. If the value is <c>null</c>, the result includes all usage following the specified <paramref name="startTime"/>.</param>
            <param name="offset">The index of the last item in the previous page of results. If the value is <c>null</c>, the list starts at the beginning.</param>
            <param name="limit">Gets the maximum number of load balancers to return in a single page of results. If the value is <c>null</c>, a provider-specific default value is used.</param>
            <returns>
            A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer"/> objects describing the load balancers active in the specified
            date range.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="endTime"/> occurs before <paramref name="startTime"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="offset"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="limit"/> is less than or equal to 0.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Usage-d1e3014.html">List Usage (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.ListAccountLevelUsage(net.openstack.Providers.Rackspace.ILoadBalancerService,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary>
            List all usage for an account during a specified date range.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="startTime">The start date to consider. The time component, if any, is ignored. If the value is <c>null</c>, the result includes all usage prior to the specified <paramref name="endTime"/>.</param>
            <param name="endTime">The end date to consider. The time component, if any, is ignored. If the value is <c>null</c>, the result includes all usage following the specified <paramref name="startTime"/>.</param>
            <returns>
            A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage"/> objects describing the load balancer usage for an account
            in the specified date range.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="endTime"/> occurs before <paramref name="startTime"/>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Usage-d1e3014.html">List Usage (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.ListHistoricalUsage(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary>
            List all usage for a specific load balancer during a specified date range.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="startTime">The start date to consider. The time component, if any, is ignored. If the value is <c>null</c>, the result includes all usage prior to the specified <paramref name="endTime"/>.</param>
            <param name="endTime">The end date to consider. The time component, if any, is ignored. If the value is <c>null</c>, the result includes all usage following the specified <paramref name="startTime"/>.</param>
            <returns>
            A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage"/> objects describing the usage for the load balancer in
            the specified date range.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="endTime"/> occurs before <paramref name="startTime"/>.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Usage-d1e3014.html">List Usage (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.ListCurrentUsage(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId)">
            <summary>
            List all usage for a specific load balancer during a preceding 24 hours.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <returns>
            A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage"/> objects describing the usage for the load balancer in
            the preceding 24 hours.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Usage-d1e3014.html">List Usage (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.ListAccessList(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId)">
            <summary>
            Gets the access list configuration for a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <returns>
            A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem"/> objects describing the access list configuration for the load
            balancer.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Manage_Access_Lists-d1e3187.html">Manage Access Lists (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.CreateAccessList(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem)">
            <summary>
            Add a network item to the access list for a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="networkItem">A <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem"/> object describing the network item to add to the load balancer's access list.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="networkItem"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Manage_Access_Lists-d1e3187.html">Manage Access Lists (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.CreateAccessList(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem})">
            <summary>
            Add a collection of network items to the access list for a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="networkItems">A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem"/> objects describing the network items to add to the load balancer's access list.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="networkItems"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="networkItems"/> contains any <c>null</c> values.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Manage_Access_Lists-d1e3187.html">Manage Access Lists (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.RemoveAccessList(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItemId)">
            <summary>
            Remove a network item from the access list of a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="networkItemId">The network item ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem.Id"/>.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="networkItemId"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Manage_Access_Lists-d1e3187.html">Manage Access Lists (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.RemoveAccessListRange(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItemId})">
            <summary>
            Remove a collection of network items from the access list of a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="networkItemIds">The network item IDs. These are obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem.Id"/>.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="networkItemIds"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="networkItemIds"/> contains any <c>null</c> values.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Manage_Access_Lists-d1e3187.html">Manage Access Lists (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.ClearAccessList(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId)">
            <summary>
            Remove all network items from the access list of a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Manage_Access_Lists-d1e3187.html">Manage Access Lists (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.GetHealthMonitor(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId)">
            <summary>
            Gets the health monitor currently configured for a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <returns>
            A <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor"/> object describing the health monitor configured for the
            load balancer.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Monitor_Health-d1e3434.html">Monitor Health (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.SetHealthMonitor(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor)">
            <summary>
            Sets the health monitor configuration for a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="monitor">The updated health monitor configuration.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="monitor"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Monitor_Health-d1e3434.html">Monitor Health (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.RemoveHealthMonitor(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId)">
            <summary>
            Remove the health monitor currently configured for a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Monitor_Health-d1e3434.html">Monitor Health (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.GetSessionPersistence(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId)">
            <summary>
            Gets the session persistence configuration for a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <returns>
            A <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistence"/> object describing the session persistence configuration for the load balancer.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Manage_Session_Persistence-d1e3733.html">Manage Session Persistence (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.SetSessionPersistence(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistence)">
             <summary>
             Sets the session persistence configuration for a load balancer.
             </summary>
             <remarks>
             You can only set one of the session persistence modes on a load balancer, and it can only support one
             protocol, so if you set <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistenceType.HttpCookie"/> mode for an HTTP load balancer,
             then it will support session persistence for HTTP requests only. Likewise, if you set
             <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistenceType.SourceAddress"/> mode for an HTTPS load balancer, then it will support
             session persistence for HTTPS requests only.
            
             <para>
             If you want to support session persistence for both HTTP and HTTPS requests concurrently, then you have 2 choices:
             </para>
            
             <list type="bullet">
             <item>Use two load balancers, one configured for session persistence for HTTP requests and the other
             configured for session persistence for HTTPS requests. That way, the load balancers together will support
             session persistence for both HTTP and HTTPS requests concurrently, with each load balancer supporting one
             of the protocols.</item>
             <item>Use one load balancer, configure it for session persistence for HTTP requests, and then enable SSL
             termination for that load balancer (refer to Section 4.17, "SSL Termination" for details). The load
             balancer will then support session persistence for both HTTP and HTTPS requests concurrently.</item>
             </list>
             </remarks>
             <param name="service">The load balancer service instance.</param>
             <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
             <param name="sessionPersistence">The session persistence configuration.</param>
             <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="loadBalancerId"/> is <c>null</c>.
             <para>-or-</para>
             <para>If <paramref name="sessionPersistence"/> is <c>null</c>.</para>
             </exception>
             <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
             <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Manage_Session_Persistence-d1e3733.html">Manage Session Persistence (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.RemoveSessionPersistence(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId)">
            <summary>
            Removes the session persistence configuration for a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Manage_Session_Persistence-d1e3733.html">Manage Session Persistence (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.GetConnectionLogging(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId)">
            <summary>
            Gets whether or not connection logging is enabled for a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <returns>
            <c>true</c> if content caching is enabled for the load balancer; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Log_Connections-d1e3924.html">Log Connections (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.SetConnectionLogging(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Boolean)">
            <summary>
            Enables or disables connection logging for a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="enabled"><c>true</c> to enable connection logging on the load balancer; otherwise, <c>false</c>.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Log_Connections-d1e3924.html">Log Connections (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.ListThrottles(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId)">
            <summary>
            Gets the connection throttling configuration for a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <returns>
            A <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles"/> object describing the connection throttling configuration in effect on the load balancer.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Throttle_Connections-d1e4057.html">Throttle Connections (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.UpdateThrottles(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles)">
            <summary>
            Updates the connection throttling configuration for a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="throttleConfiguration">A <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles"/> object describing the throttling configuration to apply for the load balancer.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="throttleConfiguration"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Throttle_Connections-d1e4057.html">Throttle Connections (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.RemoveThrottles(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId)">
            <summary>
            Removes the connection throttling configuration for a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Throttle_Connections-d1e4057.html">Throttle Connections (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.GetContentCaching(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId)">
             <summary>
             Gets whether or not content caching is enabled for a load balancer.
             </summary>
             <remarks>
             When content caching is enabled, recently-accessed files are stored on the load balancer
             for easy retrieval by web clients. Content caching improves the performance of high
             traffic web sites by temporarily storing data that was recently accessed. While it's
             cached, requests for that data will be served by the load balancer, which in turn reduces
             load off the back end nodes. The result is improved response times for those requests and
             less load on the web server.
            
             <para>
             For more information about content caching, refer to the following Knowledge Center
             article:
             <see href="http://www.rackspace.com/knowledge_center/content/content-caching-cloud-load-balancers">Content Caching for Cloud Load Balancers</see>.
             </para>
             </remarks>
             <param name="service">The load balancer service instance.</param>
             <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
             <returns>
             <c>true</c> if content caching is enabled for the load balancer; otherwise, <c>false</c>.
             </returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
             <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
             <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
             <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/ContentCaching-d1e3358.html">Content Caching (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.SetContentCaching(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Boolean)">
             <summary>
             Enables or disables content caching for a load balancer.
             </summary>
             <remarks>
             When content caching is enabled, recently-accessed files are stored on the load balancer
             for easy retrieval by web clients. Content caching improves the performance of high
             traffic web sites by temporarily storing data that was recently accessed. While it's
             cached, requests for that data will be served by the load balancer, which in turn reduces
             load off the back end nodes. The result is improved response times for those requests and
             less load on the web server.
            
             <para>
             For more information about content caching, refer to the following Knowledge Center
             article:
             <see href="http://www.rackspace.com/knowledge_center/content/content-caching-cloud-load-balancers">Content Caching for Cloud Load Balancers</see>.
             </para>
             </remarks>
             <param name="service">The load balancer service instance.</param>
             <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
             <param name="enabled"><c>true</c> to enable content caching on the load balancer; otherwise, <c>false</c>.</param>
             <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
             <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
             <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
             <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/ContentCaching-d1e3358.html">Content Caching (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.ListProtocols(net.openstack.Providers.Rackspace.ILoadBalancerService)">
            <summary>
            Gets a collection of supported load balancing protocols.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <returns>
            A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingProtocol"/> objects describing the load balancing
            protocols supported by this service.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Load_Balancing_Protocols-d1e4269.html">List Load Balancing Protocols (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.ListAlgorithms(net.openstack.Providers.Rackspace.ILoadBalancerService)">
            <summary>
            Gets a collection of supported load balancing algorithms.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <returns>
            A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingAlgorithm"/> objects describing the load balancing
            algorithms supported by this service.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Load_Balancing_Algorithms-d1e4459.html">List Load Balancing Algorithms (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.GetSslConfiguration(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId)">
            <summary>
            Gets the SSL termination configuration for a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <returns>
            A <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration"/> object describing the SSL termination
            configuration for the load balancer.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/SSLTermination-d1e2479.html#d6e3823">SSL Termination (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.UpdateSslConfiguration(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration)">
            <summary>
            Update the SSL termination configuration for a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="configuration">The updated SSL termination configuration.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="configuration"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/SSLTermination-d1e2479.html#d6e3823">SSL Termination (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.RemoveSslConfiguration(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId)">
            <summary>
            Update the SSL termination configuration for a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/SSLTermination-d1e2479.html#d6e3823">SSL Termination (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.ListLoadBalancerMetadata(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId)">
            <summary>
            Gets the metadata associated with a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <returns>
            A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem"/> objects describing the metadata
            associated with a load balancer.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Metadata-d1e2218.html">List Metadata (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.GetLoadBalancerMetadataItem(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.MetadataId)">
            <summary>
            Gets a specific metadata item associated with a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="metadataId">The metadata item ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem.Id">LoadBalancerMetadataItem.Id</see>.</param>
            <returns>
            A <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem"/> object describing the metadata item.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="metadataId"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Metadata-d1e2218.html">List Metadata (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.ListNodeMetadata(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId)">
            <summary>
            Gets the metadata associated with a load balancer node.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="nodeId">The load balancer node ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node.Id">Node.Id</see>.</param>
            <returns>
            A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem"/> objects describing the metadata
            associated with the load balancer node.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="nodeId"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Metadata-d1e2218.html">List Metadata (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.GetNodeMetadataItem(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.MetadataId)">
            <summary>
            Gets a specific metadata item associated with a load balancer node.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="nodeId">The load balancer node ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node.Id">Node.Id</see>.</param>
            <param name="metadataId">The metadata item ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem.Id">LoadBalancerMetadataItem.Id</see>.</param>
            <returns>
            A <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem"/> object describing the metadata item.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="nodeId"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="metadataId"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Metadata-d1e2218.html">List Metadata (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.AddLoadBalancerMetadata(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Updates the metadata associated with a load balancer.
            </summary>
            <remarks>
            <note type="warning">
            The behavior is unspecified if <paramref name="metadata"/> contains a pair whose key matches the name of an existing metadata item associated with the load balancer.
            </note>
            </remarks>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="metadata">A collection of metadata items to associate with the load balancer.</param>
            <returns>
            A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem"/> objects describing the updated
            metadata associated with the load balancer.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="metadata"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="metadata"/> contains a pair whose <see cref="P:System.Collections.Generic.KeyValuePair`2.Key"/> is <c>null</c> or empty, or whose <see cref="P:System.Collections.Generic.KeyValuePair`2.Value"/> is is <c>null</c>.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Add_Metadata-d1e2379.html">Add Metadata (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.AddNodeMetadata(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Updates the metadata associated with a load balancer node.
            </summary>
            <remarks>
            <note type="warning">
            The behavior is unspecified if <paramref name="metadata"/> contains a pair whose key matches the name of an existing metadata item associated with the node.
            </note>
            </remarks>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="nodeId">The load balancer node ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node.Id">Node.Id</see>.</param>
            <param name="metadata">A collection of metadata items to associate with the node.</param>
            <returns>
            A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem"/> objects describing the updated
            metadata associated with the load balancer node.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="nodeId"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="metadata"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="metadata"/> contains a pair whose <see cref="P:System.Collections.Generic.KeyValuePair`2.Key"/> is <c>null</c> or empty, or whose <see cref="P:System.Collections.Generic.KeyValuePair`2.Value"/> is is <c>null</c>.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Add_Metadata-d1e2379.html">Add Metadata (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.UpdateLoadBalancerMetadataItem(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.MetadataId,System.String)">
            <summary>
            Sets the value for a metadata item associated with a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="metadataId">The metadata item ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem.Id">LoadBalancerMetadataItem.Id</see>.</param>
            <param name="value">The new value for the metadata item.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="metadataId"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="value"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Modify_Metadata-d1e2503.html">Modify Metadata (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.UpdateNodeMetadataItem(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.MetadataId,System.String)">
            <summary>
            Sets the value for a metadata item associated with a load balancer node.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="nodeId">The load balancer node ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node.Id">Node.Id</see>.</param>
            <param name="metadataId">The metadata item ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem.Id">LoadBalancerMetadataItem.Id</see>.</param>
            <param name="value">The new value for the metadata item.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="nodeId"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="metadataId"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="value"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Modify_Metadata-d1e2503.html">Modify Metadata (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.RemoveLoadBalancerMetadataItem(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.MetadataId})">
            <summary>
            Removes one or more metadata items associated with a load balancer.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="metadataIds">The metadata item IDs. These are obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem.Id">LoadBalancerMetadataItem.Id</see>.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="metadataIds"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="metadataIds"/> contains any <c>null</c> values.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Remove_Metadata-d1e2675.html">Remove Metadata (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.LoadBalancerServiceExtensions.RemoveNodeMetadataItem(net.openstack.Providers.Rackspace.ILoadBalancerService,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.MetadataId})">
            <summary>
            Removes one or more metadata items associated with a load balancer node.
            </summary>
            <param name="service">The load balancer service instance.</param>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="nodeId">The load balancer node ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node.Id">Node.Id</see>.</param>
            <param name="metadataIds">The metadata item IDs. These are obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem.Id">LoadBalancerMetadataItem.Id</see>.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="service"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="nodeId"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="metadataIds"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="metadataIds"/> contains any <c>null</c> values.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Remove_Metadata-d1e2675.html">Remove Metadata (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="T:net.openstack.Core.Synchronous.NamespaceDoc">
            <summary>
            The <see cref="N:net.openstack.Core.Synchronous"/> namespace defines classes providing
            extension methods for calling asynchronous services in a synchronous manner.
            <note>
            These extension methods are not recommended for use in new development, but are
            provided as a compatibility aid for projects where external restrictions preclude
            the direct use of the asynchronous APIs.
            </note>
            </summary>
        </member>
        <member name="T:net.openstack.Core.Synchronous.QueueingServiceExtensions">
            <summary>
            Provides extension methods to allow synchronous calls to the methods in <see cref="T:net.openstack.Core.Providers.IQueueingService"/>.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Core.Synchronous.QueueingServiceExtensions.GetHome(net.openstack.Core.Providers.IQueueingService)">
            <summary>
            Gets the home document describing the operations supported by the service.
            </summary>
            <param name="queueingService">The queueing service instance.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.HomeDocument"/> object describing the operations supported by the service.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueingService"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Get_Home_Document">Get Home Document (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.QueueingServiceExtensions.GetNodeHealth(net.openstack.Core.Providers.IQueueingService)">
            <summary>
            Checks the queueing service node status.
            </summary>
            <param name="queueingService">The queueing service instance.</param>
            <returns>
            If the service is available, the operation will complete successfully. If the service
            is unavailable due to a storage driver failure or some other error, the operation will
            fail and the exception will contain the reason for the failure.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueingService"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/wiki/Marconi/specs/api/v1#Check_Node_Health">Check Node Health (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.QueueingServiceExtensions.CreateQueue(net.openstack.Core.Providers.IQueueingService,net.openstack.Core.Domain.Queues.QueueName)">
            <summary>
            Creates a queue, if it does not already exist.
            </summary>
            <param name="queueingService">The queueing service instance.</param>
            <param name="queueName">The queue name.</param>
            <returns><c>true</c> if the queue was created by the call, or <c>false</c> if the queue already existed.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueingService"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueName"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Create_Queue">Create Queue (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.QueueingServiceExtensions.ListQueues(net.openstack.Core.Providers.IQueueingService,net.openstack.Core.Domain.Queues.QueueName,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Gets a list of queues.
            </summary>
            <param name="queueingService">The queueing service instance.</param>
            <param name="marker">The name of the last queue in the previous list. The resulting collection of queues will start with the first queue <em>after</em> this value, when sorted using <see cref="P:System.StringComparer.Ordinal"/>. If this value is <c>null</c>, the list starts at the beginning.</param>
            <param name="limit">The maximum number of queues to return. If this value is <c>null</c>, a provider-specific default value is used.</param>
            <param name="detailed"><c>true</c> to return detailed information about each queue; otherwise, <c>false</c>.</param>
            <returns><placeholder>placeholder</placeholder></returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueingService"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="limit"/> is less than or equal to 0.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#List_Queues">List Queues (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.QueueingServiceExtensions.QueueExists(net.openstack.Core.Providers.IQueueingService,net.openstack.Core.Domain.Queues.QueueName)">
            <summary>
            Checks for the existence of a queue with a particular name.
            </summary>
            <param name="queueingService">The queueing service instance.</param>
            <param name="queueName">The queue name.</param>
            <returns><c>true</c> if queue with the specified name exists; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueingService"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueName"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Checking_Queue_Existence">Checking Queue Existence (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.QueueingServiceExtensions.DeleteQueue(net.openstack.Core.Providers.IQueueingService,net.openstack.Core.Domain.Queues.QueueName)">
            <summary>
            Deletes a queue.
            </summary>
            <remarks>
            The queue will be deleted whether or not it is empty, even if one or more messages in the queue is currently claimed.
            </remarks>
            <param name="queueingService">The queueing service instance.</param>
            <param name="queueName">The queue name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueingService"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueName"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Delete_Queue">Delete Queue (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.QueueingServiceExtensions.SetQueueMetadata``1(net.openstack.Core.Providers.IQueueingService,net.openstack.Core.Domain.Queues.QueueName,``0)">
            <summary>
            Sets the metadata associated with a queue.
            </summary>
            <typeparam name="T">The type of data to associate with the queue.</typeparam>
            <param name="queueingService">The queueing service instance.</param>
            <param name="queueName">The queue name.</param>
            <param name="metadata">The metadata to associate with the queue.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueingService"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueName"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Set_Queue_Metadata">Set Queue Metadata (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.QueueingServiceExtensions.GetQueueMetadata(net.openstack.Core.Providers.IQueueingService,net.openstack.Core.Domain.Queues.QueueName)">
            <summary>
            Gets the metadata associated with a queue.
            </summary>
            <param name="queueingService">The queueing service instance.</param>
            <param name="queueName">The queue name.</param>
            <returns>A <see cref="T:Newtonsoft.Json.Linq.JObject"/> object containing the metadata associated with the queue.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueingService"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueName"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Get_Queue_Metadata">Get Queue Metadata (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.QueueingServiceExtensions.GetQueueMetadata``1(net.openstack.Core.Providers.IQueueingService,net.openstack.Core.Domain.Queues.QueueName)">
            <summary>
            Gets the metadata associated with a queue, as a strongly-typed object.
            </summary>
            <typeparam name="T">The type of metadata associated with the queue.</typeparam>
            <param name="queueingService">The queueing service instance.</param>
            <param name="queueName">The queue name.</param>
            <returns>A deserialized object of type <typeparamref name="T"/> representing the metadata associated with the queue.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueingService"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueName"/> is <c>null</c>.</exception>
            <exception cref="T:Newtonsoft.Json.JsonSerializationException">If an error occurs while deserializing the metadata.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Get_Queue_Metadata">Get Queue Metadata (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.QueueingServiceExtensions.GetQueueStatistics(net.openstack.Core.Providers.IQueueingService,net.openstack.Core.Domain.Queues.QueueName)">
            <summary>
            Gets statistics for a queue.
            </summary>
            <param name="queueingService">The queueing service instance.</param>
            <param name="queueName">The queue name.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.Queues.QueueStatistics"/> object containing statistics for the queue.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueingService"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueName"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Get_Queue_Stats">Get Queue Stats (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.QueueingServiceExtensions.ListMessages(net.openstack.Core.Providers.IQueueingService,net.openstack.Core.Domain.Queues.QueueName,net.openstack.Core.Domain.Queues.QueuedMessageList,System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            Gets a list of messages currently in a queue.
            </summary>
            <param name="queueingService">The queueing service instance.</param>
            <param name="queueName">The queue name.</param>
            <param name="marker">The <see cref="T:net.openstack.Core.Domain.Queues.QueuedMessageList"/> object returned by a previous call to <see cref="M:net.openstack.Core.Providers.IQueueingService.ListMessagesAsync(net.openstack.Core.Domain.Queues.QueueName,net.openstack.Core.Domain.Queues.QueuedMessageList,System.Nullable{System.Int32},System.Boolean,System.Boolean,System.Threading.CancellationToken)"/>. If this value is <c>null</c>, the list starts at the beginning.</param>
            <param name="limit">The maximum number of messages to return. If this value is <c>null</c>, a provider-specific default value is used.</param>
            <param name="echo"><c>true</c> to include messages created by the current client; otherwise, <c>false</c>.</param>
            <param name="includeClaimed"><c>true</c> to include claimed messages; otherwise <c>false</c> to return only unclaimed messages.</param>
            <returns>A collection of <see cref="T:net.openstack.Core.Domain.Queues.QueuedMessage"/> objects describing the messages in the queue.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueingService"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="limit"/> is less than or equal to 0.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#List_Messages">List Messages (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.QueueingServiceExtensions.GetMessage(net.openstack.Core.Providers.IQueueingService,net.openstack.Core.Domain.Queues.QueueName,net.openstack.Core.Domain.Queues.MessageId)">
            <summary>
            Gets detailed information about a specific queued message.
            </summary>
            <remarks>
            This method will return information for the specified message regardless of the
            <literal>Client-ID</literal> or claim associated with the message.
            </remarks>
            <param name="queueingService">The queueing service instance.</param>
            <param name="queueName">The queue name.</param>
            <param name="messageId">The message ID. This is obtained from <see cref="P:net.openstack.Core.Domain.Queues.QueuedMessage.Id">QueuedMessage.Id</see>.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.Queues.QueuedMessage"/> object containing detailed information about the specified message.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueingService"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="queueName"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="messageId"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Get_a_Specific_Message">Get a Specific Message (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.QueueingServiceExtensions.GetMessages(net.openstack.Core.Providers.IQueueingService,net.openstack.Core.Domain.Queues.QueueName,System.Collections.Generic.IEnumerable{net.openstack.Core.Domain.Queues.MessageId})">
            <summary>
            Get messages from a queue.
            </summary>
            <remarks>
            This method will return information for the specified message regardless of the
            <literal>Client-ID</literal> or claim associated with the message.
            </remarks>
            <param name="queueingService">The queueing service instance.</param>
            <param name="queueName">The queue name.</param>
            <param name="messageIds">The message IDs of messages to get.</param>
            <returns>A collection of <see cref="T:net.openstack.Core.Domain.Queues.QueuedMessage"/> objects containing detailed information about the specified messages.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueingService"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="queueName"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="messageIds"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="messageIds"/> contains a <c>null</c> value.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Get_a_Set_of_Messages_by_ID">Get a Set of Messages by ID (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.QueueingServiceExtensions.PostMessages(net.openstack.Core.Providers.IQueueingService,net.openstack.Core.Domain.Queues.QueueName,System.Collections.Generic.IEnumerable{net.openstack.Core.Domain.Queues.Message})">
            <summary>
            Posts messages to a queue.
            </summary>
            <param name="queueingService">The queueing service instance.</param>
            <param name="queueName">The queue name.</param>
            <param name="messages">The messages to post.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueingService"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="queueName"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="messages"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="messages"/> contains a <c>null</c> value.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Post_Message.28s.29">Post Message(s) (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.QueueingServiceExtensions.PostMessages(net.openstack.Core.Providers.IQueueingService,net.openstack.Core.Domain.Queues.QueueName,net.openstack.Core.Domain.Queues.Message[])">
            <summary>
            Posts messages to a queue.
            </summary>
            <param name="queueingService">The queueing service instance.</param>
            <param name="queueName">The queue name.</param>
            <param name="messages">The messages to post.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueingService"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="queueName"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="messages"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="messages"/> contains a <c>null</c> value.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Post_Message.28s.29">Post Message(s) (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.QueueingServiceExtensions.PostMessages``1(net.openstack.Core.Providers.IQueueingService,net.openstack.Core.Domain.Queues.QueueName,System.Collections.Generic.IEnumerable{net.openstack.Core.Domain.Queues.Message{``0}})">
            <summary>
            Posts messages to a queue.
            </summary>
            <param name="queueingService">The queueing service instance.</param>
            <param name="queueName">The queue name.</param>
            <param name="messages">The messages to post.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueingService"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="queueName"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="messages"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="messages"/> contains a <c>null</c> value.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Post_Message.28s.29">Post Message(s) (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.QueueingServiceExtensions.PostMessages``1(net.openstack.Core.Providers.IQueueingService,net.openstack.Core.Domain.Queues.QueueName,net.openstack.Core.Domain.Queues.Message{``0}[])">
            <summary>
            Posts messages to a queue.
            </summary>
            <param name="queueingService">The queueing service instance.</param>
            <param name="queueName">The queue name.</param>
            <param name="messages">The messages to post.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueingService"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="queueName"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="messages"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="messages"/> contains a <c>null</c> value.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Post_Message.28s.29">Post Message(s) (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.QueueingServiceExtensions.DeleteMessage(net.openstack.Core.Providers.IQueueingService,net.openstack.Core.Domain.Queues.QueueName,net.openstack.Core.Domain.Queues.MessageId,net.openstack.Core.Domain.Queues.Claim)">
            <summary>
            Deletes a message from a queue.
            </summary>
            <param name="queueingService">The queueing service instance.</param>
            <param name="queueName">The queue name.</param>
            <param name="messageId">The ID of the message to delete. This is obtained from <see cref="P:net.openstack.Core.Domain.Queues.QueuedMessage.Id">QueuedMessage.Id</see>.</param>
            <param name="claim">The claim for the message. If this value is <c>null</c>, the delete operation will fail if the message is claimed. If this value is non-<c>null</c>, the delete operation will fail if the message is not claimed by the specified claim.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueingService"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="queueName"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="messageId"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Delete_Message">Delete Message (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.QueueingServiceExtensions.DeleteMessages(net.openstack.Core.Providers.IQueueingService,net.openstack.Core.Domain.Queues.QueueName,System.Collections.Generic.IEnumerable{net.openstack.Core.Domain.Queues.MessageId})">
            <summary>
            Deletes messages from a queue.
            </summary>
            <remarks>
            <note type="warning">
            This method deletes messages from a queue whether or not they are currently claimed.
            </note>
            </remarks>
            <param name="queueingService">The queueing service instance.</param>
            <param name="queueName">The queue name.</param>
            <param name="messageIds">The IDs of messages to delete. These are obtained from <see cref="P:net.openstack.Core.Domain.Queues.QueuedMessage.Id">QueuedMessage.Id</see>.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueingService"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="queueName"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="messageIds"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="messageIds"/> contains a <c>null</c> value.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Delete_a_Set_of_Messages_by_ID">Delete a Set of Messages by ID (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.QueueingServiceExtensions.ClaimMessage(net.openstack.Core.Providers.IQueueingService,net.openstack.Core.Domain.Queues.QueueName,System.Nullable{System.Int32},System.TimeSpan,System.TimeSpan)">
             <summary>
             Claim messages from a queue.
             </summary>
             <remarks>
             When the claim is no longer required, the code should call <see cref="M:net.openstack.Core.Domain.Queues.Claim.DisposeAsync(System.Threading.CancellationToken)"/>
             or <see cref="M:net.openstack.Core.Domain.Queues.Claim.Dispose"/> to ensure the following actions are taken.
             <list type="bullet">
             <item>Messages which are part of this claim which were not processed are made available to other nodes.</item>
             <item>The claim resource is cleaned up without waiting for the time-to-live to expire.</item>
             </list>
            
             <para>Messages which are not deleted before the claim is released will be eligible for
             reclaiming by another process.</para>
             </remarks>
             <param name="queueingService">The queueing service instance.</param>
             <param name="queueName">The queue name.</param>
             <param name="limit">The maximum number of messages to claim. If this value is <c>null</c>, a provider-specific default value is used.</param>
             <param name="timeToLive">The time to wait before the server automatically releases the claim.</param>
             <param name="gracePeriod">The time to wait, after the time-to-live for the claim expires, before the server allows the claimed messages to be deleted due to the individual message's time-to-live expiring.</param>
             <returns>A <see cref="T:net.openstack.Core.Domain.Queues.Claim"/> object representing the claim.</returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="queueingService"/> is <c>null</c>.</exception>
             <exception cref="T:System.ArgumentNullException">If <paramref name="queueName"/> is <c>null</c>.</exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
             If <paramref name="limit"/> is less than or equal to 0.
             <para>-or-</para>
             <para>If <paramref name="timeToLive"/> is negative or <see cref="F:System.TimeSpan.Zero"/>.</para>
             <para>-or-</para>
             <para>If <paramref name="gracePeriod"/> is negative.</para>
             </exception>
             <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
             <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Claim_Messages">Claim Messages (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.QueueingServiceExtensions.QueryClaim(net.openstack.Core.Providers.IQueueingService,net.openstack.Core.Domain.Queues.QueueName,net.openstack.Core.Domain.Queues.Claim)">
            <summary>
            Gets detailed information about the current state of a claim.
            </summary>
            <remarks>
            <note type="caller">Use <see cref="M:net.openstack.Core.Domain.Queues.Claim.RefreshAsync(System.Threading.CancellationToken)"/> instead of calling this method directly.</note>
            </remarks>
            <param name="queueingService">The queueing service instance.</param>
            <param name="queueName">The queue name.</param>
            <param name="claim">The claim to query.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.Queues.Claim"/> object representing the claim.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueingService"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="queueName"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="claim"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Query_Claim">Query Claim (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.QueueingServiceExtensions.UpdateClaim(net.openstack.Core.Providers.IQueueingService,net.openstack.Core.Domain.Queues.QueueName,net.openstack.Core.Domain.Queues.Claim,System.TimeSpan)">
            <summary>
            Renews a claim, by updating the time-to-live and resetting the age of the claim to zero.
            </summary>
            <remarks>
            <note type="caller">Use <see cref="M:net.openstack.Core.Domain.Queues.Claim.RenewAsync(System.TimeSpan,System.Threading.CancellationToken)"/> instead of calling this method directly.</note>
            </remarks>
            <param name="queueingService">The queueing service instance.</param>
            <param name="queueName">The queue name.</param>
            <param name="claim">The claim to renew.</param>
            <param name="timeToLive">The updated time-to-live for the claim.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueingService"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="queueName"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="claim"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="timeToLive"/> is negative.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Update_Claim">Update Claim (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="M:net.openstack.Core.Synchronous.QueueingServiceExtensions.ReleaseClaim(net.openstack.Core.Providers.IQueueingService,net.openstack.Core.Domain.Queues.QueueName,net.openstack.Core.Domain.Queues.Claim)">
            <summary>
            Immediately release a claim, making any (remaining, non-deleted) messages associated
            with the claim available to other workers.
            </summary>
            <remarks>
            <note type="caller">Use <see cref="M:net.openstack.Core.Domain.Queues.Claim.DisposeAsync(System.Threading.CancellationToken)"/> instead of calling this method directly.</note>
            </remarks>
            <param name="queueingService">The queueing service instance.</param>
            <param name="queueName">The queue name.</param>
            <param name="claim">The claim to release.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="queueingService"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="queueName"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="claim"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1#Release_Claim">Release Claim (OpenStack Marconi API v1 Blueprint)</seealso>
        </member>
        <member name="T:net.openstack.Core.Validators.NamespaceDoc">
            <summary>
            The <see cref="N:net.openstack.Core.Validators"/> namespace defines interfaces
            for validating request arguments prior to sending them in calls to REST APIs.
            These interfaces may be implemented in a provider-specific manner.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.CloudDnsProvider">
            <summary>
            Provides an implementation of <see cref="T:net.openstack.Providers.Rackspace.IDnsService"/> for operating
            with Rackspace's Cloud DNS product.
            </summary>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/index.html">Rackspace Cloud DNS Developer Guide - API v1.0</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.ProviderBase`1">
            <summary>
            Adds common functionality for all Rackspace Providers.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.ProviderBase`1.IdentityProvider">
            <summary>
            The <see cref="T:net.openstack.Core.Providers.IIdentityProvider"/> to use for authenticating requests to this provider.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.ProviderBase`1.RestService">
            <summary>
            The REST service implementation to use for requests sent from this provider.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.ProviderBase`1.DefaultIdentity">
            <summary>
            The default identity to use when none is specified in the specific request.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.ProviderBase`1.ResponseCodeValidator">
            <summary>
            The validator to use for determining whether a particular HTTP status code represents
            a success or failure.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.ProviderBase`1._connectionLimit">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.ProviderBase`1.ConnectionLimit"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.ProviderBase`1._defaultRegion">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.ProviderBase`1.DefaultRegion"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.ProviderBase`1._backoffPolicy">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.ProviderBase`1.BackoffPolicy"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ProviderBase`1.#ctor(net.openstack.Core.Domain.CloudIdentity,System.String,net.openstack.Core.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.ProviderBase`1"/> class using
            the specified default identity, default region, identity provider, and REST service
            implementation, and the default HTTP response code validator.
            </summary>
            <param name="defaultIdentity">The default identity to use for calls that do not explicitly specify an identity. If this value is <c>null</c>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="defaultRegion">The default region to use for calls that do not explicitly specify a region. If this value is <c>null</c>, the default region for the user will be used; otherwise if the service uses region-specific endpoints all calls must specify an explicit region.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <c>null</c>, a new instance of <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> is created using <paramref name="defaultIdentity"/> as the default identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <c>null</c>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ProviderBase`1.#ctor(net.openstack.Core.Domain.CloudIdentity,System.String,net.openstack.Core.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService,net.openstack.Core.Validators.IHttpResponseCodeValidator)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.ProviderBase`1"/> class
            using the specified values.
            </summary>
            <param name="defaultIdentity">The default identity to use for calls that do not explicitly specify an identity. If this value is <c>null</c>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="defaultRegion">The default region to use for calls that do not explicitly specify a region. If this value is <c>null</c>, the default region for the user will be used; otherwise if the service uses region-specific endpoints all calls must specify an explicit region.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <c>null</c>, a new instance of <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> is created using <paramref name="defaultIdentity"/> as the default identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <c>null</c>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
            <param name="httpStatusCodeValidator">The HTTP status code validator to use. If this value is <c>null</c>, the provider will use <see cref="P:net.openstack.Providers.Rackspace.Validators.HttpResponseCodeValidator.Default"/>.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ProviderBase`1.ExecuteRESTRequest``1(net.openstack.Core.Domain.CloudIdentity,System.Uri,JSIStudios.SimpleRESTServices.Client.HttpMethod,System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean,System.Boolean,JSIStudios.SimpleRESTServices.Client.RequestSettings)">
             <summary>
             Execute a REST request with an <see cref="T:System.Object"/> body and strongly-typed result.
             </summary>
             <remarks>
             If the request fails due to an authorization failure, i.e. the <see cref="P:JSIStudios.SimpleRESTServices.Client.Response.StatusCode"/> is <see cref="F:System.Net.HttpStatusCode.Unauthorized"/>,
             the request is attempted a second time.
            
             <para>This method calls <see cref="M:net.openstack.Providers.Rackspace.ProviderBase`1.CheckResponse(JSIStudios.SimpleRESTServices.Client.Response)"/>, which results in a <see cref="T:net.openstack.Core.Exceptions.Response.ResponseException"/> if the request fails.</para>
            
             <para>This method uses <see cref="M:JSIStudios.SimpleRESTServices.Client.IRestService.Execute``1(System.Uri,JSIStudios.SimpleRESTServices.Client.HttpMethod,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},JSIStudios.SimpleRESTServices.Client.RequestSettings)"/> to handle the underlying REST request(s).</para>
             </remarks>
             <typeparam name="T">The type of the data returned in the REST response.</typeparam>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <param name="absoluteUri">The absolute URI for the request.</param>
             <param name="method">The HTTP method to use for the request.</param>
             <param name="body">
             The body of the request. This parameter is optional. If the value is <c>null</c>,
             the request is sent without a body.
             </param>
             <param name="queryStringParameter">
             A collection of parameters to add to the query string portion of the request
             URI. This parameter is optional. If the value is <c>null</c>, no parameters are
             added to the query string.
             </param>
             <param name="headers">
             A collection of custom HTTP headers to include with the request. This parameter
             is optional. If the value is <c>null</c>, no custom headers are added to the HTTP
             request.
             </param>
             <param name="isRetry"><c>true</c> if this request is retrying a previously failed operation; otherwise, <c>false</c>.</param>
             <param name="isTokenRequest"><c>true</c> if this is an authentication request; otherwise, <c>false</c>. Authentication requests do not perform separate authentication prior to the call.</param>
             <param name="settings">
             The settings to use for the request. This parameter is optional. If the value
             is <c>null</c>, <see cref="M:net.openstack.Providers.Rackspace.ProviderBase`1.BuildDefaultRequestSettings(System.Collections.Generic.IEnumerable{System.Net.HttpStatusCode})"/> will be called to
             provide the settings.
             </param>
             <returns>
             Returns a <see cref="T:JSIStudios.SimpleRESTServices.Client.Response`1"/> object containing the HTTP status code,
             headers, body, and strongly-typed data from the REST response.
             </returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="absoluteUri"/> is <c>null</c>.</exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="method"/> is not supported.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ProviderBase`1.ExecuteRESTRequest(net.openstack.Core.Domain.CloudIdentity,System.Uri,JSIStudios.SimpleRESTServices.Client.HttpMethod,System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean,System.Boolean,JSIStudios.SimpleRESTServices.Client.RequestSettings)">
             <summary>
             Execute a REST request with an <see cref="T:System.Object"/> body and basic result (text or no content).
             </summary>
             <remarks>
             If the request fails due to an authorization failure, i.e. the <see cref="P:JSIStudios.SimpleRESTServices.Client.Response.StatusCode"/> is <see cref="F:System.Net.HttpStatusCode.Unauthorized"/>,
             the request is attempted a second time.
            
             <para>This method calls <see cref="M:net.openstack.Providers.Rackspace.ProviderBase`1.CheckResponse(JSIStudios.SimpleRESTServices.Client.Response)"/>, which results in a <see cref="T:net.openstack.Core.Exceptions.Response.ResponseException"/> if the request fails.</para>
            
             <para>This method uses <see cref="M:JSIStudios.SimpleRESTServices.Client.IRestService.Execute(System.Uri,JSIStudios.SimpleRESTServices.Client.HttpMethod,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},JSIStudios.SimpleRESTServices.Client.RequestSettings)"/> to handle the underlying REST request(s).</para>
             </remarks>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <param name="absoluteUri">The absolute URI for the request.</param>
             <param name="method">The HTTP method to use for the request.</param>
             <param name="body">
             The body of the request. This parameter is optional. If the value is <c>null</c>,
             the request is sent without a body.
             </param>
             <param name="queryStringParameter">
             A collection of parameters to add to the query string portion of the request
             URI. This parameter is optional. If the value is <c>null</c>, no parameters are
             added to the query string.
             </param>
             <param name="headers">
             A collection of custom HTTP headers to include with the request. This parameter
             is optional. If the value is <c>null</c>, no custom headers are added to the HTTP
             request.
             </param>
             <param name="isRetry"><c>true</c> if this request is retrying a previously failed operation; otherwise, <c>false</c>.</param>
             <param name="isTokenRequest"><c>true</c> if this is an authentication request; otherwise, <c>false</c>. Authentication requests do not perform separate authentication prior to the call.</param>
             <param name="settings">
             The settings to use for the request. This parameter is optional. If the value
             is <c>null</c>, <see cref="M:net.openstack.Providers.Rackspace.ProviderBase`1.BuildDefaultRequestSettings(System.Collections.Generic.IEnumerable{System.Net.HttpStatusCode})"/> will be called to
             provide the settings.
             </param>
             <returns>
             Returns a <see cref="T:JSIStudios.SimpleRESTServices.Client.Response"/> object containing the HTTP status code,
             headers, and body from the REST response.
             </returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="absoluteUri"/> is <c>null</c>.</exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="method"/> is not supported.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ProviderBase`1.ExecuteRESTRequest(net.openstack.Core.Domain.CloudIdentity,System.Uri,JSIStudios.SimpleRESTServices.Client.HttpMethod,System.Func{System.Net.HttpWebResponse,System.Boolean,JSIStudios.SimpleRESTServices.Client.Response},System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean,System.Boolean,JSIStudios.SimpleRESTServices.Client.RequestSettings)">
             <summary>
             Execute a REST request with an <see cref="T:System.Object"/> body and user-defined callback function
             for constructing the resulting <see cref="T:JSIStudios.SimpleRESTServices.Client.Response"/> object.
             </summary>
             <remarks>
             If the request fails due to an authorization failure, i.e. the <see cref="P:JSIStudios.SimpleRESTServices.Client.Response.StatusCode"/> is <see cref="F:System.Net.HttpStatusCode.Unauthorized"/>,
             the request is attempted a second time.
            
             <para>This method calls <see cref="M:net.openstack.Providers.Rackspace.ProviderBase`1.CheckResponse(JSIStudios.SimpleRESTServices.Client.Response)"/>, which results in a <see cref="T:net.openstack.Core.Exceptions.Response.ResponseException"/> if the request fails.</para>
            
             <para>This method uses <see cref="M:JSIStudios.SimpleRESTServices.Client.IRestService.Execute(System.Uri,JSIStudios.SimpleRESTServices.Client.HttpMethod,System.Func{System.Net.HttpWebResponse,System.Boolean,JSIStudios.SimpleRESTServices.Client.Response},System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},JSIStudios.SimpleRESTServices.Client.RequestSettings)"/> to handle the underlying REST request(s).</para>
             </remarks>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <param name="absoluteUri">The absolute URI for the request.</param>
             <param name="method">The HTTP method to use for the request.</param>
             <param name="buildResponseCallback">
             A user-specified function used to construct the resulting <see cref="T:JSIStudios.SimpleRESTServices.Client.Response"/>
             object from the <see cref="T:System.Net.HttpWebResponse"/> and a Boolean value specifying
             whether or not a <see cref="T:System.Net.WebException"/> was thrown during the request. If
             this value is <c>null</c>, this method is equivalent to calling
             <see cref="M:net.openstack.Providers.Rackspace.ProviderBase`1.ExecuteRESTRequest(net.openstack.Core.Domain.CloudIdentity,System.Uri,JSIStudios.SimpleRESTServices.Client.HttpMethod,System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean,System.Boolean,JSIStudios.SimpleRESTServices.Client.RequestSettings)"/>.
             </param>
             <param name="body">
             The body of the request. This parameter is optional. If the value is <c>null</c>,
             the request is sent without a body.
             </param>
             <param name="queryStringParameter">
             A collection of parameters to add to the query string portion of the request
             URI. This parameter is optional. If the value is <c>null</c>, no parameters are
             added to the query string.
             </param>
             <param name="headers">
             A collection of custom HTTP headers to include with the request. This parameter
             is optional. If the value is <c>null</c>, no custom headers are added to the HTTP
             request.
             </param>
             <param name="isRetry"><c>true</c> if this request is retrying a previously failed operation; otherwise, <c>false</c>.</param>
             <param name="isTokenRequest"><c>true</c> if this is an authentication request; otherwise, <c>false</c>. Authentication requests do not perform separate authentication prior to the call.</param>
             <param name="settings">
             The settings to use for the request. This parameter is optional. If the value
             is <c>null</c>, <see cref="M:net.openstack.Providers.Rackspace.ProviderBase`1.BuildDefaultRequestSettings(System.Collections.Generic.IEnumerable{System.Net.HttpStatusCode})"/> will be called to
             provide the settings.
             </param>
             <returns>A <see cref="T:JSIStudios.SimpleRESTServices.Client.Response"/> object containing the result of the REST call.</returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="absoluteUri"/> is <c>null</c>.</exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="method"/> is not supported.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ProviderBase`1.ExecuteRESTRequest``1(net.openstack.Core.Domain.CloudIdentity,System.Uri,JSIStudios.SimpleRESTServices.Client.HttpMethod,System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean,System.Boolean,JSIStudios.SimpleRESTServices.Client.RequestSettings,System.Func{System.Uri,JSIStudios.SimpleRESTServices.Client.HttpMethod,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},JSIStudios.SimpleRESTServices.Client.RequestSettings,``0})">
             <summary>
             Execute a REST request, using a callback method to deserialize the result into a <see cref="T:JSIStudios.SimpleRESTServices.Client.Response"/> or <see cref="T:JSIStudios.SimpleRESTServices.Client.Response`1"/> object.
             </summary>
             <remarks>
             If the request fails due to an authorization failure, i.e. the <see cref="P:JSIStudios.SimpleRESTServices.Client.Response.StatusCode"/> is <see cref="F:System.Net.HttpStatusCode.Unauthorized"/>,
             the request is attempted a second time.
            
             <para>This method calls <see cref="M:net.openstack.Providers.Rackspace.ProviderBase`1.CheckResponse(JSIStudios.SimpleRESTServices.Client.Response)"/>, which results in a <see cref="T:net.openstack.Core.Exceptions.Response.ResponseException"/> if the request fails.</para>
             </remarks>
             <typeparam name="T">The <see cref="T:JSIStudios.SimpleRESTServices.Client.Response"/> type used for representing the response to the REST call.</typeparam>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <param name="absoluteUri">The absolute URI for the request.</param>
             <param name="method">The HTTP method to use for the request.</param>
             <param name="body">
             The body of the request. This parameter is optional. If the value is <c>null</c>,
             the request is sent without a body.
             </param>
             <param name="queryStringParameter">
             A collection of parameters to add to the query string portion of the request
             URI. This parameter is optional. If the value is <c>null</c>, no parameters are
             added to the query string.
             </param>
             <param name="headers">
             A collection of custom HTTP headers to include with the request. This parameter
             is optional. If the value is <c>null</c>, no custom headers are added to the HTTP
             request.
             </param>
             <param name="isRetry"><c>true</c> if this request is retrying a previously failed operation; otherwise, <c>false</c>.</param>
             <param name="isTokenRequest"><c>true</c> if this is an authentication request; otherwise, <c>false</c>. Authentication requests do not perform separate authentication prior to the call.</param>
             <param name="requestSettings">
             The settings to use for the request. This parameter is optional. If the value
             is <c>null</c>, <see cref="M:net.openstack.Providers.Rackspace.ProviderBase`1.BuildDefaultRequestSettings(System.Collections.Generic.IEnumerable{System.Net.HttpStatusCode})"/> will be called to
             provide the settings.
             </param>
             <param name="callback">A callback function that prepares and executes the HTTP request, and returns the deserialized result as an object of type <typeparamref name="T"/>.</param>
             <returns>A response object of type <typeparamref name="T"/> containing the result of the REST call.</returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="absoluteUri"/> is <c>null</c>.</exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="method"/> is not supported.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ProviderBase`1.StreamRESTRequest(net.openstack.Core.Domain.CloudIdentity,System.Uri,JSIStudios.SimpleRESTServices.Client.HttpMethod,System.IO.Stream,System.Int32,System.Int64,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean,JSIStudios.SimpleRESTServices.Client.RequestSettings,System.Action{System.Int64})">
             <summary>
             Executes a streaming REST request with a <see cref="T:System.IO.Stream"/> and basic result (text or no content).
             </summary>
             <remarks>
             If the request fails due to an authorization failure, i.e. the <see cref="P:JSIStudios.SimpleRESTServices.Client.Response.StatusCode"/> is <see cref="F:System.Net.HttpStatusCode.Unauthorized"/>,
             the request is attempted a second time.
            
             <para>This method uses an HTTP request timeout of 4 hours.</para>
            
             <para>This method calls <see cref="M:net.openstack.Providers.Rackspace.ProviderBase`1.CheckResponse(JSIStudios.SimpleRESTServices.Client.Response)"/>, which results in a <see cref="T:net.openstack.Core.Exceptions.Response.ResponseException"/> if the request fails.</para>
             </remarks>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <param name="absoluteUri">The absolute URI for the request.</param>
             <param name="method">The HTTP method to use for the request.</param>
             <param name="stream">A stream providing the body of the request.</param>
             <param name="chunkSize">The size of the buffer used for copying data from <paramref name="stream"/> to the HTTP request stream.</param>
             <param name="maxReadLength">The maximum number of bytes to send with the request. This parameter is optional. If the value is 0, the request will include all data from <paramref name="stream"/>.</param>
             <param name="queryStringParameter">
             A collection of parameters to add to the query string portion of the request
             URI. This parameter is optional. If the value is <c>null</c>, no parameters are
             added to the query string.
             </param>
             <param name="headers">
             A collection of custom HTTP headers to include with the request. This parameter
             is optional. If the value is <c>null</c>, no custom headers are added to the HTTP
             request.
             </param>
             <param name="isRetry"><c>true</c> if this request is retrying a previously failed operation; otherwise, <c>false</c>.</param>
             <param name="requestSettings">
             The settings to use for the request. This parameter is optional. If the value
             is <c>null</c>, <see cref="M:net.openstack.Providers.Rackspace.ProviderBase`1.BuildDefaultRequestSettings(System.Collections.Generic.IEnumerable{System.Net.HttpStatusCode})"/> will be called to
             provide the settings.
             </param>
             <param name="progressUpdated">A user-defined callback function for reporting progress of the send operation. This parameter is optional. If the value is <c>null</c>, the method does not report progress updates to the caller.</param>
             <returns>
             Returns a <see cref="T:JSIStudios.SimpleRESTServices.Client.Response"/> object containing the HTTP status code,
             headers, and body from the REST response.
             </returns>
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="absoluteUri"/> is <c>null</c>.
             <para>-or-</para>
             <para>If <paramref name="stream"/> is <c>null</c>.</para>
             </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
             If <paramref name="chunkSize"/> is less than or equal to 0.
             <para>-or-</para>
             <para>If <paramref name="maxReadLength"/> is less than 0.</para>
             </exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="method"/> is not supported.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ProviderBase`1.BuildDefaultRequestSettings(System.Collections.Generic.IEnumerable{System.Net.HttpStatusCode})">
             <summary>
             Gets the default <see cref="T:JSIStudios.SimpleRESTServices.Client.RequestSettings"/> object to use for REST requests sent by this provider.
             </summary>
             <remarks>
             The base implementation returns a <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRequestSettings"/> object initialized with the following values.
            
             <list type="bullet">
             <item>The <see cref="P:JSIStudios.SimpleRESTServices.Client.RequestSettings.RetryCount"/> is 2.</item>
             <item>The <see cref="P:JSIStudios.SimpleRESTServices.Client.RequestSettings.RetryDelay"/> is 200 milliseconds.</item>
             <item>The <see cref="P:JSIStudios.SimpleRESTServices.Client.RequestSettings.Non200SuccessCodes"/> contains <see cref="F:System.Net.HttpStatusCode.Unauthorized"/> and <see cref="F:System.Net.HttpStatusCode.Conflict"/>, along with the values in <paramref name="non200SuccessCodes"/> (if any).</item>
             <item>The <see cref="P:JSIStudios.SimpleRESTServices.Client.RequestSettings.UserAgent"/> is set to <see cref="P:net.openstack.Core.UserAgentGenerator.UserAgent"/>.</item>
             <item>Other properties are set to the default values for <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRequestSettings"/>.</item>
             </list>
            
             <note type="implement">The caller may directly modify the object returned by this call, so a new object should be returned each time this method is called.</note>
             </remarks>
             <param name="non200SuccessCodes">A collection of non-200 HTTP status codes to consider as "success" codes for the request. This value may be <c>null</c> or an empty collection to use the default value.</param>
             <returns>A <see cref="T:JSIStudios.SimpleRESTServices.Client.RequestSettings"/> object containing the default settings to use for a REST request sent by this provider.</returns>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ProviderBase`1.GetServiceEndpoint(net.openstack.Core.Domain.CloudIdentity,System.String,System.String,System.String)">
             <summary>
             Gets the <see cref="T:net.openstack.Core.Domain.Endpoint"/> associated with the specified service in the user's service catalog.
             </summary>
             <remarks>
             The endpoint returned by this method may not be an exact match for all arguments to this method.
             This method filters the service catalog in the following order to locate an acceptable endpoint.
             If more than one acceptable endpoint remains after all filters are applied, it is unspecified
             which one is returned by this method.
            
             <list type="number">
             <item>This method only considers services which match the specified <paramref name="serviceType"/>.</item>
             <item>This method attempts to filter the remaining items to those matching <paramref name="serviceName"/>. If <paramref name="serviceName"/> is <c>null</c>, or if no services match the specified name, <em>this argument is ignored</em>.</item>
             <item>This method attempts to filter the remaining items to those matching <paramref name="region"/>. If <paramref name="region"/> is <c>null</c>, the user's default region is used. If no services match the specified region, <em>this argument is ignored</em>.</item>
             <item>If the <paramref name="region"/> argument is ignored as a result of the previous rule, this method filters the remaining items to only include region-independent endpoints, i.e. endpoints where <see cref="P:net.openstack.Core.Domain.Endpoint.Region"/> is <c>null</c> or empty.</item>
             </list>
             </remarks>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <param name="serviceType">The service type (see <see cref="P:net.openstack.Core.Domain.ServiceCatalog.Type"/>).</param>
             <param name="serviceName">The preferred name of the service (see <see cref="P:net.openstack.Core.Domain.ServiceCatalog.Name"/>).</param>
             <param name="region">The preferred region for the service. If this value is <c>null</c>, the user's default region will be used.</param>
             <returns>An <see cref="T:net.openstack.Core.Domain.Endpoint"/> object containing the details of the requested service.</returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="serviceType"/> is <c>null</c>.</exception>
             <exception cref="T:System.ArgumentException">If <paramref name="serviceType"/> is empty.</exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="region"/> is not supported.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.NoDefaultRegionSetException">If <paramref name="region"/> is <c>null</c>, the service does not provide a region-independent endpoint, and no default region is available for the identity or provider.</exception>
             <exception cref="T:net.openstack.Core.Exceptions.UserAuthenticationException">If no service catalog is available for the user.</exception>
             <exception cref="T:net.openstack.Core.Exceptions.UserAuthorizationException">If no endpoint is available for the requested service.</exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ProviderBase`1.GetPublicServiceEndpoint(net.openstack.Core.Domain.CloudIdentity,System.String,System.String,System.String)">
            <summary>
            Gets the <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/> for the <see cref="T:net.openstack.Core.Domain.Endpoint"/> associated with the
            specified service in the user's service catalog.
            </summary>
            <remarks>
            For details on how endpoint resolution is performed, see <see cref="M:net.openstack.Providers.Rackspace.ProviderBase`1.GetServiceEndpoint(net.openstack.Core.Domain.CloudIdentity,System.String,System.String,System.String)"/>.
            </remarks>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <param name="serviceType">The service type (see <see cref="P:net.openstack.Core.Domain.ServiceCatalog.Type"/>).</param>
            <param name="serviceName">The preferred name of the service (see <see cref="P:net.openstack.Core.Domain.ServiceCatalog.Name"/>).</param>
            <param name="region">The preferred region for the service. If this value is <c>null</c>, the user's default region will be used.</param>
            <returns>The <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/> value for the <see cref="T:net.openstack.Core.Domain.Endpoint"/> object containing the details of the requested service.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="serviceType"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="serviceType"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.NoDefaultRegionSetException">If <paramref name="region"/> is <c>null</c> and no default region is available for the identity or provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthenticationException">If no service catalog is available for the user.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthorizationException">If no endpoint is available for the requested service.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ProviderBase`1.GetInternalServiceEndpoint(net.openstack.Core.Domain.CloudIdentity,System.String,System.String,System.String)">
            <summary>
            Gets the <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/> for the <see cref="T:net.openstack.Core.Domain.Endpoint"/> associated with the
            specified service in the user's service catalog.
            </summary>
            <remarks>
            For details on how endpoint resolution is performed, see <see cref="M:net.openstack.Providers.Rackspace.ProviderBase`1.GetServiceEndpoint(net.openstack.Core.Domain.CloudIdentity,System.String,System.String,System.String)"/>.
            </remarks>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <param name="serviceType">The service type (see <see cref="P:net.openstack.Core.Domain.ServiceCatalog.Type"/>).</param>
            <param name="serviceName">The preferred name of the service (see <see cref="P:net.openstack.Core.Domain.ServiceCatalog.Name"/>).</param>
            <param name="region">The preferred region for the service. If this value is <c>null</c>, the user's default region will be used.</param>
            <returns>The <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/> value for the <see cref="T:net.openstack.Core.Domain.Endpoint"/> object containing the details of the requested service.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="serviceType"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="serviceType"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.NoDefaultRegionSetException">If <paramref name="region"/> is <c>null</c> and no default region is available for the identity or provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthenticationException">If no service catalog is available for the user.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthorizationException">If no endpoint is available for the requested service.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ProviderBase`1.BuildCloudServersProviderAwareObject``1(System.Collections.Generic.IEnumerable{``0},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Sets the <see cref="P:net.openstack.Core.Domain.ProviderStateBase`1.Provider"/>, <see cref="P:net.openstack.Core.Domain.ProviderStateBase`1.Region"/>,
            and <see cref="P:net.openstack.Core.Domain.ProviderStateBase`1.Identity"/> properties of a collection of object to values
            matching the request parameters used when the objects were created.
            </summary>
            <typeparam name="T">The type of the provider-aware object to initialize.</typeparam>
            <param name="input">The collection of provider-aware objects.</param>
            <param name="region">The region used for the request that created this object.</param>
            <param name="identity">The identity used for the request that created this object.</param>
            <returns>This method returns an enumerable collection containing the objects in <paramref name="input"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="input"/> is <c>null</c>.</exception>
            <exception cref="T:System.InvalidOperationException">If the current provider object is not an instance of <typeparamref name="TProvider"/>.</exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ProviderBase`1.BuildCloudServersProviderAwareObject``1(``0,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Sets the <see cref="P:net.openstack.Core.Domain.ProviderStateBase`1.Provider"/>, <see cref="P:net.openstack.Core.Domain.ProviderStateBase`1.Region"/>,
            and <see cref="P:net.openstack.Core.Domain.ProviderStateBase`1.Identity"/> properties of an object to values
            matching the request parameters used when the object was created.
            </summary>
            <typeparam name="T">The type of the provider-aware object to initialize.</typeparam>
            <param name="input">The provider-aware object.</param>
            <param name="region">The region used for the request that created this object.</param>
            <param name="identity">The identity used for the request that created this object.</param>
            <returns>This method returns the <paramref name="input"/> argument.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="input"/> is <c>null</c>.</exception>
            <exception cref="T:System.InvalidOperationException">If the current provider object is not an instance of <typeparamref name="TProvider"/>.</exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ProviderBase`1.GetDefaultIdentity(net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Gets the effective cloud identity to use for a request based on the <paramref name="identity"/>
            argument and the configured default identity.
            </summary>
            <param name="identity">The explicitly specified identity for the request, or <c>null</c> if no identity was specified for the request.</param>
            <returns>The effective identity to use for the request, or <c>null</c> if <paramref name="identity"/> is <c>null</c> and no default identity is available.</returns>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ProviderBase`1.BuildOptionalParameterList(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Creates a new dictionary from <paramref name="optionalParameters"/> with all
            entries with null or empty values removed.
            </summary>
            <param name="optionalParameters">The dictionary of optional parameters.</param>
            <returns>
            Returns a new dictionary created from <paramref name="optionalParameters"/> with all
            entries with <c>null</c> or empty values removed. If <paramref name="optionalParameters"/>
            is <c>null</c>, or if the resulting dictionary is empty, this method returns <c>null</c>.
            </returns>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ProviderBase`1.CheckIdentity(net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Ensures that an identity is available for a request.
            </summary>
            <param name="identity">The explicitly specified identity for the request, or <c>null</c> if the request should use the default identity for the provider.</param>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the request.</exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ProviderBase`1.PrepareRequestAsyncFunc(JSIStudios.SimpleRESTServices.Client.HttpMethod,System.UriTemplate,System.Collections.Generic.IDictionary{System.String,System.String},System.Func{System.Uri,System.Uri})">
            <summary>
            Creates a task continuation function responsible for creating an <see cref="T:System.Net.HttpWebRequest"/> for use
            in asynchronous REST API calls. The input to the continuation function is a completed task which
            computes an <see cref="T:net.openstack.Core.Domain.IdentityToken"/> for an authenticated user and a base URI for use in binding
            the URI templates for REST API calls. The continuation function calls <see cref="M:net.openstack.Providers.Rackspace.ProviderBase`1.PrepareRequestImpl(JSIStudios.SimpleRESTServices.Client.HttpMethod,net.openstack.Core.Domain.IdentityToken,System.UriTemplate,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Func{System.Uri,System.Uri})"/>
            to create and prepare the resulting <see cref="T:System.Net.HttpWebRequest"/>.
            </summary>
            <param name="method">The <see cref="T:JSIStudios.SimpleRESTServices.Client.HttpMethod"/> to use for the request.</param>
            <param name="template">The <see cref="T:System.UriTemplate"/> for the target URI.</param>
            <param name="parameters">A collection of parameters for binding the URI template in a call to <see cref="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})"/>.</param>
            <param name="uriTransform">An optional transformation to apply to the bound URI for the request. If this value is <c>null</c>, the result of binding the <paramref name="template"/> with <paramref name="parameters"/> will be used as the absolute request URI.</param>
            <returns>A task continuation delegate which can be used to create an <see cref="T:System.Net.HttpWebRequest"/> following the completion of a task that obtains an <see cref="T:net.openstack.Core.Domain.IdentityToken"/> and the base URI for a service.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="template"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="parameters"/> is <c>null</c>.</para>
            </exception>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ProviderBase`1.PrepareRequestAsyncFunc``1(JSIStudios.SimpleRESTServices.Client.HttpMethod,System.UriTemplate,System.Collections.Generic.IDictionary{System.String,System.String},``0,System.Func{System.Uri,System.Uri})">
            <summary>
            Creates a task continuation function responsible for creating an <see cref="T:System.Net.HttpWebRequest"/> for use
            in asynchronous REST API calls. The input to the continuation function is a completed task which
            computes an <see cref="T:net.openstack.Core.Domain.IdentityToken"/> for an authenticated user and a base URI for use in binding
            the URI templates for REST API calls. The continuation function calls <see cref="M:net.openstack.Providers.Rackspace.ProviderBase`1.PrepareRequestImpl(JSIStudios.SimpleRESTServices.Client.HttpMethod,net.openstack.Core.Domain.IdentityToken,System.UriTemplate,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Func{System.Uri,System.Uri})"/>
            to create and prepare the resulting <see cref="T:System.Net.HttpWebRequest"/>, and then asynchronously obtains
            the request stream for the request and writes the specified <paramref name="body"/> in JSON notation.
            </summary>
            <param name="method">The <see cref="T:JSIStudios.SimpleRESTServices.Client.HttpMethod"/> to use for the request.</param>
            <param name="template">The <see cref="T:System.UriTemplate"/> for the target URI.</param>
            <param name="parameters">A collection of parameters for binding the URI template in a call to <see cref="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})"/>.</param>
            <param name="body">A object modeling the body of the web request. The object is serialized in JSON notation for inclusion in the request.</param>
            <param name="uriTransform">An optional transformation to apply to the bound URI for the request. If this value is <c>null</c>, the result of binding the <paramref name="template"/> with <paramref name="parameters"/> will be used as the absolute request URI.</param>
            <returns>A task continuation delegate which can be used to create an <see cref="T:System.Net.HttpWebRequest"/> following the completion of a task that obtains an <see cref="T:net.openstack.Core.Domain.IdentityToken"/> and the base URI for a service.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="template"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="parameters"/> is <c>null</c>.</para>
            </exception>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ProviderBase`1.PrepareRequestImpl(JSIStudios.SimpleRESTServices.Client.HttpMethod,net.openstack.Core.Domain.IdentityToken,System.UriTemplate,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Func{System.Uri,System.Uri})">
             <summary>
             Creates and prepares an <see cref="T:System.Net.HttpWebRequest"/> for an asynchronous REST API call.
             </summary>
             <remarks>
             The base implementation sets the following properties of the web request.
            
             <list type="table">
             <listheader>
             <term>Property</term>
             <term>Value</term>
             </listheader>
             <item>
             <description><see cref="P:System.Net.WebRequest.Method"/></description>
             <description><paramref name="method"/></description>
             </item>
             <item>
             <description><see cref="P:System.Net.HttpWebRequest.Accept"/></description>
             <description><see cref="F:JSIStudios.SimpleRESTServices.Client.Json.JsonRequestSettings.JsonContentType"/></description>
             </item>
             <item>
             <description><see cref="P:System.Net.WebRequest.Headers"/><literal>["X-Auth-Token"]</literal></description>
             <description><see name="IdentityToken.Id"/></description>
             </item>
             <item>
             <description><see cref="P:System.Net.HttpWebRequest.UserAgent"/></description>
             <description><see cref="P:net.openstack.Core.UserAgentGenerator.UserAgent"/></description>
             </item>
             <item>
             <description><see cref="P:System.Net.WebRequest.Timeout"/></description>
             <description>14400 seconds (4 hours)</description>
             </item>
             <item>
             <description><see cref="P:System.Net.ServicePoint.ConnectionLimit"/></description>
             <description><see cref="P:net.openstack.Providers.Rackspace.ProviderBase`1.ConnectionLimit"/></description>
             </item>
             </list>
             </remarks>
             <param name="method">The <see cref="T:JSIStudios.SimpleRESTServices.Client.HttpMethod"/> to use for the request.</param>
             <param name="identityToken">The <see cref="T:net.openstack.Core.Domain.IdentityToken"/> to use for making an authenticated REST API call.</param>
             <param name="template">The <see cref="T:System.UriTemplate"/> for the target URI.</param>
             <param name="baseUri">The base URI to use for binding the URI template.</param>
             <param name="parameters">A collection of parameters for binding the URI template in a call to <see cref="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})"/>.</param>
             <param name="uriTransform">An optional transformation to apply to the bound URI for the request. If this value is <c>null</c>, the result of binding the <paramref name="template"/> with <paramref name="parameters"/> will be used as the absolute request URI.</param>
             <returns>An <see cref="T:System.Net.HttpWebRequest"/> to use for making the asynchronous REST API call.</returns>
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="identityToken"/> is <c>null</c>.
             <para>-or-</para>
             <para>If <paramref name="template"/> is <c>null</c>.</para>
             <para>-or-</para>
             <para>If <paramref name="baseUri"/> is <c>null</c>.</para>
             <para>-or-</para>
             <para>If <paramref name="parameters"/> is <c>null</c>.</para>
             </exception>
             <exception cref="T:System.ArgumentException">If <paramref name="baseUri"/> is not an absolute URI.</exception>
             <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ProviderBase`1.GetBaseUriAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the base absolute URI to use for making asynchronous REST API calls to this service.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task
            completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain
            a <see cref="T:System.Uri"/> representing the base absolute URI for the service.
            </returns>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ProviderBase`1.AuthenticateServiceAsync(System.Threading.CancellationToken)">
            <summary>
            Authenticate with the identity service prior to making an asynchronous REST API call.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task
            completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain
            a tuple containing the authentication information. The first element of the tuple is
            an <see cref="T:net.openstack.Core.Domain.IdentityToken"/> for the authenticated user, and the second element is
            a base absolute <see cref="T:System.Uri"/> the service should use for making authenticated
            asynchronous web requests.
            </returns>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ProviderBase`1.OnBeforeAsyncWebRequest(System.Net.HttpWebRequest)">
            <summary>
            Invokes the <see cref="E:net.openstack.Providers.Rackspace.ProviderBase`1.BeforeAsyncWebRequest"/> event for the specified <paramref name="request"/>.
            </summary>
            <param name="request">The web request.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="request"/> is <c>null</c>.</exception>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ProviderBase`1.OnAfterAsyncWebResponse(System.Net.HttpWebResponse)">
            <summary>
            Invokes the <see cref="E:net.openstack.Providers.Rackspace.ProviderBase`1.AfterAsyncWebResponse"/> event for the specified <paramref name="response"/>.
            </summary>
            <param name="response">The web response.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="response"/> is <c>null</c>.</exception>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ProviderBase`1.GetResponseAsyncFunc(System.Threading.CancellationToken)">
            <summary>
            Gets the response from an asynchronous web request, with the body of the response (if any) returned as a string.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A continuation function delegate which takes an asynchronously prepared <see cref="T:System.Net.HttpWebRequest"/>
            and returns the resulting body of the operation, if any, as a string.
            </returns>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ProviderBase`1.GetResponseAsyncFunc``1(System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Tuple{System.Net.HttpWebResponse,System.String}},System.Threading.Tasks.Task{``0}})">
            <summary>
            Gets the response from an asynchronous web request, with the body of the response (if any) returned as an object of type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The type for the response object.</typeparam>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="parseResult">
            A continuation function delegate which parses the body of the <see cref="T:System.Net.HttpWebResponse"/>
            and returns an object of type <typeparamref name="T"/>, as an asynchronous operation. If
            this value is <c>null</c>, the conversion will be performed by calling <see cref="M:net.openstack.Providers.Rackspace.ProviderBase`1.ParseJsonResultImplAsync``1(System.Threading.Tasks.Task{System.Tuple{System.Net.HttpWebResponse,System.String}},System.Threading.CancellationToken)"/>.
            </param>
            <returns>
            A continuation function delegate which takes an asynchronously prepared <see cref="T:System.Net.HttpWebRequest"/>
            and returns the resulting body of the operation, if any, as an instance of type <typeparamref name="T"/>.
            </returns>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ProviderBase`1.RequestResourceImplAsync(System.Threading.Tasks.Task{System.Net.HttpWebRequest},System.Threading.CancellationToken)">
            <summary>
            This method calls <see cref="M:net.openstack.Providers.Rackspace.ProviderBase`1.OnBeforeAsyncWebRequest(System.Net.HttpWebRequest)"/> and then asynchronously gets the response
            to the web request.
            </summary>
            <remarks>
            This method is the first step of implementing <see cref="M:net.openstack.Providers.Rackspace.ProviderBase`1.GetResponseAsyncFunc(System.Threading.CancellationToken)"/> and <see cref="M:net.openstack.Providers.Rackspace.ProviderBase`1.GetResponseAsyncFunc``1(System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Tuple{System.Net.HttpWebResponse,System.String}},System.Threading.Tasks.Task{``0}})"/>.
            </remarks>
            <param name="task">A task which created and prepared the <see cref="T:System.Net.HttpWebRequest"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="task"/> is <c>null</c>.</exception>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ProviderBase`1.ReadResultImpl(System.Threading.Tasks.Task{System.Net.WebResponse},System.Threading.CancellationToken)">
            <summary>
            This method reads the complete body of an asynchronous <see cref="T:System.Net.WebResponse"/> as a string.
            </summary>
            <param name="task">A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation to get the <see cref="T:System.Net.WebResponse"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Tuple`2"/> object. The first element of the tuple contains the
            <see cref="T:System.Net.WebResponse"/> provided by <paramref name="task"/> as an <see cref="T:System.Net.HttpWebResponse"/>.
            The second element of the tuple contains the complete body of the response as a string.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="task"/> is <c>null</c>.</exception>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ProviderBase`1.ParseJsonResultImplAsync``1(System.Threading.Tasks.Task{System.Tuple{System.Net.HttpWebResponse,System.String}},System.Threading.CancellationToken)">
            <summary>
            Provides a default object parser for <see cref="M:net.openstack.Providers.Rackspace.ProviderBase`1.GetResponseAsyncFunc``1(System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Tuple{System.Net.HttpWebResponse,System.String}},System.Threading.Tasks.Task{``0}})"/> which converts the
            body of an <see cref="T:System.Net.HttpWebResponse"/> to an object of type <typeparamref name="T"/> by calling
            <see cref="M:Newtonsoft.Json.JsonConvert.DeserializeObject``1(System.String)"/>
            </summary>
            <typeparam name="T">The type for the response object.</typeparam>
            <param name="task">A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation to get the <see cref="T:System.Net.WebResponse"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain an
            object of type <typeparamref name="T"/> representing the serialized body of the response.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="task"/> is <c>null</c>.</exception>
            <preliminary/>
        </member>
        <member name="E:net.openstack.Providers.Rackspace.ProviderBase`1.BeforeAsyncWebRequest">
            <summary>
            This event is fired immediately before sending an asynchronous web request.
            </summary>
            <preliminary/>
        </member>
        <member name="E:net.openstack.Providers.Rackspace.ProviderBase`1.AfterAsyncWebResponse">
            <summary>
            This event is fired when the result of an asynchronous web request is received.
            </summary>
            <preliminary/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.ProviderBase`1.ConnectionLimit">
            <summary>
            Gets or sets the maximum number of connections allowed on the <see cref="T:System.Net.ServicePoint"/>
            objects used for requests. If the value is <c>null</c>, the connection limit value for the
            <see cref="T:System.Net.ServicePoint"/> object is not altered.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="value"/> is less than or equal to 0.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.ProviderBase`1.DefaultRegion">
            <summary>
            Gets the default region for this provider instance, if one was specified.
            </summary>
            <value>
            The default region to use for API calls where an explicit region is not specified in the call;
            or <c>null</c> to use the default region associated with the identity making the call.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.ProviderBase`1.BackoffPolicy">
            <summary>
            Gets or sets the back-off policy to use for polling operations.
            </summary>
            <remarks>
            If this value is set to <c>null</c>, the default back-off policy for the current
            provider will be used.
            </remarks>
            <preliminary/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.ProviderBase`1.DefaultBackoffPolicy">
            <summary>
            Gets the default back-off policy for the current provider.
            </summary>
            <remarks>
            The default implementation returns <see cref="P:net.openstack.Core.BackoffPolicy.Default"/>.
            Providers may override this property to change the default back-off policy.
            </remarks>
            <preliminary/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.IDnsService">
            <summary>
            Represents a provider for the Rackspace Cloud DNS service.
            </summary>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/overview.html">Rackspace Cloud DNS Developer Guide - API v1.0</seealso>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IDnsService.ListLimitsAsync(System.Threading.CancellationToken)">
            <summary>
            Get information about the provider-specific limits of this service.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will return a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsServiceLimits"/> object containing detailed information about the limits for the service provider.</returns>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/List_All_Limits.html">List All Limits (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IDnsService.ListLimitTypesAsync(System.Threading.CancellationToken)">
            <summary>
            Get information about the types of provider-specific limits in place for this service.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will return a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.LimitType"/> objects containing the limit types supported by the service.</returns>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/List_Limit_Types.html">List Limit Types (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IDnsService.ListLimitsAsync(net.openstack.Providers.Rackspace.Objects.Dns.LimitType,System.Threading.CancellationToken)">
            <summary>
            Get information about the provider-specific limits of this service for a particular <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.LimitType"/>.
            </summary>
            <param name="type">The limit type.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will return a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsServiceLimits"/> object containing detailed information about the limits of the specified <paramref name="type"/> for the service provider.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="type"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/List_Specific_Limit.html">List Specific Limit (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IDnsService.GetJobStatusAsync(net.openstack.Providers.Rackspace.Objects.Dns.DnsJob,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Gets information about an asynchronous task being executed by the DNS service.
            </summary>
            <param name="job">The <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob"/> to query.</param>
            <param name="showDetails"><c>true</c> to include detailed information about the job; otherwise, <c>false</c>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will return a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob"/> object containing the updated job information.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="job"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/sync_asynch_responses.html">Synchronous and Asynchronous Responses (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IDnsService.GetJobStatusAsync``1(net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{``0},System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Gets information about an asynchronous task with a strongly-typed result being executed by the DNS service.
            </summary>
            <typeparam name="TResponse">The class modeling the JSON result of the asynchronous operation.</typeparam>
            <param name="job">The <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob`1"/> to query.</param>
            <param name="showDetails"><c>true</c> to include detailed information about the job; otherwise, <c>false</c>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will return a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob`1"/> object containing the updated job information.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="job"/> is <c>null</c>.</exception>
            <exception cref="T:Newtonsoft.Json.JsonSerializationException">If an error occurs while deserializing the response object.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/sync_asynch_responses.html">Synchronous and Asynchronous Responses (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IDnsService.ListDomainsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets information about domains currently listed in the DNS service.
            </summary>
            <param name="domainName">If specified, the list will be filtered to only include the specified domain and its subdomains (if any exist).</param>
            <param name="offset">The index of the last item in the previous page of results. If not specified, the list starts at the beginning.</param>
            <param name="limit">The maximum number of domains to return in a single page.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully,
            the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will return a tuple of the resulting collection of
            <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain"/> objects and the total number of domains in the list. If the total number of domains
            in the list is not available, the second element of the tuple will be <c>null</c>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="offset"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="limit"/> is less than or equal to 0.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/list_domains.html">List Domains (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/search_domains_w_filters.html">Search Domains with Filtering (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IDnsService.ListDomainDetailsAsync(net.openstack.Providers.Rackspace.Objects.Dns.DomainId,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Gets detailed information about a specific domain.
            </summary>
            <param name="domainId">The domain ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Id">DnsDomain.Id</see>.</param>
            <param name="showRecords"><c>true</c> to populate the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Records"/> property of the result; otherwise, <c>false</c>.</param>
            <param name="showSubdomains"><c>true</c> to populate the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Subdomains"/> property of the result; otherwise, <c>false</c>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will return a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain"/> object containing the DNS information for the requested domain.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="domainId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/list_domain_details.html">List Domain Details (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IDnsService.ListDomainChangesAsync(net.openstack.Providers.Rackspace.Objects.Dns.DomainId,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)">
            <summary>
            Gets information about all changes made to a domain since a specified time.
            </summary>
            <param name="domainId">The domain ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Id">DnsDomain.Id</see>.</param>
            <param name="since">The timestamp of the earliest changes to consider. If this is <c>null</c>, a provider-specific default value is used.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will return a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChanges"/> object describing the changes made to a domain registered in the DNS service.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="domainId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/List_Domain_Changes.html">List Domain Changes (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IDnsService.ExportDomainAsync(net.openstack.Providers.Rackspace.Objects.Dns.DomainId,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{net.openstack.Providers.Rackspace.Objects.Dns.ExportedDomain}})">
             <summary>
             Exports a domain registered in the DNS service.
             </summary>
             <remarks>
             The exported domain represents a single domain, and does not include subdomains.
            
             <note>
             The <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomainFormat.Bind9"/> format does not support comments, so any
             comments associated with a domain or its records will not be included in the exported
             result.
             </note>
             </remarks>
             <param name="domainId">The domain ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Id">DnsDomain.Id</see>.</param>
             <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
             <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
             <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
             <returns>
             A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully,
             the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will return a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob`1"/> object
             describing the asynchronous server operation. If <paramref name="completionOption"/> is
             <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the job will additionally be in one of the following
             states.
            
             <list type="bullet">
             <item><see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Completed"/>: In this case the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob`1.Response"/>
             property contains an <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.ExportedDomain"/> object containing the details of the exported domain.</item>
             <item><see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Error"/>: In this case the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.Error"/> property provides
             additional information about the error which occurred during the asynchronous server operation.</item>
             </list>
             </returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="domainId"/> is <c>null</c>.</exception>
             <exception cref="T:System.ArgumentException">
             If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.
             </exception>
             <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
             <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/export_domain.html">Export Domain (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IDnsService.CreateDomainsAsync(net.openstack.Providers.Rackspace.Objects.Dns.DnsConfiguration,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomains}})">
             <summary>
             Registers one or more new domains in the DNS service.
             </summary>
             <param name="configuration">A <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsConfiguration"/> object describing the domains to register in the DNS service.</param>
             <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
             <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
             <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
             <returns>
             A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully,
             the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will return a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob`1"/> object
             describing the asynchronous server operation. If <paramref name="completionOption"/> is
             <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the job will additionally be in one of the following
             states.
            
             <list type="bullet">
             <item><see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Completed"/>: In this case the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob`1.Response"/>
             property contains a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomains"/> object containing the details of the new domains.</item>
             <item><see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Error"/>: In this case the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.Error"/> property provides
             additional information about the error which occurred during the asynchronous server operation.</item>
             </list>
             </returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="configuration"/> is <c>null</c>.</exception>
             <exception cref="T:System.ArgumentException">If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.</exception>
             <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
             <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/create_domains.html">Create Domain(s) (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IDnsService.UpdateDomainsAsync(net.openstack.Providers.Rackspace.Objects.Dns.DnsUpdateConfiguration,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob})">
             <summary>
             Updates one or more domains in the DNS service.
             </summary>
             <param name="configuration">A <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsUpdateConfiguration"/> object describing updates to apply to the domains.</param>
             <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
             <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
             <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
             <returns>
             A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. If <paramref name="completionOption"/> is
             <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the job will additionally be in one of the following
             states.
            
             <list type="bullet">
             <item><see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Completed"/></item>
             <item><see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Error"/>: In this case the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.Error"/> property provides
             additional information about the error which occurred during the asynchronous server operation.</item>
             </list>
             </returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="configuration"/> is <c>null</c>.</exception>
             <exception cref="T:System.ArgumentException">If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.</exception>
             <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
             <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/Modify_Domain_s_-d1e3848.html">Modify Domain(s) (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IDnsService.CloneDomainAsync(net.openstack.Providers.Rackspace.Objects.Dns.DomainId,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomains}})">
             <summary>
             Clones a domain registered in the DNS service, optionally cloning its subdomains as well.
             </summary>
             <param name="domainId">The domain ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Id">DnsDomain.Id</see>.</param>
             <param name="cloneName">The name of the new (cloned) domain.</param>
             <param name="cloneSubdomains"><c>true</c> to recursively clone subdomains; otherwise, <c>false</c> to only clone the top-level domain and its records. Cloned subdomain configurations are modified the same way that cloned top-level domain configurations are modified. If this is <c>null</c>, a provider-specific default value is used.</param>
             <param name="modifyRecordData"><c>true</c> to replace occurrences of the reference domain name with the new domain name in comments on the cloned (new) domain. If this is <c>null</c>, a provider-specific default value is used.</param>
             <param name="modifyEmailAddress"><c>true</c> to replace occurrences of the reference domain name with the new domain name in email addresses on the cloned (new) domain. If this is <c>null</c>, a provider-specific default value is used.</param>
             <param name="modifyComment"><true>true</true> to replace occurrences of the reference domain name with the new domain name in data fields (of records) on the cloned (new) domain. Does not affect NS records. If this is <c>null</c>, a provider-specific default value is used.</param>
             <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
             <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
             <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
             <returns>
             A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully,
             the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will return a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob`1"/> object
             describing the asynchronous server operation. If <paramref name="completionOption"/> is
             <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the job will additionally be in one of the following
             states.
            
             <list type="bullet">
             <item><see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Completed"/>: In this case the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob`1.Response"/>
             property contains a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomains"/> object containing the details of the cloned (new) domains.</item>
             <item><see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Error"/>: In this case the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.Error"/> property provides
             additional information about the error which occurred during the asynchronous server operation.</item>
             </list>
             </returns>
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="domainId"/> is <c>null</c>.
             <para>-or-</para>
             <para>If <paramref name="cloneName"/> is <c>null</c>.</para>
             </exception>
             <exception cref="T:System.ArgumentException">
             If <paramref name="cloneName"/> is empty.
             <para>-or-</para>
             <para>If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.</para>
             </exception>
             <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
             <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/clone_domain-dle846.html">Clone Domain (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IDnsService.ImportDomainAsync(System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomain},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomains}})">
             <summary>
             Imports domains into the DNS service.
             </summary>
             <param name="serializedDomains">A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomain"/> objects containing the serialized domain information to import.</param>
             <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
             <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
             <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
             <returns>
             A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully,
             the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will return a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob`1"/> object
             describing the asynchronous server operation. If <paramref name="completionOption"/> is
             <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the job will additionally be in one of the following
             states.
            
             <list type="bullet">
             <item><see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Completed"/>: In this case the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob`1.Response"/>
             property contains a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomains"/> object containing the details of the imported domains.</item>
             <item><see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Error"/>: In this case the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.Error"/> property provides
             additional information about the error which occurred during the asynchronous server operation.</item>
             </list>
             </returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="serializedDomains"/> is <c>null</c>.</exception>
             <exception cref="T:System.ArgumentException">
             If <paramref name="serializedDomains"/> is contains any <c>null</c> values.
             <para>-or-</para>
             <para>If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.</para>
             </exception>
             <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
             <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/import_domain.html">Import Domain (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IDnsService.RemoveDomainsAsync(System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.DomainId},System.Boolean,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob})">
             <summary>
             Removes one or more domains from the DNS service.
             </summary>
             <param name="domainIds">A collection of IDs for the domains to remove. These are obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Id">DnsDomain.Id</see>.</param>
             <param name="deleteSubdomains"><c>true</c> to delete any subdomains associated with the specified domains; otherwise, <c>false</c> to promote any subdomains to top-level domains.</param>
             <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
             <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
             <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
             <returns>
             A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully,
             the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will return a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob"/> object
             describing the asynchronous server operation. If <paramref name="completionOption"/> is
             <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the job will additionally be in one of the following
             states.
            
             <list type="bullet">
             <item><see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Completed"/></item>
             <item><see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Error"/>: In this case the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.Error"/> property provides
             additional information about the error which occurred during the asynchronous server operation.</item>
             </list>
             </returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="domainIds"/> is <c>null</c>.</exception>
             <exception cref="T:System.ArgumentException">
             If <paramref name="domainIds"/> contains any <c>null</c> values.
             <para>-or-</para>
             <para>If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.</para>
             </exception>
             <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
             <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/Remove_Domain_s_-d1e4022.html">Remove Domain(s) (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IDnsService.ListSubdomainsAsync(net.openstack.Providers.Rackspace.Objects.Dns.DomainId,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets information about subdomains currently associated with a domain in the DNS service.
            </summary>
            <param name="domainId">The top-level domain ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Id">DnsDomain.Id</see>.</param>
            <param name="offset">The index of the last item in the previous page of results. If not specified, the list starts at the beginning.</param>
            <param name="limit">The maximum number of subdomains to return in a single page.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully,
            the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will return a tuple of the resulting collection of
            <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomain"/> objects and the total number of domains in the list. If the total number of
            subdomains in the list is not available, the second element of the tuple will be <c>null</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="domainId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="offset"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="limit"/> is less than or equal to 0.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/List_Subdomains-d1e4295.html">List Subdomains (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IDnsService.ListRecordsAsync(net.openstack.Providers.Rackspace.Objects.Dns.DomainId,net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets information about records currently associated with a domain in the DNS service, optionally filtering the results
            to include only records of a specific type, name, and/or data.
            </summary>
            <param name="domainId">The domain ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Id">DnsDomain.Id</see>.</param>
            <param name="recordType">The specific record type to consider, or <c>null</c> to consider all record types.</param>
            <param name="recordName">The record name, which is matched to the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord.Name"/> property, or <c>null</c> to consider all records.</param>
            <param name="recordData">The record data, which is matched to the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord.Data"/> property, or <c>null</c> to consider all records.</param>
            <param name="offset">The index of the last item in the previous page of results. If not specified, the list starts at the beginning.</param>
            <param name="limit">The maximum number of records to return in a single page.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully,
            the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will return a tuple of the resulting collection of
            <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord"/> objects and the total number of records in the list. If the total number of
            records in the list is not available, the second element of the tuple will be <c>null</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="domainId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="offset"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="limit"/> is less than or equal to 0.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/List_Records-d1e4629.html">List Records (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/Search_Records-e338d7e0.html">Search Records (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IDnsService.ListRecordDetailsAsync(net.openstack.Providers.Rackspace.Objects.Dns.DomainId,net.openstack.Providers.Rackspace.Objects.Dns.RecordId,System.Threading.CancellationToken)">
            <summary>
            Gets detailed information about a specific DNS record.
            </summary>
            <param name="domainId">The domain ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Id">DnsDomain.Id</see>.</param>
            <param name="recordId">The record ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord.Id">DnsRecord.Id</see>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will return a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord"/> object containing the details of the specified DNS record.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="domainId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="recordId"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/List_Record_Details-d1e4770.html">List Record Details (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IDnsService.AddRecordsAsync(net.openstack.Providers.Rackspace.Objects.Dns.DomainId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordsList}})">
             <summary>
             Adds records to a domain in the DNS service.
             </summary>
             <param name="domainId">The domain ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Id">DnsDomain.Id</see>.</param>
             <param name="recordConfigurations">A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration"/> objects describing the records to add.</param>
             <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
             <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
             <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
             <returns>
             A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully,
             the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will return a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob`1"/> object
             describing the asynchronous server operation. If <paramref name="completionOption"/> is
             <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the job will additionally be in one of the following
             states.
            
             <list type="bullet">
             <item><see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Completed"/>: In this case the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob`1.Response"/>
             property contains a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordsList"/> object containing the details of the added records.</item>
             <item><see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Error"/>: In this case the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.Error"/> property provides
             additional information about the error which occurred during the asynchronous server operation.</item>
             </list>
             </returns>
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="domainId"/> is <c>null</c>.
             <para>-or-</para>
             <para>If <paramref name="recordConfigurations"/> is <c>null</c>.</para>
             </exception>
             <exception cref="T:System.ArgumentException">
             If <paramref name="recordConfigurations"/> contains any <c>null</c> values.
             <para>-or-</para>
             <para>If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.</para>
             </exception>
             <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
             <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/Add_Records-d1e4895.html">Add Records (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IDnsService.UpdateRecordsAsync(net.openstack.Providers.Rackspace.Objects.Dns.DomainId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob})">
             <summary>
             Updates domain records in the DNS service.
             </summary>
             <param name="domainId">The domain ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Id">DnsDomain.Id</see>.</param>
             <param name="recordConfigurations">A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration"/> objects describing the updates to apply to domain records.</param>
             <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
             <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
             <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
             <returns>
             A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. If <paramref name="completionOption"/> is
             <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the job will additionally be in one of the following
             states.
            
             <list type="bullet">
             <item><see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Completed"/></item>
             <item><see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Error"/>: In this case the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.Error"/> property provides
             additional information about the error which occurred during the asynchronous server operation.</item>
             </list>
             </returns>
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="domainId"/> is <c>null</c>.
             <para>-or-</para>
             <para>If <paramref name="recordConfigurations"/> is <c>null</c>.</para>
             </exception>
             <exception cref="T:System.ArgumentException">
             If <paramref name="recordConfigurations"/> contains any <c>null</c> values.
             <para>-or-</para>
             <para>If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.</para>
             </exception>
             <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
             <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/Modify_Records-d1e5033.html">Modify Records (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IDnsService.RemoveRecordsAsync(net.openstack.Providers.Rackspace.Objects.Dns.DomainId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.RecordId},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob})">
             <summary>
             Removes one or more domain records from the DNS service.
             </summary>
             <param name="domainId">The domain ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Id">DnsDomain.Id</see>.</param>
             <param name="recordId">A collection of IDs for the records to remove. These are obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord.Id">DnsRecord.Id</see>.</param>
             <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
             <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
             <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
             <returns>
             A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully,
             the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will return a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob"/> object
             describing the asynchronous server operation. If <paramref name="completionOption"/> is
             <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the job will additionally be in one of the following
             states.
            
             <list type="bullet">
             <item><see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Completed"/></item>
             <item><see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Error"/>: In this case the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.Error"/> property provides
             additional information about the error which occurred during the asynchronous server operation.</item>
             </list>
             </returns>
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="domainId"/> is <c>null</c>.
             <para>-or-</para>
             <para>If <paramref name="recordId"/> is <c>null</c>.</para>
             </exception>
             <exception cref="T:System.ArgumentException">
             If <paramref name="recordId"/> contains any <c>null</c> values.
             <para>-or-</para>
             <para>If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.</para>
             </exception>
             <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
             <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/Remove_Records-d1e5188.html">Remove Records (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IDnsService.ListPtrRecordsAsync(System.String,System.Uri,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets information about reverse DNS records currently associated with a cloud resource in the DNS service.
            </summary>
            <param name="serviceName">The name of the service which owns the cloud resource. This is obtained from <see cref="P:net.openstack.Core.Domain.ServiceCatalog.Name"/>.</param>
            <param name="deviceResourceUri">The absolute URI of the cloud resource.</param>
            <param name="offset">The index of the last item in the previous page of results. If not specified, the list starts at the beginning.</param>
            <param name="limit">The maximum number of records to return in a single page.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully,
            the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will return a tuple of the resulting collection of
            <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord"/> objects and the total number of domains in the list. If the total number of
            subdomains in the list is not available, the second element of the tuple will be <c>null</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serviceName"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="deviceResourceUri"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="serviceName"/> is empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="offset"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="limit"/> is less than or equal to 0.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/ReverseDNS-123457000.html">List PTR Records (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IDnsService.ListPtrRecordDetailsAsync(System.String,System.Uri,net.openstack.Providers.Rackspace.Objects.Dns.RecordId,System.Threading.CancellationToken)">
            <summary>
            Gets detailed information about a reverse DNS record currently associated with a cloud resource in the DNS service.
            </summary>
            <param name="serviceName">The name of the service which owns the cloud resource. This is obtained from <see cref="P:net.openstack.Core.Domain.ServiceCatalog.Name"/>.</param>
            <param name="deviceResourceUri">The absolute URI of the cloud resource.</param>
            <param name="recordId">The record ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord.Id">DnsRecord.Id</see>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will return a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord"/> object containing the details of the specified reverse DNS record.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serviceName"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="deviceResourceUri"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="recordId"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serviceName"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="recordId"/> is empty.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/ReverseDNS-123457001.html">List PTR Record Details (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IDnsService.AddPtrRecordsAsync(System.String,System.Uri,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordsList}})">
             <summary>
             Adds reverse DNS records to a cloud resource in the DNS service.
             </summary>
             <param name="serviceName">The name of the service which owns the cloud resource. This is obtained from <see cref="P:net.openstack.Core.Domain.ServiceCatalog.Name"/>.</param>
             <param name="deviceResourceUri">The absolute URI of the cloud resource.</param>
             <param name="recordConfigurations">A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration"/> objects describing the records to add.</param>
             <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
             <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
             <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
             <returns>
             A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully,
             the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will return a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob`1"/> object
             describing the asynchronous server operation. If <paramref name="completionOption"/> is
             <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the job will additionally be in one of the following
             states.
            
             <list type="bullet">
             <item><see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Completed"/>: In this case the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob`1.Response"/>
             property contains a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordsList"/> object containing the details of the added records.</item>
             <item><see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Error"/>: In this case the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.Error"/> property provides
             additional information about the error which occurred during the asynchronous server operation.</item>
             </list>
             </returns>
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="serviceName"/> is <c>null</c>.
             <para>-or-</para>
             <para>If <paramref name="deviceResourceUri"/> is <c>null</c>.</para>
             <para>-or-</para>
             <para>If <paramref name="recordConfigurations"/> is <c>null</c>.</para>
             </exception>
             <exception cref="T:System.ArgumentException">
             If <paramref name="serviceName"/> is empty.
             <para>-or-</para>
             <para>If <paramref name="recordConfigurations"/> contains any <c>null</c> values.</para>
             <para>-or-</para>
             <para>If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.</para>
             </exception>
             <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
             <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/ReverseDNS-123457003.html">Add PTR Records (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IDnsService.UpdatePtrRecordsAsync(System.String,System.Uri,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob})">
             <summary>
             Update reverse DNS records for a cloud resource in the DNS service.
             </summary>
             <param name="serviceName">The name of the service which owns the cloud resource. This is obtained from <see cref="P:net.openstack.Core.Domain.ServiceCatalog.Name"/>.</param>
             <param name="deviceResourceUri">The absolute URI of the cloud resource.</param>
             <param name="recordConfigurations">A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration"/> objects describing the updates to apply to domain records.</param>
             <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
             <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
             <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
             <returns>
             A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. If <paramref name="completionOption"/> is
             <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the job will additionally be in one of the following
             states.
            
             <list type="bullet">
             <item><see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Completed"/></item>
             <item><see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Error"/>: In this case the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.Error"/> property provides
             additional information about the error which occurred during the asynchronous server operation.</item>
             </list>
             </returns>
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="serviceName"/> is <c>null</c>.
             <para>-or-</para>
             <para>If <paramref name="deviceResourceUri"/> is <c>null</c>.</para>
             <para>-or-</para>
             <para>If <paramref name="recordConfigurations"/> is <c>null</c>.</para>
             </exception>
             <exception cref="T:System.ArgumentException">
             If <paramref name="serviceName"/> is empty.
             <para>-or-</para>
             <para>If <paramref name="recordConfigurations"/> contains any <c>null</c> values.</para>
             <para>-or-</para>
             <para>If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.</para>
             </exception>
             <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
             <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/ReverseDNS-123457004.html">Modify PTR Records (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IDnsService.RemovePtrRecordsAsync(System.String,System.Uri,System.Net.IPAddress,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob})">
             <summary>
             Removes one or more reverse DNS records from the DNS service.
             </summary>
             <param name="serviceName">The name of the service which owns the cloud resource. This is obtained from <see cref="P:net.openstack.Core.Domain.ServiceCatalog.Name"/>.</param>
             <param name="deviceResourceUri">The absolute URI of the cloud resource.</param>
             <param name="ipAddress">The specific record to remove. If this is <c>null</c>, all reverse DNS records associated with the specified device are removed.</param>
             <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
             <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
             <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
             <returns>
             A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully,
             the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will return a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob"/> object
             describing the asynchronous server operation. If <paramref name="completionOption"/> is
             <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the job will additionally be in one of the following
             states.
            
             <list type="bullet">
             <item><see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Completed"/></item>
             <item><see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Error"/>: In this case the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.Error"/> property provides
             additional information about the error which occurred during the asynchronous server operation.</item>
             </list>
             </returns>
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="serviceName"/> is <c>null</c>.
             <para>-or-</para>
             <para>If <paramref name="deviceResourceUri"/> is <c>null</c>.</para>
             </exception>
             <exception cref="T:System.ArgumentException">
             If <paramref name="serviceName"/> is empty.
             <para>-or-</para>
             <para>If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.</para>
             </exception>
             <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
             <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/ReverseDNS-123457005.html">Remove PTR Records (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudDnsProvider._internalUrl">
            <summary>
            Specifies whether the <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/> or <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>
            should be used for accessing the Cloud DNS API.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudDnsProvider._baseUri">
            <summary>
            This field caches the base URI used for accessing the Cloud DNS service.
            </summary>
            <seealso cref="M:net.openstack.Providers.Rackspace.CloudDnsProvider.GetBaseUriAsync(System.Threading.CancellationToken)"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.#ctor(net.openstack.Core.Domain.CloudIdentity,System.String,System.Boolean,net.openstack.Core.Providers.IIdentityProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudDnsProvider"/> class with
            the specified values.
            </summary>
            <param name="defaultIdentity">The default identity to use for calls that do not explicitly specify an identity. If this value is <c>null</c>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="defaultRegion">The default region to use for calls that do not explicitly specify a region. If this value is <c>null</c>, the default region for the user will be used; otherwise if the service uses region-specific endpoints all calls must specify an explicit region.</param>
            <param name="internalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <c>null</c>, a new instance of <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> is created using <paramref name="defaultIdentity"/> as the default identity.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.#ctor(net.openstack.Core.Domain.CloudIdentity,System.String,System.Boolean,net.openstack.Core.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService,net.openstack.Core.Validators.IHttpResponseCodeValidator)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudDnsProvider"/> class with
            the specified values.
            </summary>
            <param name="defaultIdentity">The default identity to use for calls that do not explicitly specify an identity. If this value is <c>null</c>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="defaultRegion">The default region to use for calls that do not explicitly specify a region. If this value is <c>null</c>, the default region for the user will be used; otherwise if the service uses region-specific endpoints all calls must specify an explicit region.</param>
            <param name="internalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <c>null</c>, a new instance of <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> is created using <paramref name="defaultIdentity"/> as the default identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing synchronous REST requests. If this value is <c>null</c>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
            <param name="httpStatusCodeValidator">The HTTP status code validator to use for synchronous REST requests. If this value is <c>null</c>, the provider will use <see cref="P:net.openstack.Providers.Rackspace.Validators.HttpResponseCodeValidator.Default"/>.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.ListLimitsAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.ListLimitTypesAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.ListLimitsAsync(net.openstack.Providers.Rackspace.Objects.Dns.LimitType,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.GetJobStatusAsync(net.openstack.Providers.Rackspace.Objects.Dns.DnsJob,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.GetJobStatusAsync``1(net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{``0},System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.ListDomainsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.ListDomainDetailsAsync(net.openstack.Providers.Rackspace.Objects.Dns.DomainId,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.ListDomainChangesAsync(net.openstack.Providers.Rackspace.Objects.Dns.DomainId,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.ExportDomainAsync(net.openstack.Providers.Rackspace.Objects.Dns.DomainId,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{net.openstack.Providers.Rackspace.Objects.Dns.ExportedDomain}})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.CreateDomainsAsync(net.openstack.Providers.Rackspace.Objects.Dns.DnsConfiguration,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomains}})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.UpdateDomainsAsync(net.openstack.Providers.Rackspace.Objects.Dns.DnsUpdateConfiguration,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.CloneDomainAsync(net.openstack.Providers.Rackspace.Objects.Dns.DomainId,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomains}})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.ImportDomainAsync(System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomain},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomains}})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.RemoveDomainsAsync(System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.DomainId},System.Boolean,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.ListSubdomainsAsync(net.openstack.Providers.Rackspace.Objects.Dns.DomainId,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.ListRecordsAsync(net.openstack.Providers.Rackspace.Objects.Dns.DomainId,net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.ListRecordDetailsAsync(net.openstack.Providers.Rackspace.Objects.Dns.DomainId,net.openstack.Providers.Rackspace.Objects.Dns.RecordId,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.AddRecordsAsync(net.openstack.Providers.Rackspace.Objects.Dns.DomainId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordsList}})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.UpdateRecordsAsync(net.openstack.Providers.Rackspace.Objects.Dns.DomainId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.RemoveRecordsAsync(net.openstack.Providers.Rackspace.Objects.Dns.DomainId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.RecordId},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.ListPtrRecordsAsync(System.String,System.Uri,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.ListPtrRecordDetailsAsync(System.String,System.Uri,net.openstack.Providers.Rackspace.Objects.Dns.RecordId,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.AddPtrRecordsAsync(System.String,System.Uri,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordsList}})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.UpdatePtrRecordsAsync(System.String,System.Uri,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.RemovePtrRecordsAsync(System.String,System.Uri,System.Net.IPAddress,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.WaitForJobAsync(net.openstack.Providers.Rackspace.Objects.Dns.DnsJob,System.Boolean,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob})">
             <summary>
             Waits for an asynchronous server job to complete.
             </summary>
             <param name="job">The <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob"/> to wait for.</param>
             <param name="showDetails"><c>true</c> to include detailed information about the job; otherwise, <c>false</c>.</param>
             <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
             <param name="progress">An optional callback object to receive progress notifications. If this is <c>null</c>, no progress notifications are sent.</param>
             <returns>
             A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully,
             the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will return a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob"/> object
             describing the asynchronous server operation. The job will additionally be in one of the following
             states.
            
             <list type="bullet">
             <item><see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Completed"/></item>
             <item><see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Error"/>: In this case the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.Error"/> property provides
             additional information about the error which occurred during the asynchronous server operation.</item>
             </list>
             </returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="job"/> is <c>null</c>.</exception>
             <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
             <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/sync_asynch_responses.html">Synchronous and Asynchronous Responses (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.WaitForJobAsync``1(net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{``0},System.Boolean,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{``0}})">
             <summary>
             Waits for an asynchronous server job with a strongly-typed result to complete.
             </summary>
             <typeparam name="TResult">The class modeling the JSON result of the asynchronous operation.</typeparam>
             <param name="job">The <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob`1"/> to wait for.</param>
             <param name="showDetails"><c>true</c> to include detailed information about the job; otherwise, <c>false</c>.</param>
             <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
             <param name="progress">An optional callback object to receive progress notifications. If this is <c>null</c>, no progress notifications are sent.</param>
             <returns>
             A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully,
             the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will return a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob`1"/> object
             describing the asynchronous server operation. The job will additionally be in one of the following
             states.
            
             <list type="bullet">
             <item><see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Completed"/>: In this case the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob`1.Response"/>
             property provides the strongly-typed <typeparamref name="TResult"/> object which is the result of the
             operation.</item>
             <item><see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Error"/>: In this case the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.Error"/> property provides
             additional information about the error which occurred during the asynchronous server operation.</item>
             </list>
             </returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="job"/> is <c>null</c>.</exception>
             <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
             <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/sync_asynch_responses.html">Synchronous and Asynchronous Responses (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.GetBaseUriAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
            <remarks>
            This method returns a cached base address if one is available. If no cached address is
            available, <see cref="M:net.openstack.Providers.Rackspace.ProviderBase`1.GetServiceEndpoint(net.openstack.Core.Domain.CloudIdentity,System.String,System.String,System.String)"/> is called to obtain
            an <see cref="T:net.openstack.Core.Domain.Endpoint"/> with the type <c>rax:dns</c> and preferred type <c>cloudDNS</c>.
            </remarks>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.PollJobStateAsync(net.openstack.Providers.Rackspace.Objects.Dns.DnsJob,System.Boolean,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob})">
            <summary>
            Asynchronously poll the current state of a DNS job.
            </summary>
            <param name="job">The job in the DNS service.</param>
            <param name="showDetails"><c>true</c> to include detailed information about the job; otherwise, <c>false</c>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When
            the task completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/>
            property will contain a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob"/> object containing the
            updated state information for the job in the DNS service.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="job"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudDnsProvider.PollJobStateAsync``1(net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{``0},System.Boolean,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{``0}})">
            <summary>
            Asynchronously poll the current state of a DNS job.
            </summary>
            <param name="job">The job in the DNS service.</param>
            <param name="showDetails"><c>true</c> to include detailed information about the job; otherwise, <c>false</c>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When
            the task completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/>
            property will contain a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob"/> object containing the
            updated state information for the job in the DNS service.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="job"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider">
            <summary>
            Provides an implementation of <see cref="T:net.openstack.Providers.Rackspace.ILoadBalancerService"/> for operating
            with Rackspace's Cloud Load Balancers product.
            </summary>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Overview-d1e82.html">Rackspace Cloud Load Balancers Developer Guide - API v1.0</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.ILoadBalancerService">
            <summary>
            Represents a provider for the Rackspace Cloud Load Balancers service.
            </summary>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Overview-d1e82.html">Rackspace Cloud Load Balancers Developer Guide - API v1.0</seealso>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.ListLoadBalancersAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a collection of current load balancers.
            </summary>
            <param name="markerId">The <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id"/> of the last item in the previous list. Used for <see href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Paginated_Collections-d1e786.html">pagination</see>. If the value is <c>null</c>, the list starts at the beginning.</param>
            <param name="limit">Indicates the maximum number of items to return. Used for <see href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Paginated_Collections-d1e786.html">pagination</see>. If the value is <c>null</c>, a provider-specific default value is used.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a collection of
            <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer"/> objects describing the current load balancers.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="limit"/> is less than or equal to 0.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Load_Balancers-d1e1367.html">List Load Balancers (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.GetLoadBalancerAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)">
            <summary>
            Gets detailed information about a specific load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer"/>
            object containing detailed information about the specified load balancer.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Load_Balancer_Details-d1e1522.html">List Load Balancer Details (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.CreateLoadBalancerAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Creates a new load balancer.
            </summary>
            <param name="configuration">The configuration for the new load balancer.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully,
            the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will return a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer"/> object
            describing the new load balancer. If <paramref name="completionOption"/> is
            <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the task will not be considered complete until
            the load balancer transitions out of the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.Build"/> state.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="configuration"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Load_Balancer_Details-d1e1522.html">List Load Balancer Details (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.UpdateLoadBalancerAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUpdate,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Updates attributes for an existing load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="configuration">The updated configuration for the load balancer.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. If <paramref name="completionOption"/> is
            <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the task will not be considered complete until
            the load balancer transitions out of the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingUpdate"/> state.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="configuration"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Update_Load_Balancer_Attributes-d1e1812.html">Update Load Balancer Attributes (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.RemoveLoadBalancerAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Removes a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. If
            <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>,
            the task will not be considered complete until the load balancer transitions
            out of the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingDelete"/> state.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Remove_Load_Balancer-d1e2093.html">Remove Load Balancer (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.RemoveLoadBalancerRangeAsync(System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer[]})">
            <summary>
            Removes one or more load balancers.
            </summary>
            <param name="loadBalancerIds">The IDs of load balancers to remove. These is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. If
            <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>,
            the task will not be considered complete until all of the load balancers
            transition out of the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingDelete"/> state.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerIds"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="loadBalancerIds"/> contains any <c>null</c> values.
            <para>-or-</para>
            <para>If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Remove_Load_Balancer-d1e2093.html">Remove Load Balancer (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.GetErrorPageAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)">
            <summary>
            Gets the HTML content of the page which is shown to an end user who is attempting to access a load balancer node that is offline or unavailable.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain the HTML content
            of the error page which is shown to an end user who is attempting to access a load balancer
            node that is offline or unavailable.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Errorpage-d1e2218.html">Error Page Operations (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.SetErrorPageAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.String,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Sets the HTML content of the custom error page which is shown to an end user who is attempting to access a load balancer node that is offline or unavailable.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="content">The HTML content of the error page which is shown to an end user who is attempting to access a load balancer node that is offline or unavailable.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. If <paramref name="completionOption"/> is
            <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the task will not be considered complete until
            the load balancer transitions out of the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingUpdate"/> state.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="content"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="content"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Errorpage-d1e2218.html">Error Page Operations (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.RemoveErrorPageAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Removes the custom error page which is shown to an end user who is attempting to access a load balancer node that is offline or unavailable.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. If <paramref name="completionOption"/> is
            <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the task will not be considered complete until
            the load balancer transitions out of the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingUpdate"/> state.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Errorpage-d1e2218.html">Error Page Operations (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.GetStatisticsAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)">
            <summary>
            Get detailed statistics for a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a
            <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatistics"/> object containing the detailed statistics for the
            load balancer.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Load_Balancer_Stats-d1e1524.html">List Load Balancer Stats (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.ListNodesAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)">
            <summary>
            List the load balancer nodes associated with a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a collection of
            <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node"/> objects describing the load balancer nodes associated with the specified
            load balancer.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Nodes-d1e2218.html">List Nodes (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.GetNodeAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId,System.Threading.CancellationToken)">
            <summary>
            Get detailed information about a load balancer node.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="nodeId">The load balancer node ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node.Id">Node.Id</see>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node"/>
            object describing the specified load balancer node.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="nodeId"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Nodes-d1e2218.html">List Nodes (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.AddNodeAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Add a node to a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="nodeConfiguration">A <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration"/> object describing the load balancer node to add.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node"/>
            object describing the new load balancer node. If <paramref name="completionOption"/> is
            <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the task will not be considered complete until
            the load balancer transitions out of the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingUpdate"/> state.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="nodeConfiguration"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Add_Nodes-d1e2379.html">Add Nodes (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.AddNodeRangeAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Add one or more nodes to a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="nodeConfigurations">A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration"/> objects describing the load balancer nodes to add.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a collection of
            <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node"/> objects describing the new load balancer nodes. If <paramref name="completionOption"/> is
            <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the task will not be considered complete until
            the load balancer transitions out of the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingUpdate"/> state.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="nodeConfigurations"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="nodeConfigurations"/> contains any <c>null</c> values.
            <para>-or-</para>
            <para>If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Add_Nodes-d1e2379.html">Add Nodes (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.UpdateNodeAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeUpdate,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Update the configuration of a load balancer node.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="nodeId">The load balancer node IDs. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node.Id">Node.Id</see>.</param>
            <param name="configuration">The updated configuration for the load balancer node.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. If <paramref name="completionOption"/> is
            <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the task will not be considered complete until
            the load balancer transitions out of the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingUpdate"/> state.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="nodeId"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="configuration"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Modify_Nodes-d1e2503.html">Modify Nodes (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.RemoveNodeAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Remove a nodes from a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="nodeId">The load balancer node IDs. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node.Id">Node.Id</see>.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. If <paramref name="completionOption"/> is
            <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the task will not be considered complete until
            the load balancer transitions out of the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingUpdate"/> state.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="nodeId"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Remove_Nodes-d1e2675.html">Remove Nodes (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.RemoveNodeRangeAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Remove one or more nodes from a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="nodeIds">The load balancer node IDs of nodes to remove. These are obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node.Id">Node.Id</see>.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. If <paramref name="completionOption"/> is
            <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the task will not be considered complete until
            the load balancer transitions out of the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingUpdate"/> state.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="nodeIds"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="nodeIds"/> contains any <c>null</c> values.
            <para>-or-</para>
            <para>If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Remove_Nodes-d1e2675.html">Remove Nodes (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.ListNodeServiceEventsAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventId,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List the service events for a load balancer node.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="markerId">The <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.Id"/> of the last item in the previous list. Used for <see href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Paginated_Collections-d1e786.html">pagination</see>. If the value is <c>null</c>, the list starts at the beginning.</param>
            <param name="limit">Indicates the maximum number of items to return. Used for <see href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Paginated_Collections-d1e786.html">pagination</see>. If the value is <c>null</c>, a provider-specific default value is used.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a collection of
            <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent"/> objects describing the service events for the load balancer node.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="limit"/> is less than or equal to 0.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Node-Events-d1e264.html">View Node Service Events (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.ListVirtualAddressesAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)">
            <summary>
            Get a list of all virtual addresses associated with a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a collection of
            <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress"/> objects describing the virtual addresses
            associated with the load balancer.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Virtual_IPs-d1e2809.html">List Virtual IPs (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.AddVirtualAddressAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddressType,System.Net.Sockets.AddressFamily,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Add a virtual address to a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="type">The virtual address type.</param>
            <param name="addressFamily">The family of address to add. This should be <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork"/> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6"/>.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a
            <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress"/> object describing the added virtual address.
            If <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>,
            the task will not be considered complete until the load balancer transitions out of the
            <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingUpdate"/> state.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="type"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the specified <paramref name="addressFamily"/> is not supported by this provider.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Add_Virtual_IP_Version_6.html">Add Virtual IP Version 6 (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.RemoveVirtualAddressAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.VirtualAddressId,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Remove a virtual address associated with a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="virtualAddressId">The virtual address ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress.Id">LoadBalancerVirtualAddress.Id</see>.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. If <paramref name="completionOption"/> is
            <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the task will not be considered complete until
            the load balancer transitions out of the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingUpdate"/> state.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="virtualAddressId"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Remove_Virtual_IP-d1e2919.html">Remove Virtual IP (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.RemoveVirtualAddressRangeAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.VirtualAddressId},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Remove a collection of virtual addresses associated with a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="virtualAddressIds">The virtual address IDs. These are obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress.Id">LoadBalancerVirtualAddress.Id</see>.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. If <paramref name="completionOption"/> is
            <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the task will not be considered complete until
            the load balancer transitions out of the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingUpdate"/> state.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="virtualAddressIds"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="virtualAddressIds"/> contains any <c>null</c> values.
            <para>-or-</para>
            <para>If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Remove_Virtual_IP-d1e2919.html">Remove Virtual IP (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.ListAllowedDomainsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the domain name restrictions in place for adding load balancer nodes.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a collection of
            strings containing the allowed domain names used for adding load balancer nodes.
            </returns>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Node-Events-d1e264.html">View Node Service Events (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.ListBillableLoadBalancersAsync(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List billable load balancers for a given date range.
            </summary>
            <param name="startTime">The start date to consider. The time component, if any, is ignored. If the value is <c>null</c>, the result includes all usage prior to the specified <paramref name="endTime"/>.</param>
            <param name="endTime">The end date to consider. The time component, if any, is ignored. If the value is <c>null</c>, the result includes all usage following the specified <paramref name="startTime"/>.</param>
            <param name="offset">The index of the last item in the previous page of results. If the value is <c>null</c>, the list starts at the beginning.</param>
            <param name="limit">Gets the maximum number of load balancers to return in a single page of results. If the value is <c>null</c>, a provider-specific default value is used.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a collection of
            <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer"/> objects describing the load balancers active in the specified
            date range.
            </returns>
            <exception cref="T:System.ArgumentException">If <paramref name="endTime"/> occurs before <paramref name="startTime"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="offset"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="limit"/> is less than or equal to 0.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Usage-d1e3014.html">List Usage (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.ListAccountLevelUsageAsync(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)">
            <summary>
            List all usage for an account during a specified date range.
            </summary>
            <param name="startTime">The start date to consider. The time component, if any, is ignored. If the value is <c>null</c>, the result includes all usage prior to the specified <paramref name="endTime"/>.</param>
            <param name="endTime">The end date to consider. The time component, if any, is ignored. If the value is <c>null</c>, the result includes all usage following the specified <paramref name="startTime"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a collection of
            <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage"/> objects describing the load balancer usage for an account
            in the specified date range.
            </returns>
            <exception cref="T:System.ArgumentException">If <paramref name="endTime"/> occurs before <paramref name="startTime"/>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Usage-d1e3014.html">List Usage (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.ListHistoricalUsageAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)">
            <summary>
            List all usage for a specific load balancer during a specified date range.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="startTime">The start date to consider. The time component, if any, is ignored. If the value is <c>null</c>, the result includes all usage prior to the specified <paramref name="endTime"/>.</param>
            <param name="endTime">The end date to consider. The time component, if any, is ignored. If the value is <c>null</c>, the result includes all usage following the specified <paramref name="startTime"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a collection of
            <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage"/> objects describing the usage for the load balancer in
            the specified date range.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="endTime"/> occurs before <paramref name="startTime"/>.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Usage-d1e3014.html">List Usage (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.ListCurrentUsageAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)">
            <summary>
            List all usage for a specific load balancer during a preceding 24 hours.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a collection of
            <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage"/> objects describing the usage for the load balancer in
            the preceding 24 hours.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Usage-d1e3014.html">List Usage (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.ListAccessListAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)">
            <summary>
            Gets the access list configuration for a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a collection of
            <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem"/> objects describing the access list configuration for the load
            balancer.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Manage_Access_Lists-d1e3187.html">Manage Access Lists (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.CreateAccessListAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Add a network item to the access list for a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="networkItem">A <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem"/> object describing the network item to add to the load balancer's access list.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.
            If <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>,
            the task will not be considered complete until the load balancer transitions out of the
            <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingUpdate"/> state.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="networkItem"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Manage_Access_Lists-d1e3187.html">Manage Access Lists (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.CreateAccessListAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Add a collection of network items to the access list for a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="networkItems">A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem"/> objects describing the network items to add to the load balancer's access list.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. If <paramref name="completionOption"/> is
            <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the task will not be considered complete until
            the load balancer transitions out of the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingUpdate"/> state.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="networkItems"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="networkItems"/> contains any <c>null</c> values.
            <para>-or-</para>
            <para>If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Manage_Access_Lists-d1e3187.html">Manage Access Lists (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.RemoveAccessListAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItemId,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Remove a network item from the access list of a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="networkItemId">The network item ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem.Id"/>.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. If <paramref name="completionOption"/> is
            <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the task will not be considered complete until
            the load balancer transitions out of the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingUpdate"/> state.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="networkItemId"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Manage_Access_Lists-d1e3187.html">Manage Access Lists (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.RemoveAccessListRangeAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItemId},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Remove a collection of network items from the access list of a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="networkItemIds">The network item IDs. These are obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem.Id"/>.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. If <paramref name="completionOption"/> is
            <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the task will not be considered complete until
            the load balancer transitions out of the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingUpdate"/> state.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="networkItemIds"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="networkItemIds"/> contains any <c>null</c> values.
            <para>-or-</para>
            <para>If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Manage_Access_Lists-d1e3187.html">Manage Access Lists (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.ClearAccessListAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Remove all network items from the access list of a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. If <paramref name="completionOption"/> is
            <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the task will not be considered complete until
            the load balancer transitions out of the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingUpdate"/> state.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Manage_Access_Lists-d1e3187.html">Manage Access Lists (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.GetHealthMonitorAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)">
            <summary>
            Gets the health monitor currently configured for a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a
            <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor"/> object describing the health monitor configured for the
            load balancer.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Monitor_Health-d1e3434.html">Monitor Health (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.SetHealthMonitorAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Sets the health monitor configuration for a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="monitor">The updated health monitor configuration.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. If <paramref name="completionOption"/> is
            <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the task will not be considered complete until
            the load balancer transitions out of the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingUpdate"/> state.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="monitor"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Monitor_Health-d1e3434.html">Monitor Health (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.RemoveHealthMonitorAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Remove the health monitor currently configured for a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. If <paramref name="completionOption"/> is
            <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the task will not be considered complete until
            the load balancer transitions out of the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingUpdate"/> state.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Monitor_Health-d1e3434.html">Monitor Health (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.GetSessionPersistenceAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)">
            <summary>
            Gets the session persistence configuration for a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistence"/>
            object describing the session persistence configuration for the load balancer.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Manage_Session_Persistence-d1e3733.html">Manage Session Persistence (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.SetSessionPersistenceAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistence,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
             <summary>
             Sets the session persistence configuration for a load balancer.
             </summary>
             <remarks>
             You can only set one of the session persistence modes on a load balancer, and it can only support one
             protocol, so if you set <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistenceType.HttpCookie"/> mode for an HTTP load balancer,
             then it will support session persistence for HTTP requests only. Likewise, if you set
             <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistenceType.SourceAddress"/> mode for an HTTPS load balancer, then it will support
             session persistence for HTTPS requests only.
            
             <para>
             If you want to support session persistence for both HTTP and HTTPS requests concurrently, then you have 2 choices:
             </para>
            
             <list type="bullet">
             <item>Use two load balancers, one configured for session persistence for HTTP requests and the other
             configured for session persistence for HTTPS requests. That way, the load balancers together will support
             session persistence for both HTTP and HTTPS requests concurrently, with each load balancer supporting one
             of the protocols.</item>
             <item>Use one load balancer, configure it for session persistence for HTTP requests, and then enable SSL
             termination for that load balancer (refer to Section 4.17, "SSL Termination" for details). The load
             balancer will then support session persistence for both HTTP and HTTPS requests concurrently.</item>
             </list>
             </remarks>
             <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
             <param name="sessionPersistence">The session persistence configuration.</param>
             <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
             <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
             <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
             <returns>
             A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. If <paramref name="completionOption"/> is
             <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the task will not be considered complete until
             the load balancer transitions out of the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingUpdate"/> state.
             </returns>
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="loadBalancerId"/> is <c>null</c>.
             <para>-or-</para>
             <para>If <paramref name="sessionPersistence"/> is <c>null</c>.</para>
             </exception>
             <exception cref="T:System.ArgumentException">
             If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.
             </exception>
             <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
             <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Manage_Session_Persistence-d1e3733.html">Manage Session Persistence (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.RemoveSessionPersistenceAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Removes the session persistence configuration for a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. If <paramref name="completionOption"/> is
            <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the task will not be considered complete until
            the load balancer transitions out of the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingUpdate"/> state.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Manage_Session_Persistence-d1e3733.html">Manage Session Persistence (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.GetConnectionLoggingAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)">
            <summary>
            Gets whether or not connection logging is enabled for a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will be <c>true</c> if content
            caching is enabled for the load balancer; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Log_Connections-d1e3924.html">Log Connections (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.SetConnectionLoggingAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Boolean,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Enables or disables connection logging for a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="enabled"><c>true</c> to enable connection logging on the load balancer; otherwise, <c>false</c>.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. If <paramref name="completionOption"/> is
            <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the task will not be considered complete until
            the load balancer transitions out of the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingUpdate"/> state.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Log_Connections-d1e3924.html">Log Connections (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.ListThrottlesAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)">
            <summary>
            Gets the connection throttling configuration for a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles"/>
            object describing the connection throttling configuration in effect on the load balancer.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Throttle_Connections-d1e4057.html">Throttle Connections (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.UpdateThrottlesAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Updates the connection throttling configuration for a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="throttleConfiguration">A <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles"/> object describing the throttling configuration to apply for the load balancer.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. If <paramref name="completionOption"/> is
            <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the task will not be considered complete until
            the load balancer transitions out of the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingUpdate"/> state.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="throttleConfiguration"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Throttle_Connections-d1e4057.html">Throttle Connections (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.RemoveThrottlesAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Removes the connection throttling configuration for a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. If <paramref name="completionOption"/> is
            <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the task will not be considered complete until
            the load balancer transitions out of the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingUpdate"/> state.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Throttle_Connections-d1e4057.html">Throttle Connections (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.GetContentCachingAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)">
             <summary>
             Gets whether or not content caching is enabled for a load balancer.
             </summary>
             <remarks>
             When content caching is enabled, recently-accessed files are stored on the load balancer
             for easy retrieval by web clients. Content caching improves the performance of high
             traffic web sites by temporarily storing data that was recently accessed. While it's
             cached, requests for that data will be served by the load balancer, which in turn reduces
             load off the back end nodes. The result is improved response times for those requests and
             less load on the web server.
            
             <para>
             For more information about content caching, refer to the following Knowledge Center
             article:
             <see href="http://www.rackspace.com/knowledge_center/content/content-caching-cloud-load-balancers">Content Caching for Cloud Load Balancers</see>.
             </para>
             </remarks>
             <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
             <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
             <returns>
             A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
             completes, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will be <c>true</c> if content
             caching is enabled for the load balancer; otherwise, <c>false</c>.
             </returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
             <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
             <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/ContentCaching-d1e3358.html">Content Caching (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.SetContentCachingAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Boolean,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
             <summary>
             Enables or disables content caching for a load balancer.
             </summary>
             <remarks>
             When content caching is enabled, recently-accessed files are stored on the load balancer
             for easy retrieval by web clients. Content caching improves the performance of high
             traffic web sites by temporarily storing data that was recently accessed. While it's
             cached, requests for that data will be served by the load balancer, which in turn reduces
             load off the back end nodes. The result is improved response times for those requests and
             less load on the web server.
            
             <para>
             For more information about content caching, refer to the following Knowledge Center
             article:
             <see href="http://www.rackspace.com/knowledge_center/content/content-caching-cloud-load-balancers">Content Caching for Cloud Load Balancers</see>.
             </para>
             </remarks>
             <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
             <param name="enabled"><c>true</c> to enable content caching on the load balancer; otherwise, <c>false</c>.</param>
             <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
             <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
             <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
             <returns>
             A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. If <paramref name="completionOption"/> is
             <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the task will not be considered complete until
             the load balancer transitions out of the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingUpdate"/> state.
             </returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
             <exception cref="T:System.ArgumentException">
             If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.
             </exception>
             <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
             <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/ContentCaching-d1e3358.html">Content Caching (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.ListProtocolsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a collection of supported load balancing protocols.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a
            a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingProtocol"/> objects describing the load balancing
            protocols supported by this service.
            </returns>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Load_Balancing_Protocols-d1e4269.html">List Load Balancing Protocols (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.ListAlgorithmsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a collection of supported load balancing algorithms.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a
            a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingAlgorithm"/> objects describing the load balancing
            algorithms supported by this service.
            </returns>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Load_Balancing_Algorithms-d1e4459.html">List Load Balancing Algorithms (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.GetSslConfigurationAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)">
            <summary>
            Gets the SSL termination configuration for a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a
            <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration"/> object describing the SSL termination
            configuration for the load balancer.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/SSLTermination-d1e2479.html#d6e3823">SSL Termination (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.UpdateSslConfigurationAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Update the SSL termination configuration for a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="configuration">The updated SSL termination configuration.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. If <paramref name="completionOption"/> is
            <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the task will not be considered complete until
            the load balancer transitions out of the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingUpdate"/> state.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="configuration"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/SSLTermination-d1e2479.html#d6e3823">SSL Termination (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.RemoveSslConfigurationAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Update the SSL termination configuration for a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. If <paramref name="completionOption"/> is
            <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the task will not be considered complete until
            the load balancer transitions out of the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingUpdate"/> state.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/SSLTermination-d1e2479.html#d6e3823">SSL Termination (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.ListLoadBalancerMetadataAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)">
            <summary>
            Gets the metadata associated with a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a
            a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem"/> objects describing the metadata
            associated with a load balancer.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Metadata-d1e2218.html">List Metadata (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.GetLoadBalancerMetadataItemAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.MetadataId,System.Threading.CancellationToken)">
            <summary>
            Gets a specific metadata item associated with a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="metadataId">The metadata item ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem.Id">LoadBalancerMetadataItem.Id</see>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a
            a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem"/> object describing the metadata item.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="metadataId"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Metadata-d1e2218.html">List Metadata (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.ListNodeMetadataAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId,System.Threading.CancellationToken)">
            <summary>
            Gets the metadata associated with a load balancer node.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="nodeId">The load balancer node ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node.Id">Node.Id</see>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a
            a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem"/> objects describing the metadata
            associated with the load balancer node.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="nodeId"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Metadata-d1e2218.html">List Metadata (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.GetNodeMetadataItemAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.MetadataId,System.Threading.CancellationToken)">
            <summary>
            Gets a specific metadata item associated with a load balancer node.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="nodeId">The load balancer node ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node.Id">Node.Id</see>.</param>
            <param name="metadataId">The metadata item ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem.Id">LoadBalancerMetadataItem.Id</see>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a
            a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem"/> object describing the metadata item.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="nodeId"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="metadataId"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Metadata-d1e2218.html">List Metadata (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.AddLoadBalancerMetadataAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the metadata associated with a load balancer.
            </summary>
            <remarks>
            <note type="warning">
            The behavior is unspecified if <paramref name="metadata"/> contains a pair whose key matches the name of an existing metadata item associated with the load balancer.
            </note>
            </remarks>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="metadata">A collection of metadata items to associate with the load balancer.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a
            a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem"/> objects describing the updated
            metadata associated with the load balancer.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="metadata"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="metadata"/> contains a pair whose <see cref="P:System.Collections.Generic.KeyValuePair`2.Key"/> is <c>null</c> or empty, or whose <see cref="P:System.Collections.Generic.KeyValuePair`2.Value"/> is is <c>null</c>.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Add_Metadata-d1e2379.html">Add Metadata (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.AddNodeMetadataAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the metadata associated with a load balancer node.
            </summary>
            <remarks>
            <note type="warning">
            The behavior is unspecified if <paramref name="metadata"/> contains a pair whose key matches the name of an existing metadata item associated with the node.
            </note>
            </remarks>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="nodeId">The load balancer node ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node.Id">Node.Id</see>.</param>
            <param name="metadata">A collection of metadata items to associate with the node.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a
            a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem"/> objects describing the updated
            metadata associated with the load balancer node.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="nodeId"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="metadata"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="metadata"/> contains a pair whose <see cref="P:System.Collections.Generic.KeyValuePair`2.Key"/> is <c>null</c> or empty, or whose <see cref="P:System.Collections.Generic.KeyValuePair`2.Value"/> is is <c>null</c>.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Add_Metadata-d1e2379.html">Add Metadata (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.UpdateLoadBalancerMetadataItemAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.MetadataId,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the value for a metadata item associated with a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="metadataId">The metadata item ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem.Id">LoadBalancerMetadataItem.Id</see>.</param>
            <param name="value">The new value for the metadata item.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="metadataId"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="value"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Modify_Metadata-d1e2503.html">Modify Metadata (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.UpdateNodeMetadataItemAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.MetadataId,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the value for a metadata item associated with a load balancer node.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="nodeId">The load balancer node ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node.Id">Node.Id</see>.</param>
            <param name="metadataId">The metadata item ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem.Id">LoadBalancerMetadataItem.Id</see>.</param>
            <param name="value">The new value for the metadata item.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="nodeId"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="metadataId"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="value"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Modify_Metadata-d1e2503.html">Modify Metadata (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.RemoveLoadBalancerMetadataItemAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.MetadataId},System.Threading.CancellationToken)">
            <summary>
            Removes one or more metadata items associated with a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="metadataIds">The metadata item IDs. These are obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem.Id">LoadBalancerMetadataItem.Id</see>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="metadataIds"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="metadataIds"/> contains any <c>null</c> values.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Remove_Metadata-d1e2675.html">Remove Metadata (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.ILoadBalancerService.RemoveNodeMetadataItemAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.MetadataId},System.Threading.CancellationToken)">
            <summary>
            Removes one or more metadata items associated with a load balancer node.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="nodeId">The load balancer node ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node.Id">Node.Id</see>.</param>
            <param name="metadataIds">The metadata item IDs. These are obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem.Id">LoadBalancerMetadataItem.Id</see>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="nodeId"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="metadataIds"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="metadataIds"/> contains any <c>null</c> values.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Remove_Metadata-d1e2675.html">Remove Metadata (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider._baseUri">
            <summary>
            This field caches the base URI used for accessing the Cloud Load Balancers service.
            </summary>
            <seealso cref="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.GetBaseUriAsync(System.Threading.CancellationToken)"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.#ctor(net.openstack.Core.Domain.CloudIdentity,System.String,net.openstack.Core.Providers.IIdentityProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider"/> class with
            the specified values.
            </summary>
            <param name="defaultIdentity">The default identity to use for calls that do not explicitly specify an identity. If this value is <c>null</c>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="defaultRegion">The default region to use for calls that do not explicitly specify a region. If this value is <c>null</c>, the default region for the user will be used; otherwise if the service uses region-specific endpoints all calls must specify an explicit region.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <c>null</c>, a new instance of <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> is created using <paramref name="defaultIdentity"/> as the default identity.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.#ctor(net.openstack.Core.Domain.CloudIdentity,System.String,net.openstack.Core.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService,net.openstack.Core.Validators.IHttpResponseCodeValidator)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider"/> class with
            the specified values.
            </summary>
            <param name="defaultIdentity">The default identity to use for calls that do not explicitly specify an identity. If this value is <c>null</c>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="defaultRegion">The default region to use for calls that do not explicitly specify a region. If this value is <c>null</c>, the default region for the user will be used; otherwise if the service uses region-specific endpoints all calls must specify an explicit region.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <c>null</c>, a new instance of <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> is created using <paramref name="defaultIdentity"/> as the default identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing synchronous REST requests. If this value is <c>null</c>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
            <param name="httpStatusCodeValidator">The HTTP status code validator to use for synchronous REST requests. If this value is <c>null</c>, the provider will use <see cref="P:net.openstack.Providers.Rackspace.Validators.HttpResponseCodeValidator.Default"/>.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.ListLoadBalancersAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.GetLoadBalancerAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.CreateLoadBalancerAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.UpdateLoadBalancerAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUpdate,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.RemoveLoadBalancerAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.RemoveLoadBalancerRangeAsync(System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer[]})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.RemoveLoadBalancerRangeAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId[],net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer[]})">
            <summary>
            Removes one or more load balancers.
            </summary>
            <param name="loadBalancerIds">The IDs of load balancers to remove. These is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. If
            <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>,
            the task will not be considered complete until all of the load balancers
            transition out of the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingDelete"/> state.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerIds"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="loadBalancerIds"/> contains any <c>null</c> values.
            <para>-or-</para>
            <para>If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Remove_Load_Balancer-d1e2093.html">Remove Load Balancer (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.GetErrorPageAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.SetErrorPageAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.String,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.RemoveErrorPageAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.GetStatisticsAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.ListNodesAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.GetNodeAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.AddNodeAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.AddNodeRangeAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.AddNodeRangeAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration[],net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Add one or more nodes to a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="nodeConfigurations">A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration"/> objects describing the load balancer nodes to add.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a collection of
            <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node"/> objects describing the new load balancer nodes.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="nodeConfigurations"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="nodeConfigurations"/> contains any <c>null</c> values.
            <para>-or-</para>
            <para>If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Add_Nodes-d1e2379.html">Add Nodes (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.UpdateNodeAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeUpdate,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.RemoveNodeAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.RemoveNodeRangeAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.RemoveNodeRangeAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId[],net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Remove one or more nodes from a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="nodeIds">The load balancer node IDs of nodes to remove. These are obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node.Id">Node.Id</see>.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="nodeIds"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="nodeIds"/> contains any <c>null</c> values.
            <para>-or-</para>
            <para>If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Remove_Nodes-d1e2675.html">Remove Nodes (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.ListNodeServiceEventsAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventId,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.ListVirtualAddressesAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.AddVirtualAddressAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddressType,System.Net.Sockets.AddressFamily,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.RemoveVirtualAddressAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.VirtualAddressId,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.RemoveVirtualAddressRangeAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.VirtualAddressId},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.RemoveVirtualAddressRangeAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.VirtualAddressId[],net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Remove a collection of virtual addresses associated with a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="virtualAddressIds">The virtual address IDs. These are obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress.Id">LoadBalancerVirtualAddress.Id</see>.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. If <paramref name="completionOption"/> is
            <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>, the task will not be considered complete until
            the load balancer transitions out of the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingUpdate"/> state.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="virtualAddressIds"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="virtualAddressIds"/> contains any <c>null</c> values.
            <para>-or-</para>
            <para>If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Remove_Virtual_IP-d1e2919.html">Remove Virtual IP (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.ListAllowedDomainsAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.ListBillableLoadBalancersAsync(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.ListAccountLevelUsageAsync(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.ListHistoricalUsageAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.ListCurrentUsageAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.ListAccessListAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.CreateAccessListAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.CreateAccessListAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.CreateAccessListAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem[],net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Add a collection of network items to the access list for a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="networkItems">A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem"/> objects describing the network items to add to the load balancer's access list.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a collection of
            <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem"/> objects describing the network items added to the access list
            for the load balancer.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="networkItems"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="networkItems"/> contains any <c>null</c> values.
            <para>-or-</para>
            <para>If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Manage_Access_Lists-d1e3187.html">Manage Access Lists (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.RemoveAccessListAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItemId,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.RemoveAccessListRangeAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItemId},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.RemoveAccessListRangeAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItemId[],net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Remove a collection of network items from the access list of a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="networkItemIds">The network item IDs. These are obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem.Id"/>.</param>
            <param name="completionOption">Specifies when the <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous server operation should be considered complete.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications, if <paramref name="completionOption"/> is <see cref="F:net.openstack.Core.AsyncCompletionOption.RequestCompleted"/>. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="networkItemIds"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="networkItemIds"/> contains any <c>null</c> values.
            <para>-or-</para>
            <para>If <paramref name="completionOption"/> is not a valid <see cref="T:net.openstack.Core.AsyncCompletionOption"/>.</para>
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Manage_Access_Lists-d1e3187.html">Manage Access Lists (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.ClearAccessListAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.GetHealthMonitorAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.SetHealthMonitorAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.RemoveHealthMonitorAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.GetSessionPersistenceAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.SetSessionPersistenceAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistence,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.RemoveSessionPersistenceAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.GetConnectionLoggingAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.SetConnectionLoggingAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Boolean,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.ListThrottlesAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.UpdateThrottlesAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.RemoveThrottlesAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.GetContentCachingAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.SetContentCachingAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Boolean,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.ListProtocolsAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.ListAlgorithmsAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.GetSslConfigurationAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.UpdateSslConfigurationAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.RemoveSslConfigurationAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.ListLoadBalancerMetadataAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.GetLoadBalancerMetadataItemAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.MetadataId,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.ListNodeMetadataAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.GetNodeMetadataItemAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.MetadataId,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.AddLoadBalancerMetadataAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.AddNodeMetadataAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.UpdateLoadBalancerMetadataItemAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.MetadataId,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.UpdateNodeMetadataItemAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.MetadataId,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.RemoveLoadBalancerMetadataItemAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.MetadataId},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.RemoveLoadBalancerMetadataItemAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.MetadataId[],System.Threading.CancellationToken)">
            <summary>
            Removes one or more metadata items associated with a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="metadataIds">The metadata item IDs. These are obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem.Id">LoadBalancerMetadataItem.Id</see>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="metadataIds"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="metadataIds"/> contains any <c>null</c> values.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Remove_Metadata-d1e2675.html">Remove Metadata (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.RemoveNodeMetadataItemAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.MetadataId},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.RemoveNodeMetadataItemAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.MetadataId[],System.Threading.CancellationToken)">
            <summary>
            Removes one or more metadata items associated with a load balancer node.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="nodeId">The load balancer node ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node.Id">Node.Id</see>.</param>
            <param name="metadataIds">The metadata item IDs. These are obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem.Id">LoadBalancerMetadataItem.Id</see>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="nodeId"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="metadataIds"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="metadataIds"/> contains any <c>null</c> values.
            </exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Remove_Metadata-d1e2675.html">Remove Metadata (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.WaitForLoadBalancerToLeaveStateAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Creates a <see cref="T:System.Threading.Tasks.Task"/> that will complete after a load balancer leaves a particular state.
            </summary>
            <remarks>
            The task is considered complete as soon as a call to <see cref="M:net.openstack.Providers.Rackspace.ILoadBalancerService.GetLoadBalancerAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)"/>
            indicates that the load balancer is not in the state specified by <paramref name="state"/>. The method
            does not perform any other checks related to the initial or final state of the load balancer.
            </remarks>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="state">A <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus"/> representing the state the load balancer should <em>not</em> be in at the end of the wait operation.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a
            <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer"/> object representing the load balancer. In addition, the load
            <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Status"/> property of the load balancer will <em>not</em> be
            equal to <paramref name="state"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="state"/> is <c>null</c>.</para>
            </exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.PollLoadBalancerStateAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})">
            <summary>
            Asynchronously poll the current state of a load balancer.
            </summary>
            <param name="loadBalancerId">The load balancer ID. This is obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When
            the task completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/>
            property will contain a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer"/> object containing the
            updated state information for the load balancer.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="loadBalancerId"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">If the REST request does not return successfully.</exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.WaitForLoadBalancersToLeaveStateAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId[],net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer[]})">
            <summary>
            Creates a <see cref="T:System.Threading.Tasks.Task"/> that will complete after a group of load balancers all leave a particular state.
            </summary>
            <remarks>
            The task is considered complete as soon as calls to <see cref="M:net.openstack.Providers.Rackspace.ILoadBalancerService.GetLoadBalancerAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)"/>
            indicates that none of the load balancers are in the state specified by <paramref name="state"/>. The method
            does not perform any other checks related to the initial or final state of the load balancers.
            </remarks>
            <param name="loadBalancerIds">The load balancer IDs. These are obtained from <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">LoadBalancer.Id</see>.</param>
            <param name="state">A <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus"/> representing the state the load balancers should <em>not</em> be in at the end of the wait operation.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="progress">An optional callback object to receive progress notifications. If this is <c>null</c>, no progress notifications are sent.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a
            collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer"/> objects representing the load balancers. In
            addition, the load <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Status"/> property of the load balancer will
            <em>not</em> be equal to <paramref name="state"/> for <em>any</em> of the load balancer
            instances.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="loadBalancerIds"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="state"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="loadBalancerIds"/> contains any <c>null</c> values.</exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.GetBaseUriAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
            <remarks>
            This method returns a cached base address if one is available. If no cached address is
            available, <see cref="M:net.openstack.Providers.Rackspace.ProviderBase`1.GetServiceEndpoint(net.openstack.Core.Domain.CloudIdentity,System.String,System.String,System.String)"/> is called to obtain
            an <see cref="T:net.openstack.Core.Domain.Endpoint"/> with the type <c>rax:load-balancer</c> and preferred type <c>cloudLoadBalancers</c>.
            </remarks>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.ArrayElementProgressWrapper`1">
            <summary>
            This class provides a wrapper implementation of <see cref="T:net.openstack.Core.IProgress`1"/> which
            wraps a single progress report values into a single-element array.
            </summary>
            <typeparam name="T">The type of progress update value.</typeparam>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.ArrayElementProgressWrapper`1._delegate">
            <summary>
            The delegate progress handler to dispatch progress reports to.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.ArrayElementProgressWrapper`1.#ctor(net.openstack.Core.IProgress{`0[]})">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.ArrayElementProgressWrapper`1"/> class
            that dispatches progress reports to the specified delegate. The reported progress
            values are wrapped in a single-element array.
            </summary>
            <param name="delegate">The delegate to dispatch progress reports to.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="delegate"/> is <c>null</c>.</exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudLoadBalancerProvider.ArrayElementProgressWrapper`1.Report(`0)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.CloudQueuesProvider">
            <summary>
            Provides an implementation of <see cref="T:net.openstack.Core.Providers.IQueueingService"/> for operating
            with Rackspace's Cloud Queues product.
            </summary>
            <seealso href="https://wiki.openstack.org/w/index.php?title=Marconi/specs/api/v1">OpenStack Marconi API v1 Blueprint</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudQueuesProvider._internalUrl">
            <summary>
            Specifies whether the <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/> or <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>
            should be used for accessing the Cloud Queues API.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudQueuesProvider._clientId">
            <summary>
            The value of the Client-Id header to send with message requests from this service.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudQueuesProvider._baseUri">
            <summary>
            This field caches the base URI used for accessing the Cloud Queues service.
            </summary>
            <seealso cref="M:net.openstack.Providers.Rackspace.CloudQueuesProvider.GetBaseUriAsync(System.Threading.CancellationToken)"/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudQueuesProvider._homeDocument">
            <summary>
            This field caches the home document returned by <see cref="M:net.openstack.Providers.Rackspace.CloudQueuesProvider.GetHomeAsync(System.Threading.CancellationToken)"/>.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudQueuesProvider.#ctor(net.openstack.Core.Domain.CloudIdentity,System.String,System.Guid,System.Boolean,net.openstack.Core.Providers.IIdentityProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudQueuesProvider"/> class with
            the specified values.
            </summary>
            <param name="defaultIdentity">The default identity to use for calls that do not explicitly specify an identity. If this value is <c>null</c>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="defaultRegion">The default region to use for calls that do not explicitly specify a region. If this value is <c>null</c>, the default region for the user will be used; otherwise if the service uses region-specific endpoints all calls must specify an explicit region.</param>
            <param name="clientId">The value of the <strong>Client-Id</strong> header to send with message requests from this service.</param>
            <param name="internalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <c>null</c>, a new instance of <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> is created using <paramref name="defaultIdentity"/> as the default identity.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudQueuesProvider.#ctor(net.openstack.Core.Domain.CloudIdentity,System.String,System.Guid,System.Boolean,net.openstack.Core.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService,net.openstack.Core.Validators.IHttpResponseCodeValidator)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudQueuesProvider"/> class with
            the specified values.
            </summary>
            <param name="defaultIdentity">The default identity to use for calls that do not explicitly specify an identity. If this value is <c>null</c>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="defaultRegion">The default region to use for calls that do not explicitly specify a region. If this value is <c>null</c>, the default region for the user will be used; otherwise if the service uses region-specific endpoints all calls must specify an explicit region.</param>
            <param name="clientId">The value of the <strong>Client-Id</strong> header to send with message requests from this service.</param>
            <param name="internalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <c>null</c>, a new instance of <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> is created using <paramref name="defaultIdentity"/> as the default identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing synchronous REST requests. If this value is <c>null</c>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
            <param name="httpStatusCodeValidator">The HTTP status code validator to use for synchronous REST requests. If this value is <c>null</c>, the provider will use <see cref="P:net.openstack.Providers.Rackspace.Validators.HttpResponseCodeValidator.Default"/>.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudQueuesProvider.GetHomeAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudQueuesProvider.GetNodeHealthAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudQueuesProvider.CreateQueueAsync(net.openstack.Core.Domain.Queues.QueueName,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudQueuesProvider.ListQueuesAsync(net.openstack.Core.Domain.Queues.QueueName,System.Nullable{System.Int32},System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudQueuesProvider.QueueExistsAsync(net.openstack.Core.Domain.Queues.QueueName,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudQueuesProvider.DeleteQueueAsync(net.openstack.Core.Domain.Queues.QueueName,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudQueuesProvider.SetQueueMetadataAsync``1(net.openstack.Core.Domain.Queues.QueueName,``0,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudQueuesProvider.GetQueueMetadataAsync(net.openstack.Core.Domain.Queues.QueueName,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudQueuesProvider.GetQueueMetadataAsync``1(net.openstack.Core.Domain.Queues.QueueName,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudQueuesProvider.GetQueueStatisticsAsync(net.openstack.Core.Domain.Queues.QueueName,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudQueuesProvider.ListMessagesAsync(net.openstack.Core.Domain.Queues.QueueName,net.openstack.Core.Domain.Queues.QueuedMessageList,System.Nullable{System.Int32},System.Boolean,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudQueuesProvider.GetMessageAsync(net.openstack.Core.Domain.Queues.QueueName,net.openstack.Core.Domain.Queues.MessageId,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudQueuesProvider.GetMessagesAsync(net.openstack.Core.Domain.Queues.QueueName,System.Collections.Generic.IEnumerable{net.openstack.Core.Domain.Queues.MessageId},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudQueuesProvider.PostMessagesAsync(net.openstack.Core.Domain.Queues.QueueName,System.Collections.Generic.IEnumerable{net.openstack.Core.Domain.Queues.Message},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudQueuesProvider.PostMessagesAsync(net.openstack.Core.Domain.Queues.QueueName,System.Threading.CancellationToken,net.openstack.Core.Domain.Queues.Message[])">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudQueuesProvider.PostMessagesAsync``1(net.openstack.Core.Domain.Queues.QueueName,System.Collections.Generic.IEnumerable{net.openstack.Core.Domain.Queues.Message{``0}},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudQueuesProvider.PostMessagesAsync``1(net.openstack.Core.Domain.Queues.QueueName,System.Threading.CancellationToken,net.openstack.Core.Domain.Queues.Message{``0}[])">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudQueuesProvider.DeleteMessageAsync(net.openstack.Core.Domain.Queues.QueueName,net.openstack.Core.Domain.Queues.MessageId,net.openstack.Core.Domain.Queues.Claim,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudQueuesProvider.DeleteMessagesAsync(net.openstack.Core.Domain.Queues.QueueName,System.Collections.Generic.IEnumerable{net.openstack.Core.Domain.Queues.MessageId},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudQueuesProvider.ClaimMessageAsync(net.openstack.Core.Domain.Queues.QueueName,System.Nullable{System.Int32},System.TimeSpan,System.TimeSpan,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudQueuesProvider.QueryClaimAsync(net.openstack.Core.Domain.Queues.QueueName,net.openstack.Core.Domain.Queues.Claim,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudQueuesProvider.UpdateClaimAsync(net.openstack.Core.Domain.Queues.QueueName,net.openstack.Core.Domain.Queues.Claim,System.TimeSpan,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudQueuesProvider.ReleaseClaimAsync(net.openstack.Core.Domain.Queues.QueueName,net.openstack.Core.Domain.Queues.Claim,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudQueuesProvider.GetBaseUriAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
            <remarks>
            This method returns a cached base address if one is available. If no cached address is
            available, <see cref="M:net.openstack.Providers.Rackspace.ProviderBase`1.GetServiceEndpoint(net.openstack.Core.Domain.CloudIdentity,System.String,System.String,System.String)"/> is called to obtain
            an <see cref="T:net.openstack.Core.Domain.Endpoint"/> with the type <c>rax:queues</c> and preferred type <c>cloudQueues</c>.
            </remarks>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudQueuesProvider.PrepareRequestImpl(JSIStudios.SimpleRESTServices.Client.HttpMethod,net.openstack.Core.Domain.IdentityToken,System.UriTemplate,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Func{System.Uri,System.Uri})">
            <inheritdoc/>
            <remarks>
            This method calls <see cref="M:net.openstack.Providers.Rackspace.ProviderBase`1.PrepareRequestImpl(JSIStudios.SimpleRESTServices.Client.HttpMethod,net.openstack.Core.Domain.IdentityToken,System.UriTemplate,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Func{System.Uri,System.Uri})"/> to create the
            initial <see cref="T:System.Net.HttpWebRequest"/>, and then sets the <c>Client-Id</c> header according
            to the Marconi (Cloud Queues) specification before returning.
            </remarks>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Exceptions.BulkDeletionException">
            <summary>
            Represents errors which occur during a bulk delete operation.
            </summary>
            <seealso cref="M:net.openstack.Providers.Rackspace.CloudFilesProvider.BulkDelete(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)"/>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Exceptions.BulkDeletionException.#ctor(System.String,net.openstack.Providers.Rackspace.Objects.BulkDeletionResults)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Exceptions.BulkDeletionException"/> class
            with the specified status and results.
            </summary>
            <param name="status">A description of the status of the operation.</param>
            <param name="results">The results of the bulk delete operation.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="status"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="results"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="status"/> is empty.
            </exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Exceptions.BulkDeletionException.Results">
            <summary>
            Gets the detailed results of the bulk delete operation.
            </summary>
        </member>
        <member name="T:net.openstack.Core.HttpStatusCodeParser">
            <summary>
            A status parser for HTTP status codes.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="T:net.openstack.Core.IStatusParser">
            <summary>
            Represents an object which can convert a string to a <see cref="T:net.openstack.Core.Domain.Status"/> object
            containing a status code and a textual representation of that status.
            </summary>
        </member>
        <member name="M:net.openstack.Core.IStatusParser.TryParse(System.String,net.openstack.Core.Domain.Status@)">
            <summary>
            Converts a string to an equivalent <see cref="T:net.openstack.Core.Domain.Status"/> object. A return value indicates whether the operation succeeded.
            </summary>
            <param name="value">A string containing a status to convert.</param>
            <param name="status">When this method returns, contains a <see cref="T:net.openstack.Core.Domain.Status"/> instance
            equivalent to <paramref name="value"/>, if the conversion succeeded, or <c>null</c> if
            the conversion failed. The conversion fails if the <paramref name="value"/> parameter is
            <c>null</c> or is not of the correct format.
            </param>
            <returns><c>true</c> if <paramref name="value"/> was converted successfully; otherwise, <c>false</c>.</returns>
        </member>
        <member name="F:net.openstack.Core.HttpStatusCodeParser.DefaultPattern">
            <summary>
            The default regular expression to use for matching HTTP status codes.
            </summary>
        </member>
        <member name="F:net.openstack.Core.HttpStatusCodeParser._default">
            <summary>
            A singleton instance of the default <see cref="T:net.openstack.Core.HttpStatusCodeParser"/>.
            </summary>
        </member>
        <member name="F:net.openstack.Core.HttpStatusCodeParser._expression">
            <summary>
            The compiled regular expression to use for matching HTTP status codes.
            </summary>
        </member>
        <member name="M:net.openstack.Core.HttpStatusCodeParser.#ctor">
            <summary>
            Constructs a new instance of <see cref="T:net.openstack.Core.HttpStatusCodeParser"/> for the default regular
            expression.
            </summary>
        </member>
        <member name="M:net.openstack.Core.HttpStatusCodeParser.#ctor(System.String)">
             <summary>
             Constructs a new instance of <see cref="T:net.openstack.Core.HttpStatusCodeParser"/> for the specified regular
             expression.
             </summary>
             <param name="pattern">
             The regular expression pattern to use.
            
             <para><paramref name="pattern"/> should contain the named capturing grounds <c>StatusCode</c> and <c>status</c>.</para>
             </param>
             <exception cref="T:System.ArgumentNullException"><paramref name="pattern"/> is <c>null</c>.</exception>
             <exception cref="T:System.ArgumentException">
             <paramref name="pattern"/> does not contain a capturing group named <c>StatusCode</c>.
             <para>-or-</para>
             <para><paramref name="pattern"/> does not contain a capturing group named <c>Status</c>.</para>
             </exception>
        </member>
        <member name="M:net.openstack.Core.HttpStatusCodeParser.TryParse(System.String,net.openstack.Core.Domain.Status@)">
            <inheritdoc/>
        </member>
        <member name="P:net.openstack.Core.HttpStatusCodeParser.Default">
            <summary>
            Gets a default <see cref="T:net.openstack.Core.HttpStatusCodeParser"/>.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Providers.IBlockStorageProvider">
            <summary>
            Represents a provider for the OpenStack Block Storage Service.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/">OpenStack Block Storage Service API v2 Reference</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IBlockStorageProvider.CreateVolume(System.Int32,System.String,System.String,System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Creates a new block storage volume.
            </summary>
            <param name="size">The size of the volume in GB.</param>
            <param name="displayDescription">A description of the volume.</param>
            <param name="displayName">The name of the volume.</param>
            <param name="snapshotId">The snapshot from which to create a volume. The value should be <c>null</c> or obtained from <see cref="P:net.openstack.Core.Domain.Snapshot.Id">Snapshot.Id</see>.</param>
            <param name="volumeType">The type of volume to create. If not defined, then the default is used. The value should be <c>null</c> or obtained from <see cref="P:net.openstack.Core.Domain.VolumeType.Id">VolumeType.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><c>true</c> if the request succeeded; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="size"/> is less than zero.</exception>
            <exception cref="T:net.openstack.Providers.Rackspace.Exceptions.InvalidVolumeSizeException">If <paramref name="size"/> is not valid for this provider.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>If the specified <paramref name="volumeType"/> is not supported.</para>
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Create_Volume.html">Create Volume (OpenStack Block Storage Service API Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IBlockStorageProvider.ListVolumes(System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Gets a list of volumes.
            </summary>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:net.openstack.Core.Domain.Volume"/> objects describing the volumes.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/List_Summary_Volumes.html">List Volume Summaries (OpenStack Block Storage Service API Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IBlockStorageProvider.ShowVolume(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            View information about a single volume.
            </summary>
            <param name="volumeId">The ID of the volume. The value should be obtained from <see cref="P:net.openstack.Core.Domain.Volume.Id">Volume.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.Volume"/> object containing the volume details.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="volumeId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="volumeId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Show_Volume.html">Show Volume (OpenStack Block Storage Service API Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IBlockStorageProvider.DeleteVolume(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
             <summary>
             Deletes a volume.
             </summary>
             <remarks>
             The deletion operation is performed asynchronously. After this call returns,
             <see cref="M:net.openstack.Core.Providers.IBlockStorageProvider.WaitForVolumeDeleted(System.String,System.Int32,System.Nullable{System.TimeSpan},System.String,net.openstack.Core.Domain.CloudIdentity)"/> may be called to wait until the volume
             is finally deleted.
            
             <note type="note">
             It is not currently possible to delete a volume once you have created a snapshot from it. Any snapshots will need to be deleted prior to deleting the volume.
             </note>
             </remarks>
             <param name="volumeId">The ID of the volume to delete. The value should be obtained from <see cref="P:net.openstack.Core.Domain.Volume.Id">Volume.Id</see>.</param>
             <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <returns><c>true</c> if the volume was successfully deleted; otherwise <c>false</c>.</returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="volumeId"/> is <c>null</c>.</exception>
             <exception cref="T:System.ArgumentException">If <paramref name="volumeId"/> is empty.</exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="region"/> is not supported.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
             <para>-or-</para>
             <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Delete_Volume.html">Delete Volume (OpenStack Block Storage Service API Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IBlockStorageProvider.ListVolumeTypes(System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Get a list of volume types.
            </summary>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:net.openstack.Core.Domain.VolumeType"/> objects containing the details of each volume type.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Volume_List_Types.html">List Volume Types (OpenStack Block Storage Service API Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IBlockStorageProvider.DescribeVolumeType(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Get information about a volume type.
            </summary>
            <param name="volumeTypeId">The ID of the volume type. The value should be obtained from <see cref="P:net.openstack.Core.Domain.VolumeType.Id">VolumeType.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.VolumeType"/> object containing the details of the volume type.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Volume_Show_Type.html">Show Volume Type (OpenStack Block Storage Service API Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IBlockStorageProvider.WaitForVolumeAvailable(System.String,System.Int32,System.Nullable{System.TimeSpan},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Waits for a volume to be set to <see cref="P:net.openstack.Core.Domain.VolumeState.Available"/> status.
            </summary>
            <remarks>
            This method can be used to ensure that a volume is correctly created prior to executing additional requests against it.
            </remarks>
            <param name="volumeId">The ID of the volume to poll. The value should be obtained from <see cref="P:net.openstack.Core.Domain.Volume.Id">Volume.Id</see>.</param>
            <param name="refreshCount">The number of times to poll for the volume to become available.</param>
            <param name="refreshDelay">The refresh delay. If the value is <c>null</c>, the default value is 2.4 seconds.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.Volume"/> object containing the details of the volume, including the final <see cref="P:net.openstack.Core.Domain.Volume.Status"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="volumeId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="volumeId"/> is empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Core.Providers.IBlockStorageProvider.WaitForVolumeDeleted(System.String,System.Int32,System.Nullable{System.TimeSpan},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Waits for a volume to be deleted.
            </summary>
            <remarks>
            This method can be used to ensure that a volume is completely removed.
            </remarks>
            <param name="volumeId">The ID of the volume to poll. The value should be obtained from <see cref="P:net.openstack.Core.Domain.Volume.Id">Volume.Id</see>.</param>
            <param name="refreshCount">The number of times to poll for the volume to be deleted.</param>
            <param name="refreshDelay">The refresh delay. If the value is <c>null</c>, the default value is 10 seconds.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><c>true</c> if the volume was successfully deleted; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="volumeId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="volumeId"/> is empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Core.Providers.IBlockStorageProvider.WaitForVolumeState(System.String,net.openstack.Core.Domain.VolumeState,net.openstack.Core.Domain.VolumeState[],System.Int32,System.Nullable{System.TimeSpan},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Waits for a volume to be set to be set to a particular <see cref="T:net.openstack.Core.Domain.VolumeState"/>.
            </summary>
            <remarks>
            This method can be used to ensure that a volume is in an intended state prior to
            executing additional requests against it.
            </remarks>
            <param name="volumeId">The ID of the volume to poll. The value should be obtained from <see cref="P:net.openstack.Core.Domain.Volume.Id">Volume.Id</see>.</param>
            <param name="expectedState">The expected state for the volume.</param>
            <param name="errorStates">The error state(s) in which to stop polling once reached.</param>
            <param name="refreshCount">The number of times to poll the volume.</param>
            <param name="refreshDelay">The refresh delay. If the value is <c>null</c>, the default value is 10 seconds.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.Volume"/> object containing the details of the volume, including the final <see cref="P:net.openstack.Core.Domain.Volume.Status"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="volumeId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="expectedState"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="errorStates"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="volumeId"/> is empty.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.VolumeEnteredErrorStateException">If the method returned due to the volume entering one of the <paramref name="errorStates"/>.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/cbs/api/v1.0/cbs-devguide/content/volume_status.html">Volume Status (Rackspace Cloud Block Storage Developer Guide - API V1.0)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IBlockStorageProvider.CreateSnapshot(System.String,System.Boolean,System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
             <summary>
             Creates a new snapshot.
             </summary>
             <remarks>
             The snapshot operation is performed asynchronously. After this call returns,
             <see cref="M:net.openstack.Core.Providers.IBlockStorageProvider.WaitForSnapshotAvailable(System.String,System.Int32,System.Nullable{System.TimeSpan},System.String,net.openstack.Core.Domain.CloudIdentity)"/> may be called to wait until the snapshot
             process is complete and the snapshot is available.
            
             <para>Creating a snapshot makes a point-in-time copy of the volume.
             All writes to the volume should be flushed before creating the snapshot, either by un-mounting any file systems on the volume, or by detaching the volume before creating the snapshot.
             Snapshots are incremental, so each time you create a new snapshot, you are appending the incremental changes for the new snapshot to the previous one.
             The previous snapshot is still available. Note that you can create a new volume from the snapshot if desired.</para>
             </remarks>
             <param name="volumeId">The ID of the volume to snapshot. The value should be obtained from <see cref="P:net.openstack.Core.Domain.Volume.Id">Volume.Id</see>.</param>
             <param name="force">If <c>true</c>, the snapshot is created even if the volume is currently attached.</param>
             <param name="displayName">Name of the snapshot.</param>
             <param name="displayDescription">Description of snapshot.</param>
             <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <returns>A <see cref="T:net.openstack.Core.Domain.Snapshot"/> object containing the details about the snapshot.</returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="volumeId"/> is <c>null</c>.</exception>
             <exception cref="T:System.ArgumentException">If <paramref name="volumeId"/> is empty.</exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="region"/> is not supported.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
             <para>-or-</para>
             <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Create_Snapshot.html">Create Snapshot (OpenStack Block Storage Service API Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IBlockStorageProvider.ListSnapshots(System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Get a list of snapshots.
            </summary>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:net.openstack.Core.Domain.Snapshot"/> objects containing the details of each snapshot.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/List_Snapshots.html">List Snapshot Summaries (OpenStack Block Storage Service API Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IBlockStorageProvider.ShowSnapshot(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            View all information about a single snapshot.
            </summary>
            <param name="snapshotId">The ID of the snapshot. The value should be obtained from <see cref="P:net.openstack.Core.Domain.Snapshot.Id">Snapshot.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.Snapshot"/> object containing the snapshot details.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="snapshotId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="snapshotId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Show_Snapshot.html">Show Snapshot (OpenStack Block Storage Service API Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IBlockStorageProvider.DeleteSnapshot(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Marks a snapshot for deletion.
            </summary>
            <remarks>
            The deletion operation is performed asynchronously. After this call returns,
            <see cref="M:net.openstack.Core.Providers.IBlockStorageProvider.WaitForSnapshotDeleted(System.String,System.Int32,System.Nullable{System.TimeSpan},System.String,net.openstack.Core.Domain.CloudIdentity)"/> may be called to wait until the snapshot
            is finally deleted.
            </remarks>
            <param name="snapshotId">The ID of the snapshot. The value should be obtained from <see cref="P:net.openstack.Core.Domain.Snapshot.Id">Snapshot.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><c>true</c> if the snapshot was successfully marked for deletion; otherwise <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="snapshotId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="snapshotId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Delete_Snapshot.html">Delete Snapshot (OpenStack Block Storage Service API Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IBlockStorageProvider.WaitForSnapshotAvailable(System.String,System.Int32,System.Nullable{System.TimeSpan},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Waits for a snapshot to be set to <see cref="P:net.openstack.Core.Domain.SnapshotState.Available"/> status.
            </summary>
            <remarks>
            This method can be used to ensure that a snapshot is correctly created prior to executing additional requests against it.
            </remarks>
            <param name="snapshotId">The ID of the snapshot to poll. The value should be obtained from <see cref="P:net.openstack.Core.Domain.Snapshot.Id">Snapshot.Id</see>.</param>
            <param name="refreshCount">The number of times to poll for the snapshot to become available.</param>
            <param name="refreshDelay">The refresh delay. If the value is <c>null</c>, the default value is 10 seconds.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.Snapshot"/> object containing the snapshot details, including the final <see cref="P:net.openstack.Core.Domain.Snapshot.Status"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="snapshotId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="snapshotId"/> is empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Core.Providers.IBlockStorageProvider.WaitForSnapshotDeleted(System.String,System.Int32,System.Nullable{System.TimeSpan},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Waits for a snapshot to be deleted.
            </summary>
            <remarks>
            This method can be used to ensure that a snapshot is completely removed.
            </remarks>
            <param name="snapshotId">The ID of the snapshot to poll. The value should be obtained from <see cref="P:net.openstack.Core.Domain.Snapshot.Id">Snapshot.Id</see>.</param>
            <param name="refreshCount">The number of times to poll for the snapshot to be deleted.</param>
            <param name="refreshDelay">The refresh delay. If the value is <c>null</c>, the default value is 10 seconds.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><c>true</c> if the snapshot was successfully deleted; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="snapshotId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="snapshotId"/> is empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Core.Providers.IBlockStorageProvider.WaitForSnapshotState(System.String,net.openstack.Core.Domain.SnapshotState,net.openstack.Core.Domain.SnapshotState[],System.Int32,System.Nullable{System.TimeSpan},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Waits for a snapshot to be set to be set to a particular status.
            </summary>
            <remarks>
            This method can be used to ensure that a snapshot is in an intended state prior to
            executing additional requests against it.
            </remarks>
            <param name="snapshotId">The ID of the snapshot to poll. The value should be obtained from <see cref="P:net.openstack.Core.Domain.Snapshot.Id">Snapshot.Id</see>.</param>
            <param name="expectedState">The expected state for the snapshot.</param>
            <param name="errorStates">The error state(s) in which to stop polling once reached.</param>
            <param name="refreshCount">The number of times to poll the snapshot.</param>
            <param name="refreshDelay">The refresh delay. If the value is <c>null</c>, the default value is 10 seconds.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.Snapshot"/> object containing the snapshot details, including the final <see cref="P:net.openstack.Core.Domain.Snapshot.Status"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="snapshotId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="expectedState"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="errorStates"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="snapshotId"/> is empty.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.SnapshotEnteredErrorStateException">If the method returned due to the snapshot entering one of the <paramref name="errorStates"/>.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="T:net.openstack.Core.Domain.Status">
            <summary>
            Represents the status of an operation with a status code and description
            of the status.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.Status.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.Status"/> class with the specified
            status code and description.
            </summary>
            <param name="code">The status code.</param>
            <param name="description">The description of the status.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="description"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="description"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Core.Domain.Status.Code">
            <summary>
            Gets the status code.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Status.Description">
            <summary>
            Gets the description of the status.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Validators.IBlockStorageValidator">
            <summary>
            Represents an object that validates arguments for an implementation of <see cref="T:net.openstack.Core.Providers.IBlockStorageProvider"/>
            prior to sending the calls to the underlying REST API.
            </summary>
        </member>
        <member name="M:net.openstack.Core.Validators.IBlockStorageValidator.ValidateVolumeSize(System.Int32)">
            <summary>
            Validates the <c>size</c> parameter when creating a new block storage volume
            with <see cref="M:net.openstack.Core.Providers.IBlockStorageProvider.CreateVolume(System.Int32,System.String,System.String,System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>.
            </summary>
            <param name="size">The volume size in GB.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="size"/> is less than 0.</exception>
            <exception cref="T:net.openstack.Providers.Rackspace.Exceptions.InvalidVolumeSizeException">If <paramref name="size"/> is not a valid volume size.</exception>
        </member>
        <member name="T:net.openstack.Core.Domain.ImageType">
            <summary>
            Represents an image type.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known image types,
            with added support for unknown types returned by a server extension.
            </remarks>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.ImageType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.ImageType"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Core.Domain.ImageType.FromName(System.String)">
            <summary>
            Gets the <see cref="T:net.openstack.Core.Domain.ImageType"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Core.Domain.ImageType.Base">
            <summary>
            Gets an <see cref="T:net.openstack.Core.Domain.ImageType"/> representing a base image.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.ImageType.Snapshot">
            <summary>
            Gets an <see cref="T:net.openstack.Core.Domain.ImageType"/> representing an image created as a snapshot.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.ImageType.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Core.Domain.ImageType"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.ImageType.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Core.Domain.Link">
            <summary>
            Represents a link associated with a resource.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/LinksReferences.html">Links and References (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Core.Domain.Link.Href">
            <summary>
            Gets the link target.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/LinksReferences.html">Links and References (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.Link.Rel">
            <summary>
            Gets the link relation.
            </summary>
            <remarks>
            <list type="bullet">
            <item>A <c>self</c> link contains a versioned link to the resource. Use these links when the link will be followed immediately.</item>
            <item>A <c>bookmark</c> link provides a permanent link to a resource that is appropriate for long-term storage.</item>
            <item>An <c>alternate</c> link can contain an alternative representation of the resource. For example, an OpenStack Compute image might have an alternate representation in the OpenStack Image service.</item>
            </list>
            </remarks>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/LinksReferences.html">Links and References (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="T:net.openstack.Core.Domain.Mapping.IJsonObjectMapper`1">
            <summary>
            Represents an object that can convert between generic <see cref="T:Newtonsoft.Json.Linq.JObject"/> instances
            and instances of another specific type.
            </summary>
            <typeparam name="T">The type which can be converted to and from <see cref="T:Newtonsoft.Json.Linq.JObject"/>.</typeparam>
        </member>
        <member name="T:net.openstack.Core.Domain.Mapping.IObjectMapper`2">
            <summary>
            Represents an object that can convert between instances of two specific types.
            </summary>
            <remarks>
            This interface is similar to a <see cref="T:System.ComponentModel.TypeConverter"/> which only supports
            conversions between exactly two concrete types.
            </remarks>
            <typeparam name="TFrom">The first type.</typeparam>
            <typeparam name="TTo">The second type.</typeparam>
        </member>
        <member name="M:net.openstack.Core.Domain.Mapping.IObjectMapper`2.Map(`0)">
            <summary>
            Converts an instance of <typeparamref name="TFrom"/> to an instance of <typeparamref name="TTo"/>.
            </summary>
            <remarks>
            This method provides behavior similar to a strongly-typed implementation
            of <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)"/>.
            </remarks>
            <param name="from">The instance to convert.</param>
            <returns>The converted instance.</returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed.</exception>
        </member>
        <member name="M:net.openstack.Core.Domain.Mapping.IObjectMapper`2.Map(`1)">
            <summary>
            Converts an instance of <typeparamref name="TTo"/> to an instance of <typeparamref name="TFrom"/>.
            </summary>
            <remarks>
            This method provides behavior similar to a strongly-typed implementation
            of <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)"/>.
            </remarks>
            <param name="to">The instance to convert.</param>
            <returns>The converted instance.</returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed.</exception>
        </member>
        <member name="M:net.openstack.Core.Domain.Mapping.IJsonObjectMapper`1.Map(System.String)">
            <summary>
            Converts a JSON string representation of <typeparamref name="T"/> to an instance
            of <typeparamref name="T"/>.
            </summary>
            <param name="rawJson">The JSON string representation.</param>
            <returns>An instance of <typeparamref name="T"/> represented by <paramref name="rawJson"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="rawJson"/> is <c>null</c>.</exception>
            <exception cref="T:System.NotSupportedException">If the conversion cannot be performed.</exception>
        </member>
        <member name="T:net.openstack.Core.Domain.NewUser">
            <summary>
            Represents the JSON result of an Add User operation.
            </summary>
            <seealso cref="M:net.openstack.Core.Providers.IIdentityProvider.AddUser(net.openstack.Core.Domain.NewUser,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_addUser_v2.0_users_.html">Add User (OpenStack Identity Service API v2.0 Reference)</seealso>
            <seealso href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/POST_addUser_v2.0_users_.html">Add User (Rackspace Cloud Identity Client Developer Guide - API v2.0)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.NewUser.#ctor(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.NewUser"/> class with the specified
            username, email address, password, and value indicating whether or not the user
            is initially enabled.
            </summary>
            <param name="username">The username of the new user (see <see cref="P:net.openstack.Core.Domain.NewUser.Username"/>).</param>
            <param name="email">The email address of the new user (see <see cref="P:net.openstack.Core.Domain.NewUser.Email"/>).</param>
            <param name="password">The password for the new user (see <see cref="P:net.openstack.Core.Domain.NewUser.Password"/>).</param>
            <param name="enabled"><c>true</c> if the user is initially enabled; otherwise, <c>false</c> (see <see cref="P:net.openstack.Core.Domain.NewUser.Enabled"/>).</param>
        </member>
        <member name="P:net.openstack.Core.Domain.NewUser.Password">
            <summary>
            Gets the generated password for the new user.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
            <value>The generated password for the new user, or <c>null</c> if the Add User request included a password.</value>
        </member>
        <member name="P:net.openstack.Core.Domain.NewUser.Id">
            <summary>
            Gets the ID for the new user.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.NewUser.Username">
            <summary>
            Gets the username of the new user.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.NewUser.Email">
            <summary>
            Gets the email address of the new user.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.NewUser.Enabled">
            <summary>
            Gets a value indicating whether or not the user is enabled.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.ObjectStore">
            <summary>
            Represents the result of various Object Storage operations.
            </summary>
            <seealso cref="T:net.openstack.Core.Providers.IObjectStorageProvider"/>
        </member>
        <member name="F:net.openstack.Core.Domain.ObjectStore.ContainerCreated">
            <summary>
            The container was created.
            </summary>
            <seealso cref="M:net.openstack.Core.Providers.IObjectStorageProvider.CreateContainer(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)"/>
        </member>
        <member name="F:net.openstack.Core.Domain.ObjectStore.ContainerExists">
            <summary>
            The container already exists.
            </summary>
            <seealso cref="M:net.openstack.Core.Providers.IObjectStorageProvider.CreateContainer(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)"/>
        </member>
        <member name="T:net.openstack.Core.Domain.Personality">
            <summary>
            Describes a file to inject into the file system while creating or
            rebuilding a server.
            </summary>
            <remarks>
            You can customize the personality of a server instance by injecting data into
            its file system. For example, you might want to insert SSH keys, set configuration
            files, or store data that you want to retrieve from inside the instance. This
            feature provides a minimal amount of launch-time personalization. If you require
            significant customization, create a custom image.
            </remarks>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Server_Personality-d1e2543.html">Server Personality (OpenStack Compute API V2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.Personality.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.Personality"/> class during
            JSON deserialization.
            </summary>
        </member>
        <member name="M:net.openstack.Core.Domain.Personality.#ctor(System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.Personality"/> class with the specified
            path and contents.
            </summary>
            <param name="path">The path of the file to create on the target file system.</param>
            <param name="content">The contents of the file to create on the target file system.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="path"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="content"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="path"/> is empty.</exception>
        </member>
        <member name="M:net.openstack.Core.Domain.Personality.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.Personality"/> class with the specified
            path and text content, using <see cref="P:System.Text.Encoding.UTF8"/> for the content encoding.
            </summary>
            <param name="path">The path of the text file to create on the target file system.</param>
            <param name="content">The contents of the text file to create on the target file system.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="path"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="content"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="path"/> is empty.</exception>
        </member>
        <member name="M:net.openstack.Core.Domain.Personality.#ctor(System.String,System.String,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.Personality"/> class with the specified
            path, text content, and context encoding.
            </summary>
            <param name="path">The path of the text file to create on the target file system.</param>
            <param name="content">The contents of the text file to create on the target file system.</param>
            <param name="encoding">The encoding to use for the text file.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="path"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="content"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="encoding"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="path"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Core.Domain.Personality.Path">
            <summary>
            The path of the file to create on the target file system.
            </summary>
            <remarks>
            The behavior of the related <see cref="T:net.openstack.Core.Providers.IComputeProvider"/> methods is undefined
            if the UTF-8 encoded value is longer than 255 bytes.
            </remarks>
        </member>
        <member name="P:net.openstack.Core.Domain.Personality.Content">
             <summary>
             The contents of the file to create on the target file system.
             </summary>
             <remarks>
             The maximum size of the file contents is determined by the compute provider
             and may vary based on the image that is used to create the server. The provider
             may provide a <c>maxPersonalitySize</c> absolute limit, which is a byte limit
             that is guaranteed to apply to all images in the deployment. Providers can set
             additional per-image personality limits.
            
             <note type="warning">
             The behavior of the related <see cref="T:net.openstack.Core.Providers.IComputeProvider"/> methods is undefined
             if the value is not a UTF-8 encoded text file.
             </note>
             </remarks>
        </member>
        <member name="T:net.openstack.Core.Domain.RebootType">
            <summary>
            Represents the type of a reboot operation.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known reboot types,
            with added support for unknown types returned by a server extension.
            </remarks>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.RebootType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.RebootType"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Core.Domain.RebootType.FromName(System.String)">
            <summary>
            Gets the <see cref="T:net.openstack.Core.Domain.RebootType"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Core.Domain.RebootType.Hard">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.RebootType"/> representing the equivalent of cycling power to the server.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.RebootType.Soft">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.RebootType"/> representing a reboot performed by signaling the server's
            operating system to restart, allowing for graceful shutdown of currently executing processes.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.RebootType.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Core.Domain.RebootType"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.RebootType.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Core.Domain.ServerAddresses">
            <summary>
            Represents a map of network labels to collections of IP addresses.
            </summary>
            <remarks>
            The keys of this collection are network labels (see <see cref="P:net.openstack.Core.Domain.CloudNetwork.Label"/>),
            and the values are collections of IP addresses.
            </remarks>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerAddresses.Private">
            <summary>
            Gets the server IP addresses associated with the <c>private</c> network.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerAddresses.Public">
            <summary>
            Gets the server IP addresses associated with the <c>public</c> network.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.ServerState">
            <summary>
            Represents the state of a compute server.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known server states,
            with added support for unknown states returned by a server extension.
            </remarks>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.ServerState.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.ServerState"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Core.Domain.ServerState.FromName(System.String)">
            <summary>
            Gets the <see cref="T:net.openstack.Core.Domain.ServerState"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerState.Active">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.ServerState"/> representing a server which is active and ready to use.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerState.Build">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.ServerState"/> representing a server which is currently being built.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerState.Deleted">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.ServerState"/> representing a server which has been deleted.
            </summary>
            <remarks>
            By default, the <see cref="M:net.openstack.Core.Providers.IComputeProvider.ListServers(System.String,System.String,System.String,net.openstack.Core.Domain.ServerState,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.String,net.openstack.Core.Domain.CloudIdentity)"/> operation does not return
            servers which have been deleted. To list deleted servers, call
            <see cref="M:net.openstack.Core.Providers.IComputeProvider.ListServers(System.String,System.String,System.String,net.openstack.Core.Domain.ServerState,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.String,net.openstack.Core.Domain.CloudIdentity)"/> specifying the <c>changesSince</c>
            parameter.
            </remarks>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerState.Error">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.ServerState"/> representing a server which failed to perform
            an operation and is now in an error state.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerState.HardReboot">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.ServerState"/> representing a server currently performing a hard
            reboot. When the reboot operation completes, the server will be in the <see cref="P:net.openstack.Core.Domain.ServerState.Active"/>
            state.
            </summary>
            <seealso cref="M:net.openstack.Core.Domain.ServerBase.HardReboot"/>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.RebootServer(System.String,net.openstack.Core.Domain.RebootType,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerState.Migrating">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.ServerState"/> representing a server which is currently being moved
            from one physical node to another.
            </summary>
            <remarks>
            <note>Server migration is a Rackspace-specific extension.</note>
            </remarks>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerState.Password">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.ServerState"/> representing the password for the server is being changed.
            </summary>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.ChangeAdministratorPassword(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerState.Reboot">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.ServerState"/> representing a server currently performing a soft
            reboot. When the reboot operation completes, the server will be in the <see cref="P:net.openstack.Core.Domain.ServerState.Active"/>
            state.
            </summary>
            <seealso cref="M:net.openstack.Core.Domain.ServerBase.SoftReboot"/>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.RebootServer(System.String,net.openstack.Core.Domain.RebootType,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerState.Rebuild">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.ServerState"/> representing a server currently being rebuilt.
            When the rebuild operation completes, the server will be in the <see cref="P:net.openstack.Core.Domain.ServerState.Active"/>
            state if the rebuild was successful; otherwise, it will be in the <see cref="P:net.openstack.Core.Domain.ServerState.Error"/> state
            if the rebuild operation failed.
            </summary>
            <seealso cref="M:net.openstack.Core.Domain.ServerBase.Rebuild(System.String,System.String,System.String,System.String,System.Net.IPAddress,System.Net.IPAddress,net.openstack.Core.Domain.Metadata,net.openstack.Core.Domain.DiskConfiguration,net.openstack.Core.Domain.Personality)"/>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.RebuildServer(System.String,System.String,System.String,System.String,System.String,System.Net.IPAddress,System.Net.IPAddress,net.openstack.Core.Domain.Metadata,net.openstack.Core.Domain.DiskConfiguration,net.openstack.Core.Domain.Personality,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerState.Rescue">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.ServerState"/> representing a server currently in rescue mode.
            </summary>
            <seealso cref="M:net.openstack.Core.Domain.ServerBase.Rescue"/>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.RescueServer(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerState.Resize">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.ServerState"/> representing a server currently executing a resize action.
            When the resize operation completes, the server will be in the <see cref="P:net.openstack.Core.Domain.ServerState.VerifyResize"/>
            state if the resize was successful; otherwise, it will be in the <see cref="P:net.openstack.Core.Domain.ServerState.Active"/> state
            if the resize operation failed.
            </summary>
            <seealso cref="M:net.openstack.Core.Domain.ServerBase.Resize(System.String,System.String,net.openstack.Core.Domain.DiskConfiguration)"/>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.ResizeServer(System.String,System.String,System.String,net.openstack.Core.Domain.DiskConfiguration,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerState.RevertResize">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.ServerState"/> representing a server currently executing a revert resize action.
            </summary>
            <seealso cref="M:net.openstack.Core.Domain.ServerBase.RevertResize"/>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.RevertServerResize(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerState.Suspended">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.ServerState"/> for a server that is currently inactive, either by request or necessity.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerState.Unknown">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.ServerState"/> for a server that is currently in an unknown state.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerState.VerifyResize">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.ServerState"/> representing a server which completed a resize operation
            and is now waiting for the operation to be confirmed or reverted.
            </summary>
            <seealso cref="M:net.openstack.Core.Domain.ServerBase.Resize(System.String,System.String,net.openstack.Core.Domain.DiskConfiguration)"/>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.ResizeServer(System.String,System.String,System.String,net.openstack.Core.Domain.DiskConfiguration,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso cref="M:net.openstack.Core.Domain.ServerBase.ConfirmResize"/>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.ConfirmServerResize(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerState.PrepRescue">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.ServerState"/> representing a server currently executing a rescue action.
            </summary>
            <seealso cref="M:net.openstack.Core.Domain.ServerBase.Rescue"/>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.RescueServer(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerState.PrepUnrescue">
            <summary>
            Gets a <see cref="T:net.openstack.Core.Domain.ServerState"/> representing a server currently executing an un-rescue action.
            </summary>
            <seealso cref="M:net.openstack.Core.Domain.ServerBase.UnRescue"/>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.UnRescueServer(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
        </member>
        <member name="T:net.openstack.Core.Domain.ServerState.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Core.Domain.ServerState"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.ServerState.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Core.Domain.ServerVolume">
            <summary>
            This models the JSON description of a volume attachment.
            </summary>
            <remarks>
            <note>Volume attachments are a Rackspace-specific extension to the OpenStack Compute Service.</note>
            </remarks>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/List_Volume_Attachments.html">List Volume Attachments (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerVolume.Device">
            <summary>
            Gets the "device" property associated with the volume attachment.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerVolume.ServerId">
            <summary>
            Gets the "serverId" property associated with the volume attachment.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <seealso cref="P:net.openstack.Core.Domain.ServerBase.Id"/>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerVolume.Id">
            <summary>
            Gets the unique identifier for the volume attachment.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.ServerVolume.VolumeId">
            <summary>
            Gets the "volumeId" property associated with the volume attachment.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <seealso cref="P:net.openstack.Core.Domain.Volume.Id"/>
        </member>
        <member name="T:net.openstack.Core.Domain.Tenant">
            <summary>
            This models the basic JSON description of a tenant.
            </summary>
            <seealso cref="M:net.openstack.Core.Providers.IIdentityProvider.ListTenants(net.openstack.Core.Domain.CloudIdentity)"/>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Core.Domain.Tenant.Id">
            <summary>
            Gets the unique identifier for the tenant.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Tenant.Name">
            <summary>
            Gets the "name" property for the tenant.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.UserCredential">
            <summary>
            Represents a set of credentials for a user.
            </summary>
            <seealso cref="M:net.openstack.Core.Providers.IIdentityProvider.ListUserCredentials(System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_listCredentials_v2.0_users__userId__OS-KSADM_credentials_.html">List Credentials (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.UserCredential.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.UserCredential"/> class
            with the specified name, username, and API key.
            </summary>
            <param name="name">The name.</param>
            <param name="username">The username.</param>
            <param name="apiKey">The API key.</param>
        </member>
        <member name="P:net.openstack.Core.Domain.UserCredential.Name">
            <summary>
            Gets the "name" property for the credentials.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.UserCredential.Username">
            <summary>
            Gets the "username" property for the credentials.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.UserCredential.APIKey">
            <summary>
            Gets the "apiKey" property for the credentials.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="T:net.openstack.Core.Exceptions.CidrFormatException">
            <summary>
            Represents errors that occur while validating a CIDR.
            </summary>
            <seealso cref="M:net.openstack.Core.Validators.INetworksValidator.ValidateCidr(System.String)"/>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Exceptions.CidrFormatException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.CidrFormatException"/> class.
            </summary>
        </member>
        <member name="M:net.openstack.Core.Exceptions.CidrFormatException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.CidrFormatException"/> class
            with the specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:net.openstack.Core.Exceptions.CidrFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.CidrFormatException"/> class with
            serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="info"/> is <c>null</c>.</exception>
        </member>
        <member name="T:net.openstack.Core.Exceptions.CDNNotEnabledException">
            <summary>
            The exception that is thrown when an attempt is made to modify CDN properties
            of a container which is not CDN-enabled.
            </summary>
            <seealso cref="T:net.openstack.Core.Providers.IObjectStorageProvider"/>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Exceptions.CDNNotEnabledException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.CDNNotEnabledException"/> class.
            </summary>
        </member>
        <member name="M:net.openstack.Core.Exceptions.CDNNotEnabledException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.CDNNotEnabledException"/> class
            with the specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:net.openstack.Core.Exceptions.CDNNotEnabledException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.CDNNotEnabledException"/> class
            with the specified error message and a reference to the inner exception that
            is the cause of this exception.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception.
            If the <paramref name="innerException"/> parameter is not a null reference, the current
            exception is raised in a <b>catch</b> block that handles the inner exception.</param>
        </member>
        <member name="M:net.openstack.Core.Exceptions.CDNNotEnabledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.CDNNotEnabledException"/> class with
            serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="info"/> is <c>null</c>.</exception>
        </member>
        <member name="T:net.openstack.Core.Exceptions.ContainerNameException">
            <summary>
            Represents errors that occur while validating a container name for an <see cref="T:net.openstack.Core.Providers.IObjectStorageProvider"/>.
            </summary>
            <seealso cref="M:net.openstack.Core.Validators.IObjectStorageValidator.ValidateContainerName(System.String)"/>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Exceptions.ContainerNameException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.ContainerNameException"/> class.
            </summary>
        </member>
        <member name="M:net.openstack.Core.Exceptions.ContainerNameException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.ContainerNameException"/> class
            with the specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:net.openstack.Core.Exceptions.ContainerNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.ContainerNameException"/> class with
            serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="info"/> is <c>null</c>.</exception>
        </member>
        <member name="T:net.openstack.Core.Exceptions.ObjectNameException">
            <summary>
            Represents errors that occur while validating an object name for an <see cref="T:net.openstack.Core.Providers.IObjectStorageProvider"/>.
            </summary>
            <seealso cref="M:net.openstack.Core.Validators.IObjectStorageValidator.ValidateObjectName(System.String)"/>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Exceptions.ObjectNameException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.ObjectNameException"/> class.
            </summary>
        </member>
        <member name="M:net.openstack.Core.Exceptions.ObjectNameException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.ObjectNameException"/> class
            with the specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:net.openstack.Core.Exceptions.ObjectNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.ObjectNameException"/> class with
            serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="info"/> is <c>null</c>.</exception>
        </member>
        <member name="T:net.openstack.Core.Exceptions.Response.BadServiceRequestException">
            <summary>
            Represents errors with status code <see cref="F:System.Net.HttpStatusCode.BadRequest"/> resulting
            from a call to a REST API.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="T:net.openstack.Core.Exceptions.Response.ResponseException">
            <summary>
            Defines the base class for errors resulting from a call to a REST API.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Exceptions.Response.ResponseException.#ctor(System.String,JSIStudios.SimpleRESTServices.Client.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.Response.ResponseException"/> class with the
            specified error message and REST response.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="response">The REST response.</param>
        </member>
        <member name="P:net.openstack.Core.Exceptions.Response.ResponseException.Response">
            <summary>
            Gets the REST <see cref="T:JSIStudios.SimpleRESTServices.Client.Response"/> containing the details
            about this error.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Exceptions.Response.ResponseException.Message">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Core.Exceptions.Response.BadServiceRequestException.#ctor(JSIStudios.SimpleRESTServices.Client.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.Response.BadServiceRequestException"/> class with the
            specified REST response.
            </summary>
            <param name="response">The REST response.</param>
        </member>
        <member name="M:net.openstack.Core.Exceptions.Response.BadServiceRequestException.#ctor(System.String,JSIStudios.SimpleRESTServices.Client.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.Response.BadServiceRequestException"/> class with the
            specified error message and REST response.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="response">The REST response.</param>
        </member>
        <member name="T:net.openstack.Core.Exceptions.Response.ItemNotFoundException">
            <summary>
            Represents errors with status code <see cref="F:System.Net.HttpStatusCode.NotFound"/> resulting
            from a call to a REST API.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Exceptions.Response.ItemNotFoundException.#ctor(JSIStudios.SimpleRESTServices.Client.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.Response.ItemNotFoundException"/> class with the
            specified REST response.
            </summary>
            <param name="response">The REST response.</param>
        </member>
        <member name="M:net.openstack.Core.Exceptions.Response.ItemNotFoundException.#ctor(System.String,JSIStudios.SimpleRESTServices.Client.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.Response.ItemNotFoundException"/> class with the
            specified error message and REST response.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="response">The REST response.</param>
        </member>
        <member name="T:net.openstack.Core.Exceptions.Response.MethodNotImplementedException">
            <summary>
            Represents errors with status code <see cref="F:System.Net.HttpStatusCode.NotImplemented"/> resulting
            from a call to a REST API.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Exceptions.Response.MethodNotImplementedException.#ctor(JSIStudios.SimpleRESTServices.Client.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.Response.MethodNotImplementedException"/> class with the
            specified REST response.
            </summary>
            <param name="response">The REST response.</param>
        </member>
        <member name="M:net.openstack.Core.Exceptions.Response.MethodNotImplementedException.#ctor(System.String,JSIStudios.SimpleRESTServices.Client.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.Response.MethodNotImplementedException"/> class with the
            specified error message and REST response.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="response">The REST response.</param>
        </member>
        <member name="T:net.openstack.Core.Exceptions.Response.ServiceConflictException">
            <summary>
            Represents errors with status code <see cref="F:System.Net.HttpStatusCode.Conflict"/> resulting
            from a call to a REST API.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Exceptions.Response.ServiceConflictException.#ctor(JSIStudios.SimpleRESTServices.Client.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.Response.ServiceConflictException"/> class with the
            specified REST response.
            </summary>
            <param name="response">The REST response.</param>
        </member>
        <member name="M:net.openstack.Core.Exceptions.Response.ServiceConflictException.#ctor(System.String,JSIStudios.SimpleRESTServices.Client.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.Response.ServiceConflictException"/> class with the
            specified error message and REST response.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="response">The REST response.</param>
        </member>
        <member name="T:net.openstack.Core.Exceptions.Response.ServiceFaultException">
            <summary>
            Represents errors with status code <see cref="F:System.Net.HttpStatusCode.InternalServerError"/> resulting
            from a call to a REST API.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Exceptions.Response.ServiceFaultException.#ctor(JSIStudios.SimpleRESTServices.Client.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.Response.ServiceFaultException"/> class with the
            specified REST response.
            </summary>
            <param name="response">The REST response.</param>
        </member>
        <member name="M:net.openstack.Core.Exceptions.Response.ServiceFaultException.#ctor(System.String,JSIStudios.SimpleRESTServices.Client.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.Response.ServiceFaultException"/> class with the
            specified error message and REST response.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="response">The REST response.</param>
        </member>
        <member name="T:net.openstack.Core.Exceptions.Response.ServiceLimitReachedException">
            <summary>
            Represents errors with status code <see cref="F:System.Net.HttpStatusCode.RequestEntityTooLarge"/> resulting
            from a call to a REST API.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Exceptions.Response.ServiceLimitReachedException.#ctor(JSIStudios.SimpleRESTServices.Client.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.Response.ServiceLimitReachedException"/> class with the
            specified REST response.
            </summary>
            <param name="response">The REST response.</param>
        </member>
        <member name="M:net.openstack.Core.Exceptions.Response.ServiceLimitReachedException.#ctor(System.String,JSIStudios.SimpleRESTServices.Client.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.Response.ServiceLimitReachedException"/> class with the
            specified error message and REST response.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="response">The REST response.</param>
        </member>
        <member name="T:net.openstack.Core.Exceptions.Response.ServiceUnavailableException">
            <summary>
            Represents errors with status code <see cref="F:System.Net.HttpStatusCode.ServiceUnavailable"/> resulting
            from a call to a REST API.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Exceptions.Response.ServiceUnavailableException.#ctor(JSIStudios.SimpleRESTServices.Client.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.Response.ServiceUnavailableException"/> class with the
            specified REST response.
            </summary>
            <param name="response">The REST response.</param>
        </member>
        <member name="M:net.openstack.Core.Exceptions.Response.ServiceUnavailableException.#ctor(System.String,JSIStudios.SimpleRESTServices.Client.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.Response.ServiceUnavailableException"/> class with the
            specified error message and REST response.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="response">The REST response.</param>
        </member>
        <member name="T:net.openstack.Core.Exceptions.Response.UserNotAuthorizedException">
            <summary>
            Represents errors with status code <see cref="F:System.Net.HttpStatusCode.Unauthorized"/>,
            <see cref="F:System.Net.HttpStatusCode.Forbidden"/>, or <see cref="F:System.Net.HttpStatusCode.MethodNotAllowed"/>
            resulting from a call to a REST API.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Exceptions.Response.UserNotAuthorizedException.#ctor(JSIStudios.SimpleRESTServices.Client.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.Response.UserNotAuthorizedException"/> class with the
            specified REST response.
            </summary>
            <param name="response">The REST response.</param>
        </member>
        <member name="M:net.openstack.Core.Exceptions.Response.UserNotAuthorizedException.#ctor(System.String,JSIStudios.SimpleRESTServices.Client.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.Response.UserNotAuthorizedException"/> class with the
            specified error message and REST response.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="response">The REST response.</param>
        </member>
        <member name="T:net.openstack.Core.Providers.INetworksProvider">
            <summary>
            Represents a provider for the OpenStack Networking service.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-network/2.0/content/">OpenStack Networking API v2.0 Reference</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.INetworksProvider.ListNetworks(System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            List the networks configured for the account.
            </summary>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A list of <see cref="T:net.openstack.Core.Domain.CloudNetwork"/> objects describing the networks for the account.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-network/2.0/content/List_Networks.html">List Networks (OpenStack Networking API v2.0 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.INetworksProvider.CreateNetwork(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Create a network with the given IP block.
            </summary>
            <param name="cidr">The IP block from which to allocate the network. For example, <c>172.16.0.0/24</c> or <c>2001:DB8::/64</c>.</param>
            <param name="label">The name of the new network. For example, <c>my_new_network</c>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.CloudNetwork"/> instance containing details for the newly created network.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="cidr"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="label"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="cidr"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="label"/> is empty.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.CidrFormatException">If <paramref name="cidr"/> is not in the correct format.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-network/2.0/content/Create_Network.html">Create Network (OpenStack Networking API v2.0 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.INetworksProvider.ShowNetwork(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Retrieve details for the specified network.
            </summary>
            <param name="networkId">ID of the network to retrieve. This is obtained from <see cref="P:net.openstack.Core.Domain.CloudNetwork.Id"/>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.CloudNetwork"/> instance containing the network details.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="networkId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="networkId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-network/2.0/content/List_Networks_Detail.html">Show Network (OpenStack Networking API v2.0 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.INetworksProvider.DeleteNetwork(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Deletes the specified network. <remarks>You cannot delete an isolated network unless the network is not attached to any server.</remarks>
            </summary>
            <param name="networkId">ID of the network to delete. This is obtained from <see cref="P:net.openstack.Core.Domain.CloudNetwork.Id"/>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><c>true</c> if the network was successfully deleted; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="networkId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="networkId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-network/2.0/content/Delete_Network.html">Delete Network (OpenStack Networking API v2.0 Reference)</seealso>
        </member>
        <member name="T:net.openstack.Core.Validators.INetworksValidator">
            <summary>
            Represents an object that validates arguments for an implementation of <see cref="T:net.openstack.Core.Providers.INetworksProvider"/>
            prior to sending the calls to the underlying REST API.
            </summary>
        </member>
        <member name="M:net.openstack.Core.Validators.INetworksValidator.ValidateCidr(System.String)">
            <summary>
            Validates an IP address range (CIDR) formatted as a string.
            </summary>
            <param name="cidr">The IP address range.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="cidr"/> is <c>null</c>.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.CidrFormatException">If <paramref name="cidr"/> is not in the correct format.</exception>
        </member>
        <member name="T:net.openstack.Core.UserAgentGenerator">
            <summary>
            Generates the User-Agent value which identifies this SDK in REST requests.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Core.UserAgentGenerator.UserAgent">
            <summary>
            Gets the User-Agent value for this SDK.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Validators.IHttpResponseCodeValidator">
            <summary>
            Represents an object that can determine whether a particular response from a
            REST API call succeeded.
            </summary>
        </member>
        <member name="M:net.openstack.Core.Validators.IHttpResponseCodeValidator.Validate(JSIStudios.SimpleRESTServices.Client.Response)">
            <summary>
            Verifies that <paramref name="response"/> represents a successful response
            for a REST API call, throwing an appropriate <see cref="T:net.openstack.Core.Exceptions.Response.ResponseException"/>
            if <paramref name="response"/> indicates a failure.
            </summary>
            <param name="response">The response from the REST call.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="response"/> is <c>null</c>.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If <paramref name="response"/> indicates the REST API call failed.</exception>
        </member>
        <member name="T:net.openstack.Core.WebRequestExtensions">
            <summary>
            Provides extension methods for asynchronous operations on
            <see cref="T:System.Net.WebRequest"/> objects.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Core.WebRequestExtensions.GetResponseAsync(System.Net.WebRequest)">
            <summary>
            Returns a response to an Internet request as an asynchronous operation.
            </summary>
            <remarks>
            This operation will not block. The returned <see cref="T:System.Threading.Tasks.Task`1"/> object will
            complete after a response to an Internet request is available.
            </remarks>
            <param name="request">The request.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object which represents the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="request"/> is <c>null</c>.</exception>
        </member>
        <member name="M:net.openstack.Core.WebRequestExtensions.GetResponseAsync(System.Net.WebRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a response to an Internet request as an asynchronous operation.
            </summary>
            <remarks>
            This operation will not block. The returned <see cref="T:System.Threading.Tasks.Task`1"/> object will
            complete after a response to an Internet request is available.
            </remarks>
            <param name="request">The request.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that will be assigned to the new <see cref="T:System.Threading.Tasks.Task"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object which represents the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="request"/> is <c>null</c>.</exception>
            <exception cref="T:System.Net.WebException">
            If <see cref="M:System.Net.WebRequest.Abort"/> was previously called.
            <para>-or-</para>
            <para>If the timeout period for the request expired.</para>
            <para>-or-</para>
            <para>If an error occurred while processing the request.</para>
            </exception>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.CloudBlockStorageProvider">
             <summary>
             Provides an implementation of <see cref="T:net.openstack.Core.Providers.IBlockStorageProvider"/>
             for operating with Rackspace's Cloud Block Storage product.
             </summary>
             <remarks>
             <para>The Cloud Block Storage Provider enables simple access to the Rackspace Cloud Block Storage Volumes as well as Cloud Block Storage Volume Snapshot services.
             Rackspace Cloud Block Storage is a block level storage solution that allows customers to mount drives or volumes to their Rackspace Next Generation Cloud Servers.
             The two primary use cases are (1) to allow customers to scale their storage independently from their compute resources,
             and (2) to allow customers to utilize high performance storage to serve database or I/O-intensive applications.</para>
            
             <para>Highlights of Rackspace Cloud Block Storage include:</para>
             <list type="bullet">
             <item>Mount a drive to a Cloud Server to scale storage without paying for more compute capability.</item>
             <item>A high performance option for databases and high performance applications, leveraging solid state drives for speed.</item>
             <item>A standard speed option for customers who just need additional storage on their Cloud Server.</item>
             </list>
            
             <note>
             <list type="bullet">
             <item>Cloud Block Storage is an add-on feature to Next Generation Cloud Servers.  Customers may not attach Cloud Block Storage volumes to other instances, like first generation Cloud Servers.</item>
             <item>Cloud Block Storage is multi-tenant rather than dedicated.</item>
             <item>When volumes are destroyed, Rackspace keeps that disk space unavailable until zeros have been written to the space to ensure that data is not accessible by any other customers.</item>
             <item>Cloud Block Storage allows you to create snapshots that you can save, list, and restore.</item>
             </list>
             </note>
             </remarks>
             <see cref="T:net.openstack.Core.Providers.IBlockStorageProvider"/>
             <inheritdoc/>
             <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/">OpenStack Block Storage Service API v2 Reference</seealso>
             <seealso href="http://docs.rackspace.com/cbs/api/v1.0/cbs-devguide/content/overview.html">Rackspace Cloud Block Storage Developer Guide - API v1.0</seealso>
             <threadsafety static="true" instance="false"/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudBlockStorageProvider._validResponseCode">
            <summary>
            The HTTP response codes indicating a successful result from an API call.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudBlockStorageProvider._cloudBlockStorageValidator">
            <summary>
            The <see cref="T:net.openstack.Core.Validators.IBlockStorageValidator"/> to use for validating requests to
            this service. The default value is <see cref="P:net.openstack.Providers.Rackspace.Validators.CloudBlockStorageValidator.Default"/>.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudBlockStorageProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudFilesProvider"/> class with
            no default identity or region, and the default identity provider and REST
            service implementation.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudBlockStorageProvider.#ctor(net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudFilesProvider"/> class with
            the specified default identity, no default region, and the default identity
            provider and REST service implementation.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <c>null</c>, no default identity is available so all calls must specify an explicit identity.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudBlockStorageProvider.#ctor(JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudFilesProvider"/> class with
            no default identity or region, the default identity provider, and the specified
            REST service implementation.
            </summary>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <c>null</c>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudBlockStorageProvider.#ctor(net.openstack.Core.Providers.IIdentityProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudFilesProvider"/> class with
            no default identity or region, the specified identity provider, and the default
            REST service implementation.
            </summary>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <c>null</c>, a new instance of <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> is created with no default identity.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudBlockStorageProvider.#ctor(net.openstack.Core.Domain.CloudIdentity,net.openstack.Core.Providers.IIdentityProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudFilesProvider"/> class with
            the specified default identity and identity provider, no default region, and
            the default REST service implementation.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <c>null</c>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <c>null</c>, a new instance of <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> is created using <paramref name="identity"/> as the default identity.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudBlockStorageProvider.#ctor(net.openstack.Core.Domain.CloudIdentity,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudFilesProvider"/> class with
            the specified default identity and REST service implementation, no default region,
            and the default identity provider.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <c>null</c>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <c>null</c>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudBlockStorageProvider.#ctor(net.openstack.Core.Domain.CloudIdentity,net.openstack.Core.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudFilesProvider"/> class with
            the specified default identity, no default region, and the specified identity
            provider and REST service implementation.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <c>null</c>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <c>null</c>, a new instance of <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> is created using <paramref name="identity"/> as the default identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <c>null</c>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudBlockStorageProvider.#ctor(net.openstack.Core.Domain.CloudIdentity,System.String,net.openstack.Core.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudFilesProvider"/> class with
            the specified default identity, default region, identity provider, and REST service implementation.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <c>null</c>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="defaultRegion">The default region to use for calls that do not explicitly specify a region. If this value is <c>null</c>, the default region for the user will be used; otherwise if the service uses region-specific endpoints all calls must specify an explicit region.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <c>null</c>, a new instance of <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> is created using <paramref name="identity"/> as the default identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <c>null</c>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudBlockStorageProvider.#ctor(net.openstack.Core.Domain.CloudIdentity,System.String,net.openstack.Core.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService,net.openstack.Core.Validators.IBlockStorageValidator)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudFilesProvider"/> class with
            the specified default identity, default region, identity provider, REST service
            implementation, and block storage validator.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <c>null</c>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="defaultRegion">The default region to use for calls that do not explicitly specify a region. If this value is <c>null</c>, the default region for the user will be used; otherwise if the service uses region-specific endpoints all calls must specify an explicit region.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <c>null</c>, a new instance of <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> is created with no default identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <c>null</c>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
            <param name="cloudBlockStorageValidator">The <see cref="T:net.openstack.Core.Validators.IBlockStorageValidator"/> to use for validating requests to this service.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="cloudBlockStorageValidator"/> is <c>null</c>.</exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudBlockStorageProvider.CreateVolume(System.Int32,System.String,System.String,System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudBlockStorageProvider.ListVolumes(System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudBlockStorageProvider.ShowVolume(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudBlockStorageProvider.DeleteVolume(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudBlockStorageProvider.ListVolumeTypes(System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudBlockStorageProvider.DescribeVolumeType(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudBlockStorageProvider.WaitForVolumeAvailable(System.String,System.Int32,System.Nullable{System.TimeSpan},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudBlockStorageProvider.WaitForVolumeDeleted(System.String,System.Int32,System.Nullable{System.TimeSpan},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudBlockStorageProvider.WaitForVolumeState(System.String,net.openstack.Core.Domain.VolumeState,net.openstack.Core.Domain.VolumeState[],System.Int32,System.Nullable{System.TimeSpan},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudBlockStorageProvider.CreateSnapshot(System.String,System.Boolean,System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudBlockStorageProvider.ListSnapshots(System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudBlockStorageProvider.ShowSnapshot(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudBlockStorageProvider.DeleteSnapshot(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudBlockStorageProvider.WaitForSnapshotAvailable(System.String,System.Int32,System.Nullable{System.TimeSpan},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudBlockStorageProvider.WaitForSnapshotDeleted(System.String,System.Int32,System.Nullable{System.TimeSpan},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudBlockStorageProvider.WaitForSnapshotState(System.String,net.openstack.Core.Domain.SnapshotState,net.openstack.Core.Domain.SnapshotState[],System.Int32,System.Nullable{System.TimeSpan},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudBlockStorageProvider.GetServiceEndpoint(net.openstack.Core.Domain.CloudIdentity,System.String)">
            <summary>
            Gets the public service endpoint to use for Cloud Block Storage requests for the specified identity and region.
            </summary>
            <remarks>
            This method uses <c>volume</c> for the service type, and <c>cloudBlockStorage</c> for the preferred service name.
            </remarks>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <param name="region">The preferred region for the service. If this value is <c>null</c>, the user's default region will be used.</param>
            <returns>The public URL for the requested Cloud Block Storage endpoint.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.NoDefaultRegionSetException">If <paramref name="region"/> is <c>null</c> and no default region is available for the identity or provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthenticationException">If no service catalog is available for the user.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthorizationException">If no endpoint is available for the requested service.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="T:net.openstack.Core.Exceptions.TTLLengthException">
            <summary>
            The exception that is thrown when the TTL argument to a method is outside
            the range supported by the provider.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Exceptions.TTLLengthException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.TTLLengthException"/> class.
            </summary>
        </member>
        <member name="M:net.openstack.Core.Exceptions.TTLLengthException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.TTLLengthException"/> class
            with the specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:net.openstack.Core.Exceptions.TTLLengthException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.TTLLengthException"/> class with
            serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="info"/> is <c>null</c>.</exception>
        </member>
        <member name="T:net.openstack.Core.Providers.IObjectStorageProvider">
            <summary>
            Represents a provider for the OpenStack Object Storage service.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/">OpenStack Object Storage API v1 Reference</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.ListContainers(System.Nullable{System.Int32},System.String,System.String,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Gets a list of containers stored in the account.
            </summary>
            <param name="limit">The maximum number of containers to return. If the value is <c>null</c>, a provider-specific default is used.</param>
            <param name="marker">When specified, only containers with names greater than <paramref name="marker"/> are returned. If the value is <c>null</c>, the list starts at the beginning.</param>
            <param name="markerEnd">When specified, only containers with names less than <paramref name="markerEnd"/> are returned. If the value is <c>null</c>, the list proceeds to the end, or until the <paramref name="limit"/> is reached.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:net.openstack.Core.Domain.Container"/> objects containing the details of the specified containers.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="limit"/> is less than 0.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/s_listcontainers.html">List Containers (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.CreateContainer(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
             <summary>
             Creates a container if it does not already exist.
             </summary>
             <param name="container">The container name.</param>
             <param name="headers">A collection of custom HTTP headers to associate with the container (see <see cref="M:net.openstack.Core.Providers.IObjectStorageProvider.GetContainerHeader(System.String,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)"/>).</param>
             <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
             <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <returns>
             This method returns one of the following <see cref="T:net.openstack.Core.Domain.ObjectStore"/> values.
            
             <list type="bullet">
             <item><see cref="F:net.openstack.Core.Domain.ObjectStore.ContainerCreated"/> - if the container was created.</item>
             <item><see cref="F:net.openstack.Core.Domain.ObjectStore.ContainerExists"/> - if the container was not created because it already exists.</item>
             </list>
             </returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="container"/> is <c>null</c>.</exception>
             <exception cref="T:System.ArgumentException">
             If <paramref name="container"/> is empty.
             <para>-or-</para>
             <para>If <paramref name="headers"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="region"/> is not supported.</para>
             <para>-or-</para>
             <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
             <para>-or-</para>
             <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/create-container.html">Create Container (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.DeleteContainer(System.String,System.Boolean,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Deletes a container, and optionally all objects stored in the container.
            </summary>
            <remarks>
            Containers cannot be deleted unless they are empty. The <paramref name="deleteObjects"/> parameter provides
            a mechanism to combine the deletion of container objects with the deletion of the container itself.
            </remarks>
            <param name="container">The container name.</param>
            <param name="deleteObjects">When <c>true</c>, all objects in the specified container are deleted before deleting the container.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="container"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="container"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNotEmptyException">If the container could not be deleted because it was not empty and <paramref name="deleteObjects"/> was <c>false</c>.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ItemNotFoundException">If the specified container does not exist.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/delete-container.html">Delete Container (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.GetContainerHeader(System.String,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Gets the non-metadata headers associated with the container.
            </summary>
            <remarks>
            <note type="implement">
            The resulting <see cref="T:System.Collections.Generic.Dictionary`2">Dictionary&lt;string, string&gt;</see>
            should use the <see cref="P:System.StringComparer.OrdinalIgnoreCase"/> equality comparer to ensure
            lookups are not case sensitive.
            </note>
            </remarks>
            <param name="container">The container name.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of non-metadata HTTP headers returned with the container.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="container"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="container"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/retrieve-container-metadata.html">Get Container Metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.GetContainerMetaData(System.String,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
             <summary>
             Gets the container metadata.
             </summary>
             <remarks>
             The metadata associated with containers in the Object Storage Service are
             case-insensitive.
            
             <note type="implement">
             The resulting <see cref="T:System.Collections.Generic.Dictionary`2">Dictionary&lt;string, string&gt;</see>
             should use the <see cref="P:System.StringComparer.OrdinalIgnoreCase"/> equality comparer to ensure
             lookups are not case sensitive.
             </note>
             </remarks>
             <param name="container">The container name.</param>
             <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
             <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <returns>A collection of metadata associated with the container.</returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="container"/> is <c>null</c>.</exception>
             <exception cref="T:System.ArgumentException">If <paramref name="container"/> is empty.</exception>
             <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="region"/> is not supported.</para>
             <para>-or-</para>
             <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
             <para>-or-</para>
             <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/retrieve-container-metadata.html">Get Container Metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.GetContainerCDNHeader(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Gets the container CDN header.
            </summary>
            <remarks>
            <note type="note">
            This method is a Rackspace-specific extension to the OpenStack Object Storage Service.
            </note>
            </remarks>
            <param name="container">The container name.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.ContainerCDN"/> object describing the CDN properties of the container.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="container"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="container"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/CDN_Container_Details-d1e2566.html">View CDN Container Details (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.ListCDNContainers(System.Nullable{System.Int32},System.String,System.String,System.Boolean,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Gets a list of CDN properties for a group of containers.
            </summary>
            <remarks>
            <note type="note">
            This method is a Rackspace-specific extension to the OpenStack Object Storage Service.
            </note>
            </remarks>
            <param name="limit">The maximum number of containers to return. If the value is <c>null</c>, a provider-specific default is used.</param>
            <param name="markerId">When specified, only containers with names greater than <paramref name="markerId"/> are returned. If the value is <c>null</c>, the list starts at the beginning.</param>
            <param name="markerEnd">When specified, only containers with names less than <paramref name="markerEnd"/> are returned. If the value is <c>null</c>, the list proceeds to the end, or until the <paramref name="limit"/> is reached.</param>
            <param name="cdnEnabled">If set to <c>true</c>, the result is filtered to only include CDN-enabled containers.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:net.openstack.Core.Domain.ContainerCDN"/> objects describing the CDN properties of the specified containers.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="limit"/> is less than 0.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/List_CDN-Enabled_Containers-d1e2414.html">List CDN-Enabled Containers (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.EnableCDNOnContainer(System.String,System.Int64,System.String,net.openstack.Core.Domain.CloudIdentity)">
             <overloads>
             <summary>
             When you CDN-enable a container, all the objects within it become available through the
             Content Delivery Network (CDN). Similarly, once a container is CDN-enabled, any objects
             added to it in the storage service become CDN-enabled.
             </summary>
             <remarks>
             <note type="note">
             This feature is a Rackspace-specific extension to the OpenStack Object Storage Service.
             </note>
             </remarks>
             <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/CDN-Enable_a_Container-d1e2665.html">CDN-Enable a Container (Rackspace Cloud Files Developer Guide - API v1)</seealso>
             </overloads>
            
             <summary>
             Enables CDN on the container using the specified TTL and without log retention.
             </summary>
             <remarks>
             If the specified container is already CDN-enabled, this method updates the TTL
             for the container based on the <paramref name="timeToLive"/> argument.
            
             <note type="note">
             This method is a Rackspace-specific extension to the OpenStack Object Storage Service.
             </note>
            
             <note type="implement">
             The resulting <see cref="T:System.Collections.Generic.Dictionary`2">Dictionary&lt;string, string&gt;</see>
             should use the <see cref="P:System.StringComparer.OrdinalIgnoreCase"/> equality comparer to ensure
             lookups are not case sensitive.
             </note>
             </remarks>
             <param name="container">The container name.</param>
             <param name="timeToLive">The time (in seconds) to cache objects in the CDN. Each time the object is accessed after the TTL expires, the CDN re-fetches and caches the object for the TTL period.</param>
             <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <returns>A collection of HTTP headers included in the response to the REST request.</returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="container"/> is <c>null</c>.</exception>
             <exception cref="T:System.ArgumentException">If <paramref name="container"/> is empty.</exception>
             <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="timeToLive"/> is less than 0.</exception>
             <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
             <exception cref="T:net.openstack.Core.Exceptions.TTLLengthException">If the provider does not support the specified <paramref name="timeToLive"/>.</exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="region"/> is not supported.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
             <para>-or-</para>
             <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/CDN-Enable_a_Container-d1e2665.html">CDN-Enable a Container (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.EnableCDNOnContainer(System.String,System.Boolean,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Enables CDN on the container using the specified log retention and a provider-specific
            default TTL.
            </summary>
            <remarks>
            <note type="note">
            This method is a Rackspace-specific extension to the OpenStack Object Storage Service.
            </note>
            <note type="implement">
            The resulting <see cref="T:System.Collections.Generic.Dictionary`2">Dictionary&lt;string, string&gt;</see>
            should use the <see cref="P:System.StringComparer.OrdinalIgnoreCase"/> equality comparer to ensure
            lookups are not case sensitive.
            </note>
            </remarks>
            <param name="container">The container name.</param>
            <param name="logRetention"><c>true</c> to enable log retention on the container; otherwise, <c>false</c>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns>A collection of HTTP headers included in the response to the REST request.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="container"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="container"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/CDN-Enable_a_Container-d1e2665.html">CDN-Enable a Container (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.EnableCDNOnContainer(System.String,System.Int64,System.Boolean,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Enables CDN on the container using the specified TTL and log retention values.
            </summary>
            <remarks>
            <note type="note">
            This method is a Rackspace-specific extension to the OpenStack Object Storage Service.
            </note>
            <note type="implement">
            The resulting <see cref="T:System.Collections.Generic.Dictionary`2">Dictionary&lt;string, string&gt;</see>
            should use the <see cref="P:System.StringComparer.OrdinalIgnoreCase"/> equality comparer to ensure
            lookups are not case sensitive.
            </note>
            </remarks>
            <param name="container">The container.</param>
            <param name="timeToLive">The time (in seconds) to cache objects in the CDN. Each time the object is accessed after the TTL expires, the CDN re-fetches and caches the object for the TTL period.</param>
            <param name="logRetention"><c>true</c> to enable log retention on the container; otherwise, <c>false</c>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of HTTP headers included in the response to the REST request.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="container"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="container"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="timeToLive"/> is less than 0.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.TTLLengthException">If the provider does not support the specified <paramref name="timeToLive"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/CDN-Enable_a_Container-d1e2665.html">CDN-Enable a Container (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.DisableCDNOnContainer(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Disables CDN on the container.
            </summary>
            <remarks>
            <note type="note">
            This method is a Rackspace-specific extension to the OpenStack Object Storage Service.
            </note>
            <note type="implement">
            The resulting <see cref="T:System.Collections.Generic.Dictionary`2">Dictionary&lt;string, string&gt;</see>
            should use the <see cref="P:System.StringComparer.OrdinalIgnoreCase"/> equality comparer to ensure
            lookups are not case sensitive.
            </note>
            </remarks>
            <param name="container">The container name.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of HTTP headers included in the response to the REST request.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="container"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="container"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/CDN-Enable_a_Container-d1e2665.html">CDN-Enable a Container (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.UpdateContainerMetadata(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Updates the metadata associated with the container. This method is used to add, update, and
            remove metadata items associated with a storage container.
            </summary>
            <remarks>
            Each key/value pair in <paramref name="metadata"/> represents an updated metadata item.
            If the value is <c>null</c> or empty, then the metadata item represented by the key is
            removed if it exists. If a metadata item already exists for the key, its value is updated.
            Otherwise, a new metadata item is added for the key/value pair.
            </remarks>
            <param name="container">The container name.</param>
            <param name="metadata">The account metadata to update.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="metadata"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="metadata"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="metadata"/> contains a key or value with invalid characters.</para>
            <para>-or-</para>
            <para>If <paramref name="metadata"/> contains a key that is <c>null</c> or empty.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>If <paramref name="metadata"/> contains a key or value with characters that are not supported by the implementation.</para>
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/Update_Container_Metadata-d1e1900.html">Create or Update Container Metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.DeleteContainerMetadata(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Deletes multiple metadata items from the container.
            </summary>
            <param name="container">The container name.</param>
            <param name="keys">The metadata items to delete.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="keys"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="keys"/> contains any <c>null</c> or empty values.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>If <paramref name="keys"/> contains a key with characters that are not supported by the implementation.</para>
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/delete-container-metadata.html">Delete Container Metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.DeleteContainerMetadata(System.String,System.String,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Deletes the specified metadata item from the container.
            </summary>
            <param name="container">The container name.</param>
            <param name="key">The metadata item to delete.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="key"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="key"/> is empty.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>If <paramref name="key"/> contains a character that is not supported by the implementation.</para>
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/delete-container-metadata.html">Delete Container Metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.UpdateContainerCdnHeaders(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,net.openstack.Core.Domain.CloudIdentity)">
             <summary>
             Sets the CDN headers for the specified container, replacing any existing headers.
             </summary>
             <remarks>
             <note type="warning">
             This method replaces <em>all</em> existing CDN headers for the container with the
             values found in <paramref name="headers"/>.
             </note>
            
             <note type="note">
             This method is a Rackspace-specific extension to the OpenStack Object Storage Service.
             </note>
             </remarks>
             <param name="container">The container name.</param>
             <param name="headers">The complete set of CDN headers for the container.</param>
             <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <exception cref="T:System.ArgumentException">
             If <paramref name="container"/> is empty.
             <para>-or-</para>
             <para>If <paramref name="headers"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="region"/> is not supported.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
             <para>-or-</para>
             <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ItemNotFoundException">If the specified container does not exist.</exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/CDN_Container_Services-d1e2632.html">CDN Container Services (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.EnableStaticWebOnContainer(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Enables anonymous web access to the static content of the specified container.
            </summary>
            <param name="container">The container name.</param>
            <param name="index">The index file to serve when users browse the container, such as <fictionalUri>index.html</fictionalUri>. This is the value for the <see cref="F:net.openstack.Providers.Rackspace.CloudFilesProvider.WebIndex"/> header.</param>
            <param name="error">The suffix for the file to serve when an error occurs. If the value is <fictionalUri>error.html</fictionalUri> and a 404 (not found) error occurs, the file <fictionalUri>400error.html</fictionalUri> will be served to the user. This is the value for the <see cref="F:net.openstack.Providers.Rackspace.CloudFilesProvider.WebError"/> header.</param>
            <param name="css">The style sheet to use for file listings, such as <fictionalUri>lists.css</fictionalUri>. This is the value for the <see cref="F:net.openstack.Providers.Rackspace.CloudFilesProvider.WebListingsCSS"/> header.</param>
            <param name="listing"><c>true</c> to allow users to browse a list of files in the container when no index file is available; otherwise <c>false</c>. This is the value for the <see cref="F:net.openstack.Providers.Rackspace.CloudFilesProvider.WebListings"/> header.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="index"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="error"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="css"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="index"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="error"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="css"/> is empty.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">
            If <paramref name="index"/> is not a valid object name.
            <para>-or-</para>
            <para>If <paramref name="error"/> is not a valid object name.</para>
            <para>-or-</para>
            <para>If <paramref name="css"/> is not a valid object name.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.CDNNotEnabledException">If the provider requires containers be CDN-enabled before they can be accessed from the web, and the <see cref="P:net.openstack.Core.Domain.ContainerCDN.CDNEnabled"/> property is false.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/Create_Static_Website-dle4000.html">Create Static Website (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.EnableStaticWebOnContainer(System.String,System.String,System.String,System.Boolean,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Enables anonymous web access to the static content of the specified container.
            </summary>
            <param name="container">The container name.</param>
            <param name="index">The index file to serve when users browse the container, such as <fictionalUri>index.html</fictionalUri>. This is the value for the <see cref="F:net.openstack.Providers.Rackspace.CloudFilesProvider.WebIndex"/> header.</param>
            <param name="error">The suffix for the file to serve when an error occurs. If the value is <fictionalUri>error.html</fictionalUri> and a 404 (not found) error occurs, the file <fictionalUri>400error.html</fictionalUri> will be served to the user. This is the value for the <see cref="F:net.openstack.Providers.Rackspace.CloudFilesProvider.WebError"/> header.</param>
            <param name="listing"><c>true</c> to allow users to browse a list of files in the container when no index file is available; otherwise <c>false</c>. This is the value for the <see cref="F:net.openstack.Providers.Rackspace.CloudFilesProvider.WebListings"/> header.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="index"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="error"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="index"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="error"/> is empty.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">
            If <paramref name="index"/> is not a valid object name.
            <para>-or-</para>
            <para>If <paramref name="error"/> is not a valid object name.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.CDNNotEnabledException">If the provider requires containers be CDN-enabled before they can be accessed from the web, and the <see cref="P:net.openstack.Core.Domain.ContainerCDN.CDNEnabled"/> property is false.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/Create_Static_Website-dle4000.html">Create Static Website (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.EnableStaticWebOnContainer(System.String,System.String,System.Boolean,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Enables anonymous web access to the static content of the specified container.
            </summary>
            <param name="container">The container name.</param>
            <param name="css">The style sheet to use for file listings, such as <fictionalUri>lists.css</fictionalUri>. This is the value for the <see cref="F:net.openstack.Providers.Rackspace.CloudFilesProvider.WebListingsCSS"/> header.</param>
            <param name="listing"><c>true</c> to allow users to browse a list of files in the container when no index file is available; otherwise <c>false</c>. This is the value for the <see cref="F:net.openstack.Providers.Rackspace.CloudFilesProvider.WebListings"/> header.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="css"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="css"/> is empty.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="css"/> is not a valid object name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.CDNNotEnabledException">If the provider requires containers be CDN-enabled before they can be accessed from the web, and the <see cref="P:net.openstack.Core.Domain.ContainerCDN.CDNEnabled"/> property is false.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/Create_Static_Website-dle4000.html">Create Static Website (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.EnableStaticWebOnContainer(System.String,System.String,System.String,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Enables anonymous web access to the static content of the specified container.
            </summary>
            <param name="container">The container name.</param>
            <param name="index">The index file to serve when users browse the container, such as <fictionalUri>index.html</fictionalUri>. This is the value for the <see cref="F:net.openstack.Providers.Rackspace.CloudFilesProvider.WebIndex"/> header.</param>
            <param name="error">The suffix for the file to serve when an error occurs. If the value is <fictionalUri>error.html</fictionalUri> and a 404 (not found) error occurs, the file <fictionalUri>400error.html</fictionalUri> will be served to the user. This is the value for the <see cref="F:net.openstack.Providers.Rackspace.CloudFilesProvider.WebError"/> header.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="index"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="error"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="index"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="error"/> is empty.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">
            If <paramref name="index"/> is not a valid object name.
            <para>-or-</para>
            <para>If <paramref name="error"/> is not a valid object name.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.CDNNotEnabledException">If the provider requires containers be CDN-enabled before they can be accessed from the web, and the <see cref="P:net.openstack.Core.Domain.ContainerCDN.CDNEnabled"/> property is false.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/Create_Static_Website-dle4000.html">Create Static Website (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.DisableStaticWebOnContainer(System.String,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Disables anonymous web access to the static content of the specified container.
            </summary>
            <param name="container">The container name.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="container"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="container"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.CDNNotEnabledException">If the provider requires containers be CDN-enabled before they can be accessed from the web, and the <see cref="P:net.openstack.Core.Domain.ContainerCDN.CDNEnabled"/> property is false.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/Create_Static_Website-dle4000.html">Create Static Website (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.GetObjectHeaders(System.String,System.String,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Gets the non-metadata headers for the specified object.
            </summary>
            <remarks>
            <note type="implement">
            The resulting <see cref="T:System.Collections.Generic.Dictionary`2">Dictionary&lt;string, string&gt;</see>
            should use the <see cref="P:System.StringComparer.OrdinalIgnoreCase"/> equality comparer to ensure
            lookups are not case sensitive.
            </note>
            </remarks>
            <param name="container">The container name.</param>
            <param name="objectName">The object name.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of non-metadata headers associated with the specified object.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is empty.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="objectName"/> is not a valid object name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/retrieve-object-metadata.html">Get Object Metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.GetObjectMetaData(System.String,System.String,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
             <summary>
             Gets the object data.
             </summary>
             <remarks>
             The metadata associated with objects in the Object Storage Service are
             case-insensitive.
            
             <note type="implement">
             The resulting <see cref="T:System.Collections.Generic.Dictionary`2">Dictionary&lt;string, string&gt;</see>
             should use the <see cref="P:System.StringComparer.OrdinalIgnoreCase"/> equality comparer to ensure
             lookups are not case sensitive.
             </note>
             </remarks>
             <param name="container">The container name.</param>
             <param name="objectName">The object name.</param>
             <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
             <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <returns>A collection of metadata associated with the object.</returns>
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="container"/> is <c>null</c>.
             <para>-or-</para>
             <para>If <paramref name="objectName"/> is <c>null</c>.</para>
             </exception>
             <exception cref="T:System.ArgumentException">
             If <paramref name="container"/> is empty.
             <para>-or-</para>
             <para>If <paramref name="objectName"/> is empty.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
             <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="objectName"/> is not a valid object name.</exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="region"/> is not supported.</para>
             <para>-or-</para>
             <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
             <para>-or-</para>
             <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/retrieve-object-metadata.html">Get Object Metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.UpdateObjectMetadata(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Sets the object metadata, replacing any existing metadata values.
            </summary>
            <remarks>
            <note type="warning">
            This method replaces all existing metadata for the object with the values
            found in <paramref name="metadata"/>. To add or change existing metadata values
            without affecting all metadata for the object, first call <see cref="M:net.openstack.Core.Providers.IObjectStorageProvider.GetObjectMetaData(System.String,System.String,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)"/>,
            modify the returned <see cref="T:System.Collections.Generic.Dictionary`2">Dictionary&lt;string, string&gt;</see>,
            then call <see cref="M:net.openstack.Core.Providers.IObjectStorageProvider.UpdateObjectMetadata(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)"/> with the modified metadata dictionary.
            </note>
            </remarks>
            <param name="container">The container name.</param>
            <param name="objectName">The object name.</param>
            <param name="metadata">The complete metadata to associate with the object.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="metadata"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="metadata"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="objectName"/> is not a valid object name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/update-object-metadata.html">Update Object Metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.DeleteObjectMetadata(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Deletes multiple metadata items from the object.
            </summary>
            <param name="container">The container name.</param>
            <param name="objectName">The object name.</param>
            <param name="keys">The metadata items to delete.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="keys"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="keys"/> contains any <c>null</c> or empty values.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="objectName"/> is not a valid object name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/update-object-metadata.html">Update Object Metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.DeleteObjectMetadata(System.String,System.String,System.String,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Deletes the specified metadata item from the object.
            </summary>
            <param name="container">The container name.</param>
            <param name="objectName">The object name.</param>
            <param name="key">The metadata item to delete.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="key"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="key"/> is empty.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="objectName"/> is not a valid object name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/update-object-metadata.html">Update Object Metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.ListObjects(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Lists the objects in a container.
            </summary>
            <param name="container">The container name.</param>
            <param name="limit">The maximum number of objects to return. If the value is <c>null</c>, a provider-specific default is used.</param>
            <param name="marker">When specified, only objects with names greater than <paramref name="marker"/> are returned. If the value is <c>null</c>, the list starts at the beginning.</param>
            <param name="markerEnd">When specified, only objects with names less than <paramref name="markerEnd"/> are returned. If the value is <c>null</c>, the list proceeds to the end, or until the <paramref name="limit"/> is reached.</param>
            <param name="prefix">Prefix of object names to include</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:net.openstack.Core.Domain.ContainerObject"/> objects containing the details of the specified objects.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="container"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="container"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="limit"/> is less than 0.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/list-objects.html">List Objects (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.CreateObjectFromFile(System.String,System.String,System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Action{System.Int64},System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Creates an object using data from a file. If the destination file already exists, the contents are overwritten.
            </summary>
            <param name="container">The container name.</param>
            <param name="filePath">The source file path. Example <localUri>c:\folder1\folder2\image_name.jpeg</localUri></param>
            <param name="objectName">The destination object name. If <c>null</c>, the filename portion of <paramref name="filePath"/> will be used.</param>
            <param name="contentType">The content type of the created object. If the value is <c>null</c> or empty, the content type of the created object is unspecified.</param>
            <param name="chunkSize">The buffer size to use for copying streaming data.</param>
            <param name="headers">A collection of custom HTTP headers to associate with the object (see <see cref="M:net.openstack.Core.Providers.IObjectStorageProvider.GetObjectHeaders(System.String,System.String,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)"/>).</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="progressUpdated">A callback for progress updates. If the value is <c>null</c>, no progress updates are reported.</param>
            <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="filePath"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="filePath"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="headers"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="objectName"/> is not a valid object name.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="chunkSize"/> is less than 0.</exception>
            <exception cref="T:System.IO.FileNotFoundException">If the file <paramref name="filePath"/> could not be found.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/create-update-object.html">Create or Update Object (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.CreateObject(System.String,System.IO.Stream,System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Action{System.Int64},System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Creates an object using data from a <see cref="T:System.IO.Stream"/>. If the destination file already exists, the contents are overwritten.
            </summary>
            <param name="container">The container name.</param>
            <param name="stream">A <see cref="T:System.IO.Stream"/> providing the data for the file.</param>
            <param name="objectName">The destination object name. Example <localUri>image_name.jpeg</localUri></param>
            <param name="contentType">The content type of the created object. If the value is <c>null</c> or empty, the content type of the created object is unspecified.</param>
            <param name="chunkSize">The buffer size to use for copying streaming data.</param>
            <param name="headers">A collection of custom HTTP headers to associate with the object (see <see cref="M:net.openstack.Core.Providers.IObjectStorageProvider.GetObjectHeaders(System.String,System.String,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)"/>).</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="progressUpdated">A callback for progress updates. If the value is <c>null</c>, no progress updates are reported.</param>
            <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="stream"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="headers"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="objectName"/> is not a valid object name.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="chunkSize"/> is less than 0.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/create-update-object.html">Create or Update Object (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.GetObject(System.String,System.String,System.IO.Stream,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,System.Action{System.Int64},System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Gets an object, writing the data to the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="container">The container name.</param>
            <param name="objectName">The source object name. Example <localUri>image_name.jpeg</localUri></param>
            <param name="outputStream">The output stream.</param>
            <param name="chunkSize">The buffer size to use for copying streaming data.</param>
            <param name="headers">A collection of custom HTTP headers to include with the request.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="verifyEtag">If <c>true</c> and the object includes an ETag, the retrieved data will be verified before returning.</param>
            <param name="progressUpdated">A callback for progress updates. If the value is <c>null</c>, no progress updates are reported.</param>
            <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="outputStream"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="headers"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="objectName"/> is not a valid object name.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="chunkSize"/> is less than 0.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Providers.Rackspace.Exceptions.InvalidETagException">If <paramref name="verifyEtag"/> is <c>true</c>, the object includes an ETag header, and the downloaded data does not match the ETag header value.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/retrieve-object.html">Get Object Details (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.GetObjectSaveToFile(System.String,System.String,System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,System.Action{System.Int64},System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Gets an object, saving the data to the specified file.
            </summary>
            <param name="container">The container name.</param>
            <param name="saveDirectory">The destination directory name. Example <localUri>c:\user\</localUri></param>
            <param name="objectName">The source object name. Example <localUri>image_name.jpeg</localUri></param>
            <param name="fileName">The destination file name. Example <localUri>image_name1.jpeg</localUri></param>
            <param name="chunkSize">The buffer size to use for copying streaming data.</param>
            <param name="headers">A collection of custom HTTP headers to include with the request.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="verifyEtag">If <c>true</c> and the object includes an ETag, the retrieved data will be verified before returning.</param>
            <param name="progressUpdated">A callback for progress updates. If the value is <c>null</c>, no progress updates are reported.</param>
            <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="saveDirectory"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="saveDirectory"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="headers"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="objectName"/> is not a valid object name.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="chunkSize"/> is less than 0.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">If the directory <paramref name="saveDirectory"/> could not be found.</exception>
            <exception cref="T:System.IO.IOException">If an error occurs while writing to the destination file.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Providers.Rackspace.Exceptions.InvalidETagException">If <paramref name="verifyEtag"/> is <c>true</c>, the object includes an ETag header, and the downloaded data does not match the ETag header value.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/retrieve-object.html">Get Object Details (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.CopyObject(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Copies an object to a new location within the Object Storage provider.
            </summary>
            <param name="sourceContainer">The source container name.</param>
            <param name="sourceObjectName">The source object name. Example <localUri>image_name.jpeg</localUri></param>
            <param name="destinationContainer">The destination container name.</param>
            <param name="destinationObjectName">The destination object name. Example <localUri>image_name.jpeg</localUri></param>
            <param name="destinationContentType">The content type of the destination object. If the value is <c>null</c> or empty, the content type of the created object is unspecified.</param>
            <param name="headers">A collection of custom HTTP headers to associate with the created object (see <see cref="M:net.openstack.Core.Providers.IObjectStorageProvider.GetObjectHeaders(System.String,System.String,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)"/>).</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="sourceContainer"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="sourceObjectName"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="destinationContainer"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="destinationObjectName"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="sourceContainer"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="sourceObjectName"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="destinationContainer"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="destinationObjectName"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="headers"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">
            If <paramref name="sourceContainer"/> is not a valid container name.
            <para>-or-</para>
            <para>If <paramref name="destinationContainer"/> is not a valid container name.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">
            If <paramref name="sourceObjectName"/> is not a valid object name.
            <para>-or-</para>
            <para>If <paramref name="destinationObjectName"/> is not a valid object name.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/copy-object.html">Copy Object (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.MoveObject(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
             <summary>
             Moves an object to a new location within the Object Storage provider.
             </summary>
             <remarks>
             The original object is removed only if the move is completed successfully.
            
             <note type="implement">
             If your specific provider does not provide a "Move Object" API function, this
             method may be implemented by performing a <see cref="M:net.openstack.Core.Providers.IObjectStorageProvider.CopyObject(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)"/> operation,
             followed by a <see cref="M:net.openstack.Core.Providers.IObjectStorageProvider.DeleteObject(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)"/> operation if the copy completed
             successfully.
             </note>
             </remarks>
             <param name="sourceContainer">The source container name.</param>
             <param name="sourceObjectName">Name of the source object.<remarks>Example image_name.jpeg</remarks></param>
             <param name="destinationContainer">The destination container name.</param>
             <param name="destinationObjectName">Name of the destination object.<remarks>Example image_name.jpeg</remarks></param>
             <param name="destinationContentType">The content type of the destination object. If the value is <c>null</c> or empty, the content type of the created object is unspecified.</param>
             <param name="headers">A collection of custom HTTP headers to associate with the object (see <see cref="M:net.openstack.Core.Providers.IObjectStorageProvider.GetObjectHeaders(System.String,System.String,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)"/>).</param>
             <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
             <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="sourceContainer"/> is <c>null</c>.
             <para>-or-</para>
             <para>If <paramref name="sourceObjectName"/> is <c>null</c>.</para>
             <para>-or-</para>
             <para>If <paramref name="destinationContainer"/> is <c>null</c>.</para>
             <para>-or-</para>
             <para>If <paramref name="destinationObjectName"/> is <c>null</c>.</para>
             </exception>
             <exception cref="T:System.ArgumentException">
             If <paramref name="sourceContainer"/> is empty.
             <para>-or-</para>
             <para>If <paramref name="sourceObjectName"/> is empty.</para>
             <para>-or-</para>
             <para>If <paramref name="destinationContainer"/> is empty.</para>
             <para>-or-</para>
             <para>If <paramref name="destinationObjectName"/> is empty.</para>
             <para>-or-</para>
             <para>If <paramref name="headers"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">
             If <paramref name="sourceContainer"/> is not a valid container name.
             <para>-or-</para>
             <para>If <paramref name="destinationContainer"/> is not a valid container name.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">
             If <paramref name="sourceObjectName"/> is not a valid object name.
             <para>-or-</para>
             <para>If <paramref name="destinationObjectName"/> is not a valid object name.</para>
             </exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="region"/> is not supported.</para>
             <para>-or-</para>
             <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
             <para>-or-</para>
             <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/copy-object.html">Copy Object (OpenStack Object Storage API v1 Reference)</seealso>
             <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/delete-object.html">Delete Object (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.DeleteObject(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Deletes an object from a container.
            </summary>
            <remarks>
            To support large files, the object storage services allows for a single logical file
            to be split into multiple segments. The <paramref name="deleteSegments"/> parameter
            provides a way to delete a segmented file as though it were stored as a single object
            by deleting both the logical file's metadata and the individual segments. The
            <paramref name="deleteSegments"/> parameter is ignored if the specified object is not
            a segmented file.
            </remarks>
            <param name="container">The container name.</param>
            <param name="objectName">The object name. Example <localUri>image_name.jpeg</localUri></param>
            <param name="headers">A collection of custom HTTP headers to include with the request.</param>
            <param name="deleteSegments">Indicates whether the file's segments should be deleted if any exist.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="headers"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="objectName"/> is not a valid object name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/large-object-creation.html">Create Large Objects (OpenStack Object Storage API v1 Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/delete-object.html">Delete Object (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.PurgeObjectFromCDN(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Purges an object from the CDN, sending an email notification to the specified addresses when the object has been purged.
            </summary>
            <param name="container">The container name.</param>
            <param name="objectName">The object name. Example <localUri>image_name.jpeg</localUri></param>
            <param name="emails">The email addresses to notify once the object has been purged. If this value is <c>null</c>, no email notifications are sent.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="emails"/> contains a null or empty value.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="objectName"/> is not a valid object name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.CDNNotEnabledException">If the specified <paramref name="container"/> is not CDN-enabled.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/Purge_CDN-Enabled_Objects-d1e3858.html">Purge CDN-Enabled Objects (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.GetAccountHeaders(System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Gets the non-metadata headers associated with the specified account.
            </summary>
            <remarks>
            <note type="implement">
            The resulting <see cref="T:System.Collections.Generic.Dictionary`2">Dictionary&lt;string, string&gt;</see>
            should use the <see cref="P:System.StringComparer.OrdinalIgnoreCase"/> equality comparer to ensure
            lookups are not case sensitive.
            </note>
            </remarks>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of non-metadata headers associated with the account.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/retrieve-account-metadata.html">Get Account Metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.GetAccountMetaData(System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
             <summary>
             Gets the account metadata.
             </summary>
             <remarks>
             The metadata associated with accounts in the Object Storage Service are
             case-insensitive.
            
             <note type="implement">
             The resulting <see cref="T:System.Collections.Generic.Dictionary`2">Dictionary&lt;string, string&gt;</see>
             should use the <see cref="P:System.StringComparer.OrdinalIgnoreCase"/> equality comparer to ensure
             lookups are not case sensitive.
             </note>
             </remarks>
             <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
             <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <returns>A collection of metadata associated with the account.</returns>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="region"/> is not supported.</para>
             <para>-or-</para>
             <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
             <para>-or-</para>
             <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/retrieve-account-metadata.html">Get Account Metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IObjectStorageProvider.UpdateAccountMetadata(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Updates the metadata associated with the account. This method is used to add, update, and
            remove metadata items associated with a storage account.
            </summary>
            <remarks>
            Each key/value pair in <paramref name="metadata"/> represents an updated metadata item.
            If the value is <c>null</c> or empty, then the metadata item represented by the key is
            removed if it exists. If a metadata item already exists for the key, its value is updated.
            Otherwise, a new metadata item is added for the key/value pair.
            </remarks>
            <param name="metadata">The account metadata to update.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="metadata"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="metadata"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.
            <para>-or-</para>
            <para>If <paramref name="metadata"/> contains a key or value with invalid characters.</para>
            <para>-or-</para>
            <para>If <paramref name="metadata"/> contains a key that is <c>null</c> or empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>If <paramref name="metadata"/> contains a key or value with characters that are not supported by the implementation.</para>
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/create-update-account-metadata.html">Create or Update Account Metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="T:net.openstack.Core.IObjectStorageMetadataProcessor">
            <summary>
            This interface represents an object that can extract metadata information from a
            collection of HTTP headers returned from a REST request.
            </summary>
        </member>
        <member name="M:net.openstack.Core.IObjectStorageMetadataProcessor.ProcessMetadata(System.Collections.Generic.IList{JSIStudios.SimpleRESTServices.Client.HttpHeader})">
            <summary>
            Extracts metadata information from a collection of HTTP headers. The returned collection
            may include multiple types of metadata information. The keys of the collection represent
            the type of metadata, and the values are key-value collections of the corresponding
            metadata.
            </summary>
            <remarks>
            <note type="implement">
            The resulting metadata dictionaries should use the <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>
            equality comparer to ensure lookups are not case sensitive.
            </note>
            </remarks>
            <param name="httpHeaders">The collection of HTTP headers.</param>
            <returns>The metadata.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="httpHeaders"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="httpHeaders"/> contains any <c>null</c> values.
            <para>-or-</para>
            <para>If <paramref name="httpHeaders"/> contains any values with a null or empty <see cref="P:JSIStudios.SimpleRESTServices.Client.HttpHeader.Key"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="httpHeaders"/> contains two headers with equivalent values for <see cref="P:JSIStudios.SimpleRESTServices.Client.HttpHeader.Key"/> when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
            </exception>
        </member>
        <member name="T:net.openstack.Core.IEncodeDecodeProvider">
            <summary>
            This interface provides methods for encoding and decoding strings which are
            embedded in the query string section of a URL.
            </summary>
        </member>
        <member name="M:net.openstack.Core.IEncodeDecodeProvider.UrlEncode(System.String)">
            <summary>
            Encodes a string for inclusion in a URL.
            </summary>
            <remarks>
            The encoded string can be restored by calling <see cref="M:net.openstack.Core.IEncodeDecodeProvider.UrlDecode(System.String)"/>.
            </remarks>
            <param name="stringToEncode">The string to encode.</param>
            <returns>The encoded string. If <paramref name="stringToEncode"/> is <c>null</c>, this method returns <c>null</c>.</returns>
        </member>
        <member name="M:net.openstack.Core.IEncodeDecodeProvider.UrlDecode(System.String)">
            <summary>
            Decodes a string which is embedded in a URL.
            </summary>
            <param name="stringToDecode">The string to decode.</param>
            <returns>The decoded string. If <paramref name="stringToDecode"/> is <c>null</c>, this method returns <c>null</c>.</returns>
        </member>
        <member name="T:net.openstack.Core.Exceptions.NoDefaultRegionSetException">
            <summary>
            The exception that is thrown when a service endpoint could not be obtained because
            no region was specified and no default region is available for the provider.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Exceptions.NoDefaultRegionSetException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.NoDefaultRegionSetException"/> class
            with the specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:net.openstack.Core.Exceptions.NoDefaultRegionSetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.NoDefaultRegionSetException"/> class with
            serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="info"/> is <c>null</c>.</exception>
        </member>
        <member name="T:net.openstack.Core.Exceptions.ServerEnteredErrorStateException">
            <summary>
            The exception that is thrown when the server enters an error state during a
            call to <see cref="O:IComputeProvider.WaitForServerState"/>.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Exceptions.ServerEnteredErrorStateException.#ctor(net.openstack.Core.Domain.ServerState)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.ServerEnteredErrorStateException"/> class
            with the specified error state.
            </summary>
            <param name="status">The error state entered by the server.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="status"/> is <c>null</c>.</exception>
        </member>
        <member name="P:net.openstack.Core.Exceptions.ServerEnteredErrorStateException.Status">
            <summary>
            Gets the error state the server entered.
            </summary>
            <seealso cref="T:net.openstack.Core.Domain.ServerState"/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Exceptions.NamespaceDoc">
            <summary>
            The <see cref="N:net.openstack.Providers.Rackspace.Exceptions"/> namespace defines
            exception classes for errors which occur while using Rackspace-specific functionality.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.NamespaceDoc">
            <summary>
            The <see cref="N:net.openstack.Providers.Rackspace"/> namespaces provide an
            implementation of the core OpenStack interfaces for accessing Rackspace
            products and services, as well as additional Rackspace-specific functionality.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.ArchiveFormat">
            <summary>
            Represents a archive format for the Cloud Files Extract Archive operation.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known archive types,
            with added support for unknown types returned or supported by a server extension.
            </remarks>
            <seealso cref="M:net.openstack.Providers.Rackspace.CloudFilesProvider.ExtractArchive(System.IO.Stream,System.String,net.openstack.Providers.Rackspace.Objects.ArchiveFormat,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Action{System.Int64},System.Boolean,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso cref="M:net.openstack.Providers.Rackspace.CloudFilesProvider.ExtractArchiveFromFile(System.String,System.String,net.openstack.Providers.Rackspace.Objects.ArchiveFormat,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Action{System.Int64},System.Boolean,net.openstack.Core.Domain.CloudIdentity)"/>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.ArchiveFormat.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.ArchiveFormat"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.ArchiveFormat.FromName(System.String)">
            <summary>
            Gets the <see cref="T:net.openstack.Providers.Rackspace.Objects.ArchiveFormat"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.ArchiveFormat.Tar">
            <summary>
            Gets an <see cref="T:net.openstack.Providers.Rackspace.Objects.ArchiveFormat"/> representing <c>tar</c> files.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.ArchiveFormat.TarGz">
            <summary>
            Gets an <see cref="T:net.openstack.Providers.Rackspace.Objects.ArchiveFormat"/> representing <c>tar.gz</c> files.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.ArchiveFormat.TarBz2">
            <summary>
            Gets an <see cref="T:net.openstack.Providers.Rackspace.Objects.ArchiveFormat"/> representing <c>tar.bz2</c> files.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.ArchiveFormat.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Providers.Rackspace.Objects.ArchiveFormat"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.ArchiveFormat.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.BulkDeletionFailedObject">
            <summary>
            Describes an object which could not be deleted by a bulk deletion operation,
            along with a status providing the reason why the deletion failed.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.BulkDeletionFailedObject.#ctor(System.String,net.openstack.Core.Domain.Status)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.BulkDeletionFailedObject"/> class
            with the specified object name and status.
            </summary>
            <param name="obj">The name of the object which could not be deleted.</param>
            <param name="status">A <see cref="P:net.openstack.Providers.Rackspace.Objects.BulkDeletionFailedObject.Status"/> object describing the reason the object could not be deleted.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="obj"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="status"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="obj"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.BulkDeletionFailedObject.Status">
            <summary>
            Gets a <see cref="P:net.openstack.Providers.Rackspace.Objects.BulkDeletionFailedObject.Status"/> object describing the reason the object
            could not be deleted.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.BulkDeletionFailedObject.Object">
            <summary>
            Gets the name of the object which could not be deleted.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.BulkDeletionResults">
            <summary>
            Represents the detailed results of a bulk deletion operation.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.BulkDeletionResults.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.BulkDeletionFailedObject})">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.BulkDeletionResults"/> class
            with the specified collections of successful and failed objects.
            </summary>
            <param name="successfulObjects">The objects which were successfully deleted.</param>
            <param name="failedObjects">The objects which could not be deleted.</param>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.BulkDeletionResults.SuccessfulObjects">
            <summary>
            Gets a collection objects which were successfully deleted.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.BulkDeletionResults.FailedObjects">
            <summary>
            Gets a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.BulkDeletionFailedObject"/> objects providing
            the name and status of objects which could not be deleted during the bulk
            deletion operation.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Domain">
            <summary>
            Represents the domain for a user account.
            </summary>
            <remarks>
            <note type="warning">
            This property is an undocumented Rackspace-specific extension to the OpenStack Identity Service.
            </note>
            </remarks>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Domain.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Domain"/> class with the specified domain.
            </summary>
            <param name="name">The domain name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Domain.Name">
            <summary>
            Gets the "name" property for the domain.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsChange">
            <summary>
            Represents a change made to a DNS record.
            </summary>
            <seealso cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChange"/>
            <seealso cref="M:net.openstack.Providers.Rackspace.IDnsService.ListDomainChangesAsync(net.openstack.Providers.Rackspace.Objects.Dns.DomainId,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)"/>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/List_Domain_Changes.html">List Domain Changes (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsChange._field">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsChange.Field"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsChange._originalValue">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsChange.OriginalValue"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsChange._newValue">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsChange.NewValue"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsChange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsChange"/> class during
            JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsChange.Field">
            <summary>
            Gets the name of the field which changed.
            </summary>
            <value>
            The name of the field which changed, or <c>null</c> if the JSON response from the
            server did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsChange.OriginalValue">
            <summary>
            Gets the value of the field before the change was made.
            </summary>
            <value>
            The original value of the field which changed, or <c>null</c> if the JSON response
            from the server did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsChange.NewValue">
            <summary>
            Gets the value of the field after the change was made.
            </summary>
            <value>
            The new value of the field which changed, or <c>null</c> if the JSON response
            from the server did not include this property.
            </value>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsConfiguration">
            <summary>
            Represents the configuration of a collection of domains being added to the DNS service.
            </summary>
            <remarks>
            <note type="inherit">
            This class can be extended if a server extension requires additional information (beyond
            the <c>domains</c> property which is already supported) be sent in the body of a
            <strong>Create Domain</strong> API call.
            </note>
            </remarks>
            <seealso cref="M:net.openstack.Providers.Rackspace.IDnsService.CreateDomainsAsync(net.openstack.Providers.Rackspace.Objects.Dns.DnsConfiguration,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomains}})"/>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsConfiguration._domainConfiguration">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsConfiguration.DomainConfigurations"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsConfiguration.#ctor(net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration[])">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsConfiguration"/> class for the
            specified domains.
            </summary>
            <param name="domainConfigurations">A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration"/> objects describing the domains.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="domainConfigurations"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="domainConfigurations"/> contains a <c>null</c> value.</exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsConfiguration.#ctor(System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration})">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsConfiguration"/> class for the
            specified domains.
            </summary>
            <param name="domainConfigurations">A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration"/> objects describing the domains.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="domainConfigurations"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="domainConfigurations"/> contains a <c>null</c> value.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsConfiguration.DomainConfigurations">
            <summary>
            Gets a collection of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration"/> objects describing
            domains in this configuration.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain">
            <summary>
            This class models the JSON representation of a domain within the DNS service.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain._emailAddress">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.EmailAddress"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain._updated">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Updated"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain._created">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Created"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain._accountId">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.AccountId"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain._name">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Name"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain._id">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Id"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain._comment">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Comment"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain._nameservers">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Nameservers"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain._timeToLive">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.TimeToLive"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain._recordsList">
            <summary>
            This is an intermediate representation for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Records"/> property,
            which is necessary for correctly modeling the JSON response from the server.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain._subdomains">
            <summary>
            This is an intermediate representation for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Subdomains"/> property,
            which is necessary for correctly modeling the JSON response from the server.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain"/> class during
            JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Name">
            <summary>
            Gets the domain name.
            </summary>
            <value>
            The name of the domain, or <c>null</c> if the JSON response from the server
            did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Id">
            <summary>
            Gets the unique ID representing this domain within the DNS service.
            </summary>
            <value>
            The unique ID for the domain, or <c>null</c> if the JSON response from the server
            did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Comment">
            <summary>
            Gets the comment associated with this domain.
            </summary>
            <value>
            The comment for the domain, or <c>null</c> if the JSON response from the server
            did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.AccountId">
            <summary>
            Gets the account ID associated with this domain. The account ID within the DNS service
            is equivalent to the <see cref="P:net.openstack.Core.Domain.Tenant.Id">Tenant.Id</see> referenced by other services.
            </summary>
            <value>
            The account ID for the domain, or <c>null</c> if the JSON response from the server
            did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.EmailAddress">
            <summary>
            Gets the email address associated with this domain.
            </summary>
            <value>
            The email address for the domain, or <c>null</c> if the JSON response from the server
            did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Created">
            <summary>
            Gets the timestamp when this domain was first added to the DNS service.
            </summary>
            <value>
            The creation timestamp for the domain, or <c>null</c> if the JSON response from the server
            did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Updated">
            <summary>
            Gets the timestamp when this domain was last updated within the DNS service.
            </summary>
            <value>
            The last-updated timestamp for the domain, or <c>null</c> if the JSON response from the server
            did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Records">
            <summary>
            Gets a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord"/> objects describing the DNS records for the domain.
            </summary>
            <value>
            A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord"/> objects, or <c>null</c> if the JSON response from the
            server did not include the associated property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Subdomains">
            <summary>
            Gets a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomain"/> objects describing the DNS subdomains for the domain.
            </summary>
            <value>
            A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomain"/> objects, or <c>null</c> if the JSON response from the
            server did not include the associated property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Nameservers">
            <summary>
            Gets a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsNameserver"/> objects describing the DNS nameservers for the domain.
            </summary>
            <value>
            A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsNameserver"/> objects, or <c>null</c> if the JSON response from the
            server did not include the associated property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.TimeToLive">
            <summary>
            Gets the time-to-live for the domain.
            </summary>
            <value>
            A <see cref="T:System.TimeSpan"/> object containing the time-to-live for the domain, or <c>null</c> if the
            JSON response from the server did not include the associated property.
            </value>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChange">
            <summary>
            This object represents changes made to a specific resource in the DNS service as the
            result of a single logical action.
            </summary>
            <seealso cref="M:net.openstack.Providers.Rackspace.IDnsService.ListDomainChangesAsync(net.openstack.Providers.Rackspace.Objects.Dns.DomainId,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)"/>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/List_Domain_Changes.html">List Domain Changes (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChange._action">
            <summary>
            This the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChange.Action"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChange._targetType">
            <summary>
            This the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChange.TargetType"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChange._targetId">
            <summary>
            This the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChange.TargetId"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChange._details">
            <summary>
            This the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChange.Details"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChange._accountId">
            <summary>
            This the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChange.AccountId"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChange._domainName">
            <summary>
            This the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChange.DomainName"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChange"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChange.Action">
            <summary>
            Gets the name of the action which made this change.
            </summary>
            <value>
            The name of the action which made this change, or <c>null</c> if the JSON response from the
            server did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChange.TargetType">
            <summary>
            Gets the resource type which was changed.
            </summary>
            <value>
            The type of resource which was changed, or <c>null</c> if the JSON response from the
            server did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChange.TargetId">
            <summary>
            Gets the unique identifier of the resource which was changed.
            </summary>
            <value>
            The unique identifier of the resource which was changed, or <c>null</c> if the JSON
            response from the server did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChange.Details">
            <summary>
            Gets a collection of specific changes made to the target resource.
            </summary>
            <value>
            A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsChange"/> objects describing the changes made to the resource,
            or <c>null</c> if the JSON response from the server did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChange.AccountId">
            <summary>
            Gets the account ID under which this change was made. The account ID within the DNS service
            is equivalent to the <see cref="P:net.openstack.Core.Domain.Tenant.Id">Tenant.Id</see> referenced by other services.
            </summary>
            <value>
            The account ID under which this change was made, or <c>null</c> if the JSON response from the server
            did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChange.DomainName">
            <summary>
            Gets the name of the domain this resource belongs to.
            </summary>
            <value>
            The name of the domain the changed resource belongs to, or <c>null</c> if the JSON response from
            the server did not include this property.
            </value>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChanges">
            <summary>
            This class represents the changes made to various DNS resources as a result of
            logical actions made during a particular interval of time.
            </summary>
            <seealso cref="M:net.openstack.Providers.Rackspace.IDnsService.ListDomainChangesAsync(net.openstack.Providers.Rackspace.Objects.Dns.DomainId,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)"/>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/List_Domain_Changes.html">List Domain Changes (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChanges._totalEntries">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChanges.TotalEntries"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChanges._from">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChanges.From"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChanges._to">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChanges.To"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChanges._changes">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChanges.Changes"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChanges.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChanges"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChanges.TotalEntries">
            <summary>
            Gets the total number of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChange"/> objects in the time interval
            described by <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChanges.From"/> and <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChanges.To"/>.
            </summary>
            <remarks>
            This value may exceed the number of items in the collection returned by the
            <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChanges.Changes"/> property since the <see cref="M:net.openstack.Providers.Rackspace.IDnsService.ListDomainChangesAsync(net.openstack.Providers.Rackspace.Objects.Dns.DomainId,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)"/>
            method returns a subset of the complete paginated collection.
            </remarks>
            <value>
            The total number of changes in this time interval, or <c>null</c> if the JSON response
            from the server did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChanges.From">
            <summary>
            Gets the starting timestamp of this collection of changes to DNS resources.
            </summary>
            <value>
            The starting timestamp of this collection of changes to DNS resources, or <c>null</c>
            if the JSON response from the server did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChanges.To">
            <summary>
            Gets the ending timestamp of this collection of changes to DNS resources.
            </summary>
            <value>
            The ending timestamp of this collection of changes to DNS resources, or <c>null</c>
            if the JSON response from the server did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChanges.Changes">
            <summary>
            Gets a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChange"/> objects describing changes made
            to DNS resources as a result of logical actions performed during the time interval.
            </summary>
            <value>
            A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainChange"/> objects describing changes made to
            DNS resources, or <c>null</c> if the JSON response from the server did not include
            this property.
            </value>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration">
            <summary>
            This class represents a domain configuration for calls to <see cref="M:net.openstack.Providers.Rackspace.IDnsService.CreateDomainsAsync(net.openstack.Providers.Rackspace.Objects.Dns.DnsConfiguration,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomains}})"/>.
            </summary>
            <seealso cref="M:net.openstack.Providers.Rackspace.IDnsService.CreateDomainsAsync(net.openstack.Providers.Rackspace.Objects.Dns.DnsConfiguration,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomains}})"/>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/create_domains.html">Create Domain(s) (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration._recordsList">
            <summary>
            This is the backing field for the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.RecordsList"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration._subdomains">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.Subdomains"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration._emailAddress">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.EmailAddress"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration._timeToLive">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.TimeToLive"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration._name">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.Name"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration._comment">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.Comment"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.#ctor(System.String,System.Nullable{System.TimeSpan},System.String,System.String,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration},System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomainConfiguration})">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration"/> class with
            the specified values.
            </summary>
            <param name="name">The fully-qualified domain name.</param>
            <param name="timeToLive">The time-to-live for the domain.</param>
            <param name="emailAddress">The email address associated with the domain.</param>
            <param name="comment">An optional comment associated with the domain.</param>
            <param name="records">A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration"/> objects describing the initial DNS records to associate with the domain.</param>
            <param name="subdomains">A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomainConfiguration"/> objects containing the initial subdomains to create with the domain.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="name"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="emailAddress"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="records"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="subdomains"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="name"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="records"/> contains any <c>null</c> values.</para>
            <para>-or-</para>
            <para>If <paramref name="subdomains"/> contains any <c>null</c> values.</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="timeToLive"/> is negative or <see cref="F:System.TimeSpan.Zero"/>.</exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.#ctor(System.String,System.Nullable{System.TimeSpan},System.String,System.String,net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.RecordsList,net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.SubdomainsList)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration"/> class with
            the specified values.
            </summary>
            <remarks>
            <note type="inherit">
            Derived types may use this constructor to create a configuration with class derived from
            <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.RecordsList"/> or <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.SubdomainsList"/> should a server change or extension
            require additional information be passed in the body of the request.
            </note>
            </remarks>
            <param name="name">The fully-qualified domain name.</param>
            <param name="timeToLive">The time-to-live for the domain.</param>
            <param name="emailAddress">The email address associated with the domain.</param>
            <param name="comment">An optional comment associated with the domain.</param>
            <param name="records">A <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.RecordsList"/> object containing the initial DNS records to associate with the domain.</param>
            <param name="subdomains">A <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.SubdomainsList"/> object containing the initial subdomains to create with the domain.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="name"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="emailAddress"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="records"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="subdomains"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="timeToLive"/> is negative or <see cref="F:System.TimeSpan.Zero"/>.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.Name">
            <summary>
            Gets the fully-qualified domain name.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.EmailAddress">
            <summary>
            Gets the email address associated with the domain.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.Comment">
            <summary>
            Gets the optional comment associated with the domain.
            </summary>
            <value>
            The comment to associate with the domain, or <c>null</c> if no comment should be
            associated with the domain.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.TimeToLive">
            <summary>
            Gets the time-to-live for the domain.
            </summary>
            <value>
            The time-to-live for the domain, or <c>null</c> if the time-to-live should be automatically
            assigned by the server when the domain is created.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.Records">
            <summary>
            Gets a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration"/> objects describing the
            initial DNS records to create with this domain.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.Subdomains">
            <summary>
            Gets a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomainConfiguration"/> objects describing the
            initial DNS subdomains to create with this domain.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.RecordsList">
            <summary>
            This class models the value of the <literal>recordsList</literal> property in the JSON
            request body sent to the <strong>Create Domain(s)</strong> API.
            </summary>
            <remarks>
            <note type="inherit">
            Derived types may extend this class to customize the JSON request should a server change
            or extension require additional information be passed in the body of the request.
            </note>
            </remarks>
            <seealso cref="M:net.openstack.Providers.Rackspace.IDnsService.CreateDomainsAsync(net.openstack.Providers.Rackspace.Objects.Dns.DnsConfiguration,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomains}})"/>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/create_domains.html">Create Domain(s) (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.RecordsList._records">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.RecordsList.Records"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.RecordsList.#ctor(System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration})">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.RecordsList"/> class with the
            specified DNS record configurations.
            </summary>
            <param name="records">A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration"/> objects describing the DNS records to associate with a domain.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="records"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="records"/> contains any <c>null</c> values.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.RecordsList.Records">
            <summary>
            Gets a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration"/> objects describing the DNS records to associate with a domain.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.SubdomainsList">
            <summary>
            This class models the value of the <literal>subdomains</literal> property in the JSON
            request body sent to the <strong>Create Domain(s)</strong> API.
            </summary>
            <remarks>
            <note type="inherit">
            Derived types may extend this class to customize the JSON request should a server change
            or extension require additional information be passed in the body of the request.
            </note>
            </remarks>
            <seealso cref="M:net.openstack.Providers.Rackspace.IDnsService.CreateDomainsAsync(net.openstack.Providers.Rackspace.Objects.Dns.DnsConfiguration,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomains}})"/>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/create_domains.html">Create Domain(s) (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.SubdomainsList._subdomains">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.SubdomainsList.Subdomains"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.SubdomainsList.#ctor(System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomainConfiguration})">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.SubdomainsList"/> class with the
            specified subdomain configurations.
            </summary>
            <param name="subdomains">A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomainConfiguration"/> objects describing the subdomains to associate with a domain.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="subdomains"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="subdomains"/> contains any <c>null</c> values.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainConfiguration.SubdomainsList.Subdomains">
            <summary>
            Gets a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomainConfiguration"/> objects describing the subdomains to associate with a domain.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration">
            <summary>
            This models a DNS record for the <see cref="M:net.openstack.Providers.Rackspace.IDnsService.CreateDomainsAsync(net.openstack.Providers.Rackspace.Objects.Dns.DnsConfiguration,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomains}})"/>
            and <see cref="M:net.openstack.Providers.Rackspace.IDnsService.AddRecordsAsync(net.openstack.Providers.Rackspace.Objects.Dns.DomainId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordsList}})"/> calls.
            </summary>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/supported_record_types.html">Supported Record Types (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/Add_Records-d1e4895.html">Add Records (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration._name">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration.Name"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration._type">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration.Type"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration._data">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration.Data"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration._timeToLive">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration.TimeToLive"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration._comment">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration.Comment"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration._priority">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration.Priority"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration.#ctor(net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType,System.String,System.String,System.Nullable{System.TimeSpan},System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration"/> class
            with the specified values.
            </summary>
            <param name="type">The DNS record type.</param>
            <param name="name">The DNS record name.</param>
            <param name="data">The data to associate with the DNS record.</param>
            <param name="timeToLive">The time-to-live for the DNS record. If not specified, a provider-specific default value will be used.</param>
            <param name="comment">An optional comment to associate with the DNS record.</param>
            <param name="priority">The priority of the DNS record. This is only specified for <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType.Mx"/> and <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType.Srv"/> records.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="type"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="name"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="data"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="name"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="data"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="priority"/> is specified and <paramref name="type"/> is <em>not</em> <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType.Mx"/> or <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType.Srv"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="priority"/> is <em>not</em> specified and <paramref name="type"/> is <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType.Mx"/> or <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType.Srv"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="timeToLive"/> is negative.
            <para>-or-</para>
            <para>If <paramref name="priority"/> is less than 0.</para>
            </exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration.Type">
            <summary>
            Gets the DNS record type.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration.Name">
            <summary>
            Gets the name of the DNS record.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration.Data">
            <summary>
            Gets the data for this DNS record.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration.TimeToLive">
            <summary>
            Gets the time-to-live for the DNS record.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration.Comment">
            <summary>
            Gets the optional comment associated with the DNS record.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordConfiguration.Priority">
            <summary>
            Gets the priority associated with the DNS record.
            </summary>
            <remarks>
            The priority only applies to <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType.Mx"/> and <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType.Srv"/>
            records. For other record types, this property is <c>null</c>.
            </remarks>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration">
            <summary>
            This models a DNS record configuration update for the <see cref="M:net.openstack.Providers.Rackspace.IDnsService.UpdateRecordsAsync(net.openstack.Providers.Rackspace.Objects.Dns.DomainId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob})"/> call.
            </summary>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/supported_record_types.html">Supported Record Types (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/Modify_Records-d1e5033.html">Modify Records (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration._id">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration.Id"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration._name">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration.Name"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration._data">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration.Data"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration._timeToLive">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration.TimeToLive"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration._comment">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration.Comment"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration._priority">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration.Priority"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration.#ctor(net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord,System.String,System.String,System.Nullable{System.TimeSpan},System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration"/> class
            with the specified values.
            </summary>
            <param name="record">The DNS record to update.</param>
            <param name="name">The DNS record name.</param>
            <param name="data">The data to associate with the DNS record. If this value is <c>null</c>, the existing value for the record is not changed.</param>
            <param name="timeToLive">The time-to-live for the DNS record. If this value is <c>null</c>, the existing value for the record is not changed.</param>
            <param name="comment">An optional comment to associate with the DNS record. If this value is <c>null</c>, the existing value for the record is not changed.</param>
            <param name="priority">The priority of the DNS record. This is only specified for <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType.Mx"/> and <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType.Srv"/> records. If this value is <c>null</c>, the existing value for the record is not changed.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="record"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="name"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="name"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="data"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="priority"/> is specified and the type of <paramref name="record"/> is <em>not</em> <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType.Mx"/> or <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType.Srv"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="timeToLive"/> is negative.
            <para>-or-</para>
            <para>If <paramref name="priority"/> is less than 0.</para>
            </exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration.Id">
            <summary>
            Gets the unique ID of the record to update within the DNS service.
            </summary>
            <value>
            The unique ID for the record.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration.Name">
            <summary>
            Gets the name of the DNS record.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration.Data">
            <summary>
            Gets the data for this DNS record.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration.TimeToLive">
            <summary>
            Gets the time-to-live for the DNS record.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration.Comment">
            <summary>
            Gets the optional comment associated with the DNS record.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainRecordUpdateConfiguration.Priority">
            <summary>
            Gets the priority associated with the DNS record.
            </summary>
            <remarks>
            The priority only applies to <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType.Mx"/> and <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType.Srv"/>
            records. For other record types, this property is <c>null</c>.
            </remarks>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomains">
            <summary>
            This class represents a collection of DNS domains returned from a call to create, clone, or
            import domains in the DNS service.
            </summary>
            <seealso cref="M:net.openstack.Providers.Rackspace.IDnsService.CreateDomainsAsync(net.openstack.Providers.Rackspace.Objects.Dns.DnsConfiguration,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomains}})"/>
            <seealso cref="M:net.openstack.Providers.Rackspace.IDnsService.CloneDomainAsync(net.openstack.Providers.Rackspace.Objects.Dns.DomainId,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomains}})"/>
            <seealso cref="M:net.openstack.Providers.Rackspace.IDnsService.ImportDomainAsync(System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomain},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomains}})"/>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/create_domains.html">Create Domain(s) (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/clone_domain-dle846.html">Clone Domain (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/import_domain.html">Import Domain (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomains._domains">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomains.Domains"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomains.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomains"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomains.Domains">
            <summary>
            Gets a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain"/> objects describing domains in the DNS service.
            </summary>
            <value>
            A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain"/> objects describing domains in the DNS service, or
            <c>null</c> if the JSON response from the server did not include this property.
            </value>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainUpdateConfiguration">
            <summary>
            This class models the JSON representation of a domain within the DNS service.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainUpdateConfiguration._emailAddress">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainUpdateConfiguration.EmailAddress"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainUpdateConfiguration._id">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainUpdateConfiguration.Id"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainUpdateConfiguration._comment">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainUpdateConfiguration.Comment"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainUpdateConfiguration._timeToLive">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainUpdateConfiguration.TimeToLive"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainUpdateConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainUpdateConfiguration"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainUpdateConfiguration.#ctor(net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain,System.String,System.String,System.Nullable{System.TimeSpan})">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainUpdateConfiguration"/> class with
            the specified values.
            </summary>
            <param name="domain">The domain to update.</param>
            <param name="timeToLive">The time-to-live for the domain. If this value is <c>null</c>, the existing value for the domain is not updated.</param>
            <param name="emailAddress">The email address associated with the domain. If this value is <c>null</c>, the existing value for the domain is not updated.</param>
            <param name="comment">An optional comment associated with the domain. If this value is <c>null</c>, the existing value for the domain is not updated.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="domain"/> is <c>null</c>.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainUpdateConfiguration.Id">
            <summary>
            Gets the unique ID representing this domain within the DNS service.
            </summary>
            <value>
            The unique ID for the domain.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainUpdateConfiguration.Comment">
            <summary>
            Gets the comment associated with this domain.
            </summary>
            <value>
            The comment for the domain, or <c>null</c> if
            the current comment for the domain should not be changed.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainUpdateConfiguration.EmailAddress">
            <summary>
            Gets the email address associated with this domain.
            </summary>
            <value>
            The email address for the domain, or <c>null</c> if the current email address for the
            domain should not be changed.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainUpdateConfiguration.TimeToLive">
            <summary>
            Gets the time-to-live for the domain.
            </summary>
            <value>
            A <see cref="T:System.TimeSpan"/> object containing the time-to-live for the domain, or <c>null</c> if
            the current time-to-live for the domain should not be changed.
            </value>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob">
            <summary>
            Represents the job resource associated with a server-side asynchronous
            operation being performed by the DNS service.
            </summary>
            <seealso cref="M:net.openstack.Providers.Rackspace.IDnsService.GetJobStatusAsync(net.openstack.Providers.Rackspace.Objects.Dns.DnsJob,System.Boolean,System.Threading.CancellationToken)"/>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/sync_asynch_responses.html">Synchronous and Asynchronous Responses (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob._request">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.Request"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob._status">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.Status"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob._verb">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.Verb"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob._id">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.Id"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob._callbackUrl">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.CallbackUri"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob._requestUrl">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.RequestUri"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob._error">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.Error"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.Id">
            <summary>
            Gets the unique ID for this job.
            </summary>
            <value>
            The unique ID for the job, or <c>null</c> if the JSON response from the server
            did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.Status">
            <summary>
            Gets the status for this job.
            </summary>
            <value>
            The current status of the job, or <c>null</c> if the JSON response from the server
            did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.CallbackUri">
            <summary>
            Gets the <see cref="T:System.Uri"/> representing the job resource itself.
            </summary>
            <value>
            The URI for the current job resource, or <c>null</c> if the JSON response
            from the server did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.RequestUri">
            <summary>
            Gets the original <see cref="T:System.Uri"/> for which this job resource was
            created.
            </summary>
            <value>
            The URI for for which this job resource was created, or <c>null</c>
            if the JSON response from the server did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.Verb">
            <summary>
            Gets the HTTP method used for the API call that created this job resource.
            </summary>
            <value>
            The HTTP method used for the API call for which this job resource was
            created, or <c>null</c> if the JSON response from the server did not
            include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.Request">
            <summary>
            Gets the body of the original HTTP request for which this job resource
            was created.
            </summary>
            <value>
            The body of the original HTTP request for which this job resource was
            created, or <c>null</c> if the JSON response from the server did not
            include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.Error">
            <summary>
            Gets a <see cref="T:Newtonsoft.Json.Linq.JObject"/> containing information about the specific
            error which occurred during the execution of this job. This property
            is only set when the job <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.Status"/> is <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Error"/>.
            </summary>
            <value>
            A <see cref="T:Newtonsoft.Json.Linq.JObject"/> object representing the JSON-formatted information
            about the error that occurred while this task was running, or <c>null</c>
            if the JSON response from the server did not include this property.
            </value>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus">
            <summary>
            Represents the status of a DNS job.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known statuses,
            with added support for unknown statuses returned by a server extension.
            </remarks>
            <seealso cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.Status"/>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.FromName(System.String)">
            <summary>
            Gets the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Initialized">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus"/> representing a job which has been accepted by the DNS service but has not yet started.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Running">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus"/> representing a job which is currently running.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Completed">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus"/> representing a job which completed successfully.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Error">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus"/> representing a job which terminated with an error.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob`1">
            <summary>
            Represents an asynchronous job which provides a strongly-typed response
            once the job <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.Status"/> reaches <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJobStatus.Completed"/>.
            </summary>
            <typeparam name="TResponse">The class modeling the JSON result of the asynchronous operation.</typeparam>
            <seealso cref="M:net.openstack.Providers.Rackspace.IDnsService.GetJobStatusAsync``1(net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{``0},System.Boolean,System.Threading.CancellationToken)"/>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/sync_asynch_responses.html">Synchronous and Asynchronous Responses (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob`1._response">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob`1.Response"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob`1"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob`1.Response">
            <summary>
            Gets the strongly-typed response from this job.
            </summary>
            <value>
            A <typeparamref name="TResponse"/> object representing the JSON-formatted
            response from the asynchronous operation, or <c>null</c> if the JSON
            response from the server did not include this property.
            </value>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsNameserver">
            <summary>
            This class models the JSON representation of a nameserver associated with a domain
            in the DNS service.
            </summary>
            <seealso cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Nameservers"/>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/list_domain_details.html">List Domain Details (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsNameserver._name">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsNameserver.Name"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsNameserver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsNameserver"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsNameserver.Name">
            <summary>
            Gets the fully-qualified domain name of the nameserver.
            </summary>
            <value>
            The fully-qualified domain name of the nameserver, or <c>null</c> if the JSON
            response from the server did not include this property.
            </value>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimit">
            <summary>
            This class models the detailed parameters of a specific single rate limit within
            the DNS service.
            </summary>
            <seealso cref="M:net.openstack.Providers.Rackspace.IDnsService.ListLimitsAsync(System.Threading.CancellationToken)"/>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/List_All_Limits.html">List All Limits (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimit._verb">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimit.Verb"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimit._unit">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimit.Unit"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimit._value">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimit.Value"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimit._remaining">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimit.Remaining"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimit._nextAvailable">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimit.NextAvailable"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimit.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimit"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimit.Verb">
            <summary>
            Gets the HTTP method associated with the rate limit.
            </summary>
            <value>
            The specific HTTP method which is rate limited, or <c>null</c> if the JSON
            response from the server did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimit.Unit">
            <summary>
            Gets the time unit this rate limit is measured in.
            </summary>
            <value>
            The time unit used for measuring this rate limit, or <c>null</c> if the JSON
            response from the server did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimit.Value">
            <summary>
            Gets the rate limit, in number of times an API call can be made using the
            <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimit.Verb"/> HTTP method in the measuring time <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimit.Unit"/>.
            </summary>
            <value>
            The rate limit value, or <c>null</c> if the JSON response from the server
            did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimit.Remaining">
            <summary>
            Gets the number of calls remaining in the current time unit.
            </summary>
            <value>
            The number of calls remaining within the current rate limit time unit, or
            <c>null</c> if the JSON response from the server did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimit.NextAvailable">
            <summary>
            Gets a timestamp indicating when the rate limit next resets.
            </summary>
            <value>
            The timestamp for when the rate limit next resets, or <c>null</c> if the
            JSON response from the server did not include this property.
            </value>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimitPattern">
            <summary>
            This class describes the rate limits in effect for resource URIs matching
            a specific pattern.
            </summary>
            <seealso cref="M:net.openstack.Providers.Rackspace.IDnsService.ListLimitsAsync(System.Threading.CancellationToken)"/>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/List_All_Limits.html">List All Limits (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimitPattern._uri">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimitPattern.Uri"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimitPattern._regex">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimitPattern.RegularExpression"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimitPattern._limit">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimitPattern.Limit"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimitPattern.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimitPattern"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimitPattern.Uri">
            <summary>
            Gets a display representation of the URIs which are limited by this pattern.
            </summary>
            <value>
            A display representation of the URIs which are limited by this pattern, or
            <c>null</c> if the JSON response from the server did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimitPattern.RegularExpression">
            <summary>
            Gets a regular expression pattern intended to match the URIs which are limited by this pattern.
            </summary>
            <value>
            A regular expression pattern intended to match the URIs which are limited by this pattern, or
            <c>null</c> if the JSON response from the server did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimitPattern.Limit">
            <summary>
            Gets a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimit"/> objects describing the specific limits in
            effect for the resources at URIs described by this pattern.
            </summary>
            <value>
            A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimit"/> objects describing the specific limits, or
            <c>null</c> if the JSON response from the server did not include this property.
            </value>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimits">
            <summary>
            This class models the rate limits in effect for the DNS service.
            </summary>
            <seealso cref="M:net.openstack.Providers.Rackspace.IDnsService.ListLimitsAsync(System.Threading.CancellationToken)"/>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/List_All_Limits.html">List All Limits (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimits._rate">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimits.Rate"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimits.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimits"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimits.Rate">
            <summary>
            Gets a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimitPattern"/> objects describing the
            rate limits in effect for various DNS resources.
            </summary>
            <value>
            A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimitPattern"/> objects describing DNS rate
            limits, or <c>null</c> if the JSON response from the server did not include
            this property.
            </value>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimitUnit">
            <summary>
            Represents the time unit used for measuring a rate limit in the DNS service.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known time units,
            with added support for unknown formats returned by a server extension.
            </remarks>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimitUnit.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimitUnit"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimitUnit.FromName(System.String)">
            <summary>
            Gets the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimitUnit"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimitUnit.Second">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimitUnit"/> representing a rate limit measured in seconds.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimitUnit.Minute">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimitUnit"/> representing a rate limit measured in minutes.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimitUnit.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimitUnit"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimitUnit.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord">
            <summary>
            This class describes a single record associated with a domain in the DNS service.
            </summary>
            <seealso cref="M:net.openstack.Providers.Rackspace.IDnsService.ListRecordDetailsAsync(net.openstack.Providers.Rackspace.Objects.Dns.DomainId,net.openstack.Providers.Rackspace.Objects.Dns.RecordId,System.Threading.CancellationToken)"/>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/List_Record_Details-d1e4770.html">List Record Details (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord._timeToLive">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord.TimeToLive"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord._name">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord.Name"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord._id">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord.Id"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord._type">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord.Type"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord._comment">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord.Comment"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord._data">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord.Data"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord._priority">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord.Priority"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord._created">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord.Created"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord._updated">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord.Updated"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord.Id">
            <summary>
            Gets the unique ID representing this record within the DNS service.
            </summary>
            <value>
            The unique ID for the record, or <c>null</c> if the JSON response from the server
            did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord.Type">
            <summary>
            Gets the DNS record type.
            </summary>
            <value>
            The DNS record type, or <c>null</c> if the JSON response from the server
            did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord.Name">
            <summary>
            Gets the name of the DNS record.
            </summary>
            <value>
            The DNS record name, or <c>null</c> if the JSON response from the server
            did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord.Data">
            <summary>
            Gets the data associated with the DNS record.
            </summary>
            <value>
            The DNS record data, or <c>null</c> if the JSON response from the server
            did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord.TimeToLive">
            <summary>
            Gets the time-to-live for the DNS record.
            </summary>
            <value>
            The time-to-live of the DNS record, or <c>null</c> if the JSON response from the server
            did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord.Created">
            <summary>
            Gets the timestamp when this DNS record was initially created.
            </summary>
            <value>
            The creation timestamp of the DNS record, or <c>null</c> if the JSON response from the server
            did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord.Updated">
            <summary>
            Gets the timestamp when this DNS record was last updated.
            </summary>
            <value>
            The last-updated timestamp of the DNS record, or <c>null</c> if the JSON response from the server
            did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord.Priority">
            <summary>
            Gets the priority of this DNS record.
            </summary>
            <value>
            The priority of the DNS record, or <c>null</c> if the JSON response from the server
            did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord.Comment">
            <summary>
            Gets the optional comment associated with the DNS record.
            </summary>
            <value>
            The comment associated with the DNS record, or <c>null</c> if the JSON response from the server
            did not include this property or if the record does not have an associated comment.
            </value>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordsList">
            <summary>
            This class models the object associated with the <c>"recordsList"</c> property in
            the JSON model for a DNS domain.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordsList._records">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordsList.Records"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordsList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordsList"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordsList.Records">
            <summary>
            Gets a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord"/> objects describing the DNS records
            associated with a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain"/>.
            </summary>
            <value>
            A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord"/> objects, or <c>null</c> if the JSON response
            from the server did not include the associated property.
            </value>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType">
            <summary>
            Represents a DNS record type.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known record types,
            with added support for unknown types returned by a server extension.
            </remarks>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/supported_record_types.html">Supported Record Types (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType.FromName(System.String)">
            <summary>
            Gets the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType.A">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType"/> representing an address record.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType.Aaaa">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType"/> representing an IPv6 address record.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType.Cname">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType"/> representing a canonical name record.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType.Mx">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType"/> representing mail exchange record.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType.Ns">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType"/> representing a name server record.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType.Ptr">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType"/> representing a pointer record.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType.Srv">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType"/> representing a service locator.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType.Txt">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType"/> representing a text record.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecordType.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsServiceLimits">
            <summary>
            This class models the rate and absolute limits in effect for the DNS service.
            </summary>
            <seealso cref="M:net.openstack.Providers.Rackspace.IDnsService.ListLimitsAsync(System.Threading.CancellationToken)"/>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/List_All_Limits.html">List All Limits (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsServiceLimits._rate">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsServiceLimits.RateLimits"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsServiceLimits._absolute">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsServiceLimits.AbsoluteLimits"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsServiceLimits.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsServiceLimits"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsServiceLimits.RateLimits">
            <summary>
            Gets a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsRateLimitPattern"/> objects describing the rate limits
            associated with resources in the DNS service.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsServiceLimits.AbsoluteLimits">
            <summary>
            Gets a map of absolute limits in effect for the DNS service. The keys of the map are
            canonical names describing the limited DNS resource, and the values are the actual limits
            in effect for the service.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomain">
            <summary>
            This class describes a single subdomain associated with a domain in the DNS service.
            </summary>
            <seealso cref="M:net.openstack.Providers.Rackspace.IDnsService.ListSubdomainsAsync(net.openstack.Providers.Rackspace.Objects.Dns.DomainId,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)"/>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/List_Subdomains-d1e4295.html">List Subdomains (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomain._emailAddress">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomain.EmailAddress"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomain._name">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomain.Name"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomain._id">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomain.Id"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomain._comment">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomain.Comment"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomain._created">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomain.Created"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomain._updated">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomain.Updated"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomain.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomain"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomain.Id">
            <summary>
            Gets the unique ID representing this subdomain within the DNS service.
            </summary>
            <value>
            The unique ID for the subdomain, or <c>null</c> if the JSON response from the server
            did not include the associated property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomain.Name">
            <summary>
            Gets the fully-qualified DNS subdomain name.
            </summary>
            <value>
            The fully-qualified subdomain name, or <c>null</c> if the JSON response from the server
            did not include the associated property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomain.EmailAddress">
            <summary>
            Gets the email address associated with this subdomain.
            </summary>
            <value>
            The email address for the subdomain, or <c>null</c> if the JSON response from the server
            did not include the associated property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomain.Comment">
            <summary>
            Gets the optional comment associated with the subdomain.
            </summary>
            <value>
            The comment associated with the subdomain, or <c>null</c> if the JSON response from the server
            did not include this property or if the subdomain does not have an associated comment.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomain.Created">
            <summary>
            Gets the timestamp when this subdomain was initially created.
            </summary>
            <value>
            The creation timestamp of the subdomain, or <c>null</c> if the JSON response from the server
            did not include the associated property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomain.Updated">
            <summary>
            Gets the timestamp when this subdomain was last updated.
            </summary>
            <value>
            The last-updated timestamp of the subdomain, or <c>null</c> if the JSON response from the server
            did not include the associated property.
            </value>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomainConfiguration">
            <summary>
            This models a DNS subdomain for calls to the <see cref="M:net.openstack.Providers.Rackspace.IDnsService.CreateDomainsAsync(net.openstack.Providers.Rackspace.Objects.Dns.DnsConfiguration,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomains}})"/>.
            </summary>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/create_domains.html">Create Domain(s) (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomainConfiguration._emailAddress">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomainConfiguration.EmailAddress"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomainConfiguration._name">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomainConfiguration.Name"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomainConfiguration._comment">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomainConfiguration.Comment"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomainConfiguration.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomainConfiguration"/> class
            with the specified name, email address, and optional comment to associate with
            the subdomain.
            </summary>
            <param name="emailAddress">The email address associated with the subdomain.</param>
            <param name="name">
            The name of the subdomain. This is the fully-qualified name of the subdomain, e.g.
            if the primary domain is <fictitiousUri>example.com</fictitiousUri>, then
            the subdomain name could be <fictitiousUri>www.example.com</fictitiousUri>
            but not just <fictitiousUri>www</fictitiousUri>.</param>
            <param name="comment">An optional comment to associate with the subdomain.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="name"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="emailAddress"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="name"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="emailAddress"/> is empty.</para>
            </exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomainConfiguration.Name">
            <summary>
            Gets the fully-qualified name of this subdomain.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomainConfiguration.EmailAddress">
            <summary>
            Gets the email address associated with the subdomain.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomainConfiguration.Comment">
            <summary>
            Gets the comment associated with the subdomain.
            </summary>
            <value>
            The comment associated with the subdomain, or <c>null</c> if no comment
            was provided for this subdomain.
            </value>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomainsList">
            <summary>
            This class models the object associated with the <c>"subdomains"</c> property in
            the JSON model for a DNS domain.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomainsList._subdomains">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomainsList.Subdomains"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomainsList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomainsList"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomainsList.Subdomains">
            <summary>
            Gets a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomain"/> objects describing the subdomains
            associated with a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain"/>.
            </summary>
            <value>
            A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsSubdomain"/> objects, or <c>null</c> if the JSON response
            from the server did not include the associated property.
            </value>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsUpdateConfiguration">
            <summary>
            Represents the updates to apply to a collection of domains in the DNS service.
            </summary>
            <remarks>
            <note type="inherit">
            This class can be extended if a server extension requires additional information (beyond
            the <c>domains</c> property which is already supported) be sent in the body of a
            <strong>Modify Domain(s)</strong> API call.
            </note>
            </remarks>
            <seealso cref="M:net.openstack.Providers.Rackspace.IDnsService.UpdateDomainsAsync(net.openstack.Providers.Rackspace.Objects.Dns.DnsUpdateConfiguration,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob})"/>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.DnsUpdateConfiguration._domainConfiguration">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsUpdateConfiguration.DomainConfigurations"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsUpdateConfiguration.#ctor(net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainUpdateConfiguration[])">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsUpdateConfiguration"/> class for the
            specified domains.
            </summary>
            <param name="domainConfigurations">A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainUpdateConfiguration"/> objects describing the domains.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="domainConfigurations"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="domainConfigurations"/> contains a <c>null</c> value.</exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DnsUpdateConfiguration.#ctor(System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainUpdateConfiguration})">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsUpdateConfiguration"/> class for the
            specified domains.
            </summary>
            <param name="domainConfigurations">A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainUpdateConfiguration"/> objects describing the domains.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="domainConfigurations"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="domainConfigurations"/> contains a <c>null</c> value.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsUpdateConfiguration.DomainConfigurations">
            <summary>
            Gets a collection of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomainUpdateConfiguration"/> objects describing
            domains in this configuration.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DomainId">
            <summary>
            Represents the unique identifier of a domain in the <see cref="T:net.openstack.Providers.Rackspace.IDnsService"/>.
            </summary>
            <seealso cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Id"/>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DomainId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DomainId"/> class
            with the specified identifier value.
            </summary>
            <param name="id">The domain identifier value.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="id"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="id"/> is empty.</exception>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.DomainId.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.DomainId"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.DomainId.Converter.FromValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.ExportedDomain">
            <summary>
            Extends the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomain"/> object to expose additional information
            provided by the <see cref="M:net.openstack.Providers.Rackspace.IDnsService.ExportDomainAsync(net.openstack.Providers.Rackspace.Objects.Dns.DomainId,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{net.openstack.Providers.Rackspace.Objects.Dns.ExportedDomain}})"/> method.
            </summary>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/export_domain.html">Export Domain (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomain">
            <summary>
            This models the JSON representation of a serialized domain for calls to
            <see cref="M:net.openstack.Providers.Rackspace.IDnsService.ImportDomainAsync(System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomain},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomains}})"/>.
            </summary>
            <seealso cref="M:net.openstack.Providers.Rackspace.IDnsService.ExportDomainAsync(net.openstack.Providers.Rackspace.Objects.Dns.DomainId,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{net.openstack.Providers.Rackspace.Objects.Dns.ExportedDomain}})"/>
            <seealso cref="M:net.openstack.Providers.Rackspace.IDnsService.ImportDomainAsync(System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomain},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.Dns.DnsJob{net.openstack.Providers.Rackspace.Objects.Dns.DnsDomains}})"/>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/export_domain.html">Export Domain (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/import_domain.html">Import Domain (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomain._contents">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomain.Contents"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomain._contentType">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomain.Contents"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomain.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomain"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomain.#ctor(System.String,net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomainFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomain"/> class
            with the specified contents and content type.
            </summary>
            <param name="contents">The contents of the serialized domain.</param>
            <param name="contentType">The content type of the serialized domain.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="contents"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="contentType"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="contents"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomain.Contents">
            <summary>
            Gets the contents of the serialized domain.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomain.ContentType">
            <summary>
            Gets the content type of the serialized domain.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.ExportedDomain._accountId">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.ExportedDomain.AccountId"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Dns.ExportedDomain._id">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Dns.ExportedDomain.Id"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.ExportedDomain.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.ExportedDomain"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.ExportedDomain.Id">
            <summary>
            Gets the ID of the exported domain.
            </summary>
            <value>
            The ID for the exported domain, or <c>null</c> if the JSON response from the server
            did not include this property.
            </value>
            <seealso cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsDomain.Id"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.ExportedDomain.AccountId">
            <summary>
            Gets the account ID associated with this domain. The account ID within the DNS service
            is equivalent to the <see cref="P:net.openstack.Core.Domain.Tenant.Id">Tenant.Id</see> referenced by other services.
            </summary>
            <value>
            The account ID for the domain, or <c>null</c> if the JSON response from the server
            did not include this property.
            </value>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.JobId">
            <summary>
            Represents the unique identifier of a job in the <see cref="T:net.openstack.Providers.Rackspace.IDnsService"/>.
            </summary>
            <seealso cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsJob.Id"/>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.JobId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.JobId"/> class
            with the specified identifier value.
            </summary>
            <param name="id">The job identifier value.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="id"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="id"/> is empty.</exception>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.JobId.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.JobId"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.JobId.Converter.FromValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.LimitType">
            <summary>
            Represents a category of limits which apply to the DNS service.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known limit types,
            with added support for unknown types returned by a server extension.
            </remarks>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/Rate_Limits-d1e1222.html">Rate Limits (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/Domain_Limits.html">Domain Limits (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <seealso href="http://docs.rackspace.com/cdns/api/v1.0/cdns-devguide/content/Record_Limits.html">Record Limits (Rackspace Cloud DNS Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.LimitType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.LimitType"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.LimitType.FromName(System.String)">
            <summary>
            Gets the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.LimitType"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.LimitType.Rate">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.LimitType"/> representing rate limits in effect for the DNS service.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.LimitType.Domain">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.LimitType"/> representing absolute limits in place for domains in the DNS service.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.LimitType.DomainRecord">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.LimitType"/> representing absolute limits in place for records in the DNS service.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.LimitType.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.LimitType"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.LimitType.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.NamespaceDoc">
            <summary>
            The <see cref="N:net.openstack.Providers.Rackspace.Objects.Dns"/> namespaces define
            the object model for communicating with Rackspace's Cloud DNS service over REST APIs.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.RecordId">
            <summary>
            Represents the unique identifier of a domain record in the <see cref="T:net.openstack.Providers.Rackspace.IDnsService"/>.
            </summary>
            <seealso cref="P:net.openstack.Providers.Rackspace.Objects.Dns.DnsRecord.Id"/>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.RecordId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.RecordId"/> class
            with the specified identifier value.
            </summary>
            <param name="id">The domain record identifier value.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="id"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="id"/> is empty.</exception>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.RecordId.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.RecordId"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.RecordId.Converter.FromValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomainFormat">
            <summary>
            Represents a format for domains exported by the DNS service.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known serialization
            formats, with added support for unknown formats returned by a server extension.
            </remarks>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomainFormat.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomainFormat"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomainFormat.FromName(System.String)">
            <summary>
            Gets the <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomainFormat"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomainFormat.Bind9">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomainFormat"/> representing a <see href="http://en.wikipedia.org/wiki/BIND">BIND 9</see> serialized domain.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomainFormat.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomainFormat"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Dns.SerializedDomainFormat.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.AccessType">
            <summary>
            Represents an network access type in the load balancers service.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known access types,
            with added support for unknown types returned by a server extension.
            </remarks>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Manage_Access_Lists-d1e3187.html">Manage Access Lists (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.AccessType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.AccessType"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.AccessType.FromName(System.String)">
            <summary>
            Gets the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.AccessType"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.AccessType.Allow">
            <summary>
            Gets an <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.AccessType"/> representing an item to which traffic should be allowed.
            The <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.AccessType.Allow"/> access type takes priority over the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.AccessType.Deny"/> access type.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.AccessType.Deny">
            <summary>
            Gets an <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.AccessType"/> representing an item to which traffic can be denied.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.AccessType.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.AccessType"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.AccessType.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionHealthMonitor">
            <summary>
            This class models the JSON object used to represent a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor"/> for
            simple connection monitoring.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor">
            <summary>
            This is the base class for load balancer health monitoring configurations.
            </summary>
            <see cref="M:net.openstack.Providers.Rackspace.ILoadBalancerService.GetHealthMonitorAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)"/>
            <see cref="M:net.openstack.Providers.Rackspace.ILoadBalancerService.SetHealthMonitorAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})"/>
            <see cref="M:net.openstack.Providers.Rackspace.ILoadBalancerService.RemoveHealthMonitorAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})"/>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Monitor_Health-d1e3434.html">Monitor Health (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor._type">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor.Type"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor._timeout">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor.Timeout"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor._delay">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor.Delay"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor._attemptsBeforeDeactivation">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor.AttemptsBeforeDeactivation"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor.#ctor(net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitorType,System.Int32,System.TimeSpan,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor"/> class
            using the specified values.
            </summary>
            <param name="type">The type of health monitor.</param>
            <param name="attemptsBeforeDeactivation">The number of permissible monitor failures before removing a node from rotation.</param>
            <param name="timeout">The maximum number of seconds to wait for a connection to be established before timing out.</param>
            <param name="delay">The minimum time to wait before executing the health monitor.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="type"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="attemptsBeforeDeactivation"/> is less than or equal to 0.
            <para>-or-</para>
            <para>If <paramref name="timeout"/> is negative or <see cref="F:System.TimeSpan.Zero"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="delay"/> is negative or <see cref="F:System.TimeSpan.Zero"/>.</para>
            </exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor.FromJObject(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Deserializes a JSON object to a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor"/> instance of the proper type.
            </summary>
            <param name="jsonObject">The JSON object representing the health monitor.</param>
            <returns>A <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor"/> object corresponding to the JSON object.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="jsonObject"/> is <c>null</c>.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor.Type">
            <summary>
            Gets the type of health monitor.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor.Timeout">
            <summary>
            Gets the maximum number of seconds to wait for a connection to be established before timing out.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor.Delay">
            <summary>
            Gets the minimum time to wait before executing the health monitor.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor.AttemptsBeforeDeactivation">
            <summary>
            Gets the number of permissible monitor failures before removing a node from rotation.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionHealthMonitor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionHealthMonitor"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionHealthMonitor.#ctor(System.Int32,System.TimeSpan,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionHealthMonitor"/> class
            with the specified values.
            </summary>
            <param name="attemptsBeforeDeactivation">The number of permissible monitor failures before removing a node from rotation.</param>
            <param name="timeout">The maximum number of seconds to wait for a connection to be established before timing out.</param>
            <param name="delay">The minimum time to wait before executing the health monitor.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="attemptsBeforeDeactivation"/> is less than or equal to 0.
            <para>-or-</para>
            <para>If <paramref name="timeout"/> is negative or <see cref="F:System.TimeSpan.Zero"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="delay"/> is negative or <see cref="F:System.TimeSpan.Zero"/>.</para>
            </exception>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles">
            <summary>
            This class represents a connection throttling configuration for a load
            balancer in the load balancer service.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles._maxConnectionRate">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles.MaxConnectionRate"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles._maxConnections">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles.MaxConnections"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles._minConnections">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles.MinConnections"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles._rateInterval">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles.RateInterval"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles"/> class during
            JSON deserialization.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.TimeSpan})">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles"/> class with
            the specified configuration.
            </summary>
            <param name="maxConnectionRate">The maximum number of connections per rate interval to allow from a single IP address, or <c>0</c> to not limit the connection rate. If this value is <c>null</c>, the value for this throttle will not be changed during a call to <see cref="M:net.openstack.Providers.Rackspace.ILoadBalancerService.UpdateThrottlesAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})"/>.</param>
            <param name="maxConnections">The maximum number of connections to allow from a single IP address, or <c>0</c> to not limit the number connections. If this value is <c>null</c>, the value for this throttle will not be changed during a call to <see cref="M:net.openstack.Providers.Rackspace.ILoadBalancerService.UpdateThrottlesAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})"/>.</param>
            <param name="minConnections">The minimum number of connections to allow from an IP address before applying throttling restrictions. If this value is <c>null</c>, the value for this throttle will not be changed during a call to <see cref="M:net.openstack.Providers.Rackspace.ILoadBalancerService.UpdateThrottlesAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})"/>.</param>
            <param name="rateInterval">The time period for which the connection rate limit is evaluated. If this value is <c>null</c>, the value for this throttle will not be changed during a call to <see cref="M:net.openstack.Providers.Rackspace.ILoadBalancerService.UpdateThrottlesAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="maxConnectionRate"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="maxConnections"/> is less than 0.</para>
            <para>-or-</para>
            <para>If <paramref name="minConnections"/> is less than 0.</para>
            <para>-or-</para>
            <para>If <paramref name="rateInterval"/> is negative or <see cref="F:System.TimeSpan.Zero"/>.</para>
            </exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles.MaxConnectionRate">
             <summary>
             Gets the maximum number of connections allowed from a single IP address in the defined <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles.RateInterval"/>.
             A value of 0 indicates an unlimited connection rate. A value of <c>null</c> indicates this connection limit is
             not configured.
             </summary>
             <value>
             The maximum number of connections allowed from a single IP address in the defined <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles.RateInterval"/>,
             or one of the following values:
            
             <list type="bullet">
             <item>0, if the connection rate is configured but unlimited.</item>
             <item><c>null</c>, if the connection rate limit is not configured.</item>
             </list>
             </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles.MaxConnections">
            <summary>
            Gets the maximum number of connections allowed for a single IP address. A value of 0 indicates
            an unlimited number of connections. A value of <c>null</c> indicates this connection limit is
            not configured.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles.MinConnections">
            <summary>
            Gets the minimum number of connections to allow from an IP address before applying throttling restrictions.
            A value of <c>null</c> indicates this connection limit is not configured.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles.RateInterval">
            <summary>
            Gets the time period for which <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles.MaxConnectionRate"/> is evaluated. For example, a <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles.MaxConnectionRate"/>
            of 30 with a <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles.RateInterval"/> of 60 seconds would allow a maximum of 30 connections per minute from a single IP
            address. A value of <c>null</c> indicates this connection limit is not configured.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.CustomHealthMonitor">
            <summary>
            This class models the JSON object used to represent a custom <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor"/>.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.CustomHealthMonitor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.CustomHealthMonitor"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitorType">
            <summary>
            Represents load balancer health monitor type.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known monitor types,
            with added support for unknown types returned by a server extension.
            </remarks>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Monitors-d1e3370.html">Monitors (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitorType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitorType"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitorType.FromName(System.String)">
            <summary>
            Gets the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitorType"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitorType.Connect">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitorType"/> representing a connect monitor.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitorType.Http">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitorType"/> representing an HTTP monitor.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitorType.Https">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitorType"/> representing an HTTPS monitor.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitorType.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitorType"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitorType.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer">
            <summary>
            Represents a load balancer in the <see cref="T:net.openstack.Providers.Rackspace.ILoadBalancerService"/>.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1">
            <summary>
            Represents a load balancer configuration.
            </summary>
            <remarks>
            The <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration"/> extends this class for use in calls to
            <see cref="M:net.openstack.Providers.Rackspace.ILoadBalancerService.CreateLoadBalancerAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})"/>, and the
            <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer"/> class extends this class to represent a load balancer
            that already exists as a resource in the <see cref="T:net.openstack.Providers.Rackspace.ILoadBalancerService"/>.
            </remarks>
            <typeparam name="TNodeConfiguration">The class used to represent a load balancer node configuration.</typeparam>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1._name">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.Name"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1._nodes">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.Nodes"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1._protocolName">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.ProtocolName"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1._halfClosed">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.HalfClosed"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1._virtualIps">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.VirtualAddresses"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1._accessList">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.AccessList"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1._algorithm">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.Algorithm"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1._connectionLogging">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.ConnectionLogging"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1._contentCaching">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.ContentCaching"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1._connectionThrottle">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.ConnectionThrottles"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1._healthMonitor">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.HealthMonitor"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1._metadata">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.Metadata"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1._port">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.Port"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1._timeout">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.Timeout"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1._sessionPersistence">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.SessionPersistence"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1"/> class.
            </summary>
            <remarks>
            This constructor is used during JSON deserialization of derived types.
            </remarks>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.#ctor(System.String,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingProtocol,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress},System.Collections.Generic.IEnumerable{`0},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem},net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingAlgorithm,System.Nullable{System.Boolean},System.Nullable{System.Boolean},net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles,net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem},System.Nullable{System.TimeSpan},net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistence)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1"/>
            class with the specified values.
            </summary>
            <param name="name">The name of the load balancer.</param>
            <param name="protocol">The load balancing protocol to use for this load balancer.</param>
            <param name="virtualAddresses">A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress"/> objects describing the virtual addresses to assign to the load balancer.</param>
            <param name="nodes">A collection of <typeparamref name="TNodeConfiguration"/> objects describing the nodes in the load balancer. If this value is <c>null</c>, the load balancer will be created without any nodes.</param>
            <param name="halfClosed"><c>true</c> to enable half-closed support for the load balancer; otherwise, <c>false</c>. Half-Closed support provides the ability for one end of the connection to terminate its output, while still receiving data from the other end. Only applies to TCP/TCP_CLIENT_FIRST protocols.</param>
            <param name="accessList">A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem"/> objects describing the access list for the load balancer. If this value is <c>null</c>, the load balancer will be created without an access list configured.</param>
            <param name="algorithm">The load balancing algorithm that defines how traffic should be directed between back-end nodes. If this value is <c>null</c>, a provider-specific default algorithm will be used.</param>
            <param name="connectionLogging"><c>true</c> to enable connection logging; otherwise, <c>false</c>. If this value is <c>null</c>, a provider-specific default value will be used.</param>
            <param name="contentCaching"><c>true</c> to enable content caching; otherwise, <c>false</c>. If this value is <c>null</c>, a provider-specific default value will be used.</param>
            <param name="connectionThrottle">A <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.ConnectionThrottles"/> object defining the connection throttling configuration for the load balancer. If this value is <c>null</c>, a provider-specific default value will be used.</param>
            <param name="healthMonitor">A <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.HealthMonitor"/> object defining the health monitor to configure for the load balancer. If this value is <c>null</c>, the load balancer will be created with no health monitor configured.</param>
            <param name="metadata">A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem"/> objects defining the initial metadata for the load balancer. If this value is <c>null</c>, the load balancer will be created without any initial custom metadata.</param>
            <param name="timeout">The timeout value for the load balancer and communications with its nodes. If this value is <c>null</c>, a provider-specific default value will be used.</param>
            <param name="sessionPersistence">A <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.SessionPersistence"/> object defining the session persistence configuration for the load balancer. If this value is <c>null</c>, the load balancer will be created with session persistence disabled.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="name"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="protocol"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="virtualAddresses"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="name"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="nodes"/> contains any <c>null</c> values.</para>
            <para>-or-</para>
            <para>If <paramref name="virtualAddresses"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="virtualAddresses"/> contains any <c>null</c> values.</para>
            <para>-or-</para>
            <para>If <paramref name="accessList"/> contains any <c>null</c> values.</para>
            <para>-or-</para>
            <para>If <paramref name="metadata"/> contains any <c>null</c> values.</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="timeout"/> is negative or <see cref="F:System.TimeSpan.Zero"/>.
            </exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.Name">
            <summary>
            Gets the name of the load balancer.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.Nodes">
            <summary>
            Gets a collection of <typeparamref name="TNodeConfiguration"/> objects describing the
            nodes associated with the load balancer.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.ProtocolName">
            <summary>
            Gets the name of the load balanced protocol.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.HalfClosed">
            <summary>
            Gets a value indicating whether or not half-closed support is enabled for the load balancer.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.VirtualAddresses">
            <summary>
            Gets a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress"/> objects describing
            the virtual addresses associated with the load balancer.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.AccessList">
            <summary>
            Gets a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem"/> objects describing the access
            list for the load balancer.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.Algorithm">
            <summary>
            Gets the load balancing algorithm used for distributing data between back-end nodes.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.ConnectionLogging">
            <summary>
            Gets a value indicating whether or not connection logging is enabled for the load balancer.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.ContentCaching">
            <summary>
            Gets a value indicating whether or not content caching is enabled for the load balancer.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.ConnectionThrottles">
            <summary>
            Gets the connection throttling configuration for the load balancer.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.HealthMonitor">
            <summary>
            Gets the health monitor configured for the load balancer.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.Metadata">
            <summary>
            Gets a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem"/> objects describing
            the metadata associated with the load balancer.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.Port">
            <summary>
            Gets the port number the load balancer will listen for connections on.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.Timeout">
            <summary>
            Gets the timeout value for the load balancer and communications with its nodes.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.SessionPersistence">
            <summary>
            Gets the session persistence configuration for the load balancer.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer._id">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer._nodeCount">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.NodeCount"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer._cluster">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Cluster"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer._status">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Status"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer._created">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Created"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer._updated">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Updated"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer._sourceAddresses">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.SourceAddresses"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id">
            <summary>
            Gets unique ID representing this load balancer within the load balancers service.
            </summary>
            <value>
            The unique ID for the load balancer, or <c>null</c> if the JSON response from the server
            did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.NodeCount">
            <summary>
            Gets the total number of nodes in the load balancer.
            </summary>
            <remarks>
            This property is typically populated by calls that do not provide the complete
            set of nodes in the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration`1.Nodes"/>
            property.
            </remarks>
            <value>
            The total number of nodes in the load balancer, or <c>null</c> if the JSON response
            from the server did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Status">
            <summary>
            Gets the status of the load balancer.
            </summary>
            <value>
            The status of the load balancer, or <c>null</c> if the JSON response from the server
            did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Cluster">
            <summary>
            Gets the cluster the load balancer is located within.
            </summary>
            <value>
            A <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerCluster"/> object describing the cluster where the load balancer
            is located, or <c>null</c> if the JSON response from the server did not include this
            property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Created">
            <summary>
            Gets the timestamp when the load balancer was created.
            </summary>
            <value>
            The creation timestamp of the load balancer, or <c>null</c> if the JSON response from the server
            did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Updated">
            <summary>
            Gets the timestamp when the load balancer was last updated.
            </summary>
            <value>
            The last-updated timestamp of the load balancer, or <c>null</c> if the JSON response from the server
            did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.SourceAddresses">
            <summary>
            Gets the source addresses for the load balancer. The keys of this dictionary
            are the names of the source network, and the values are an IP address or
            IP address range (in CIDR notation) of the addresses available to the load
            balancer on that network.
            </summary>
            <value>
            A dictionary mapping network names to source addresses for the load balancer,
            or <c>null</c> if the JSON response from the server did not include this property.
            </value>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerCluster">
            <summary>
            This class models the JSON representation of a load balancer cluster to support the
            <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Cluster"/> property.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerCluster._name">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerCluster.Name"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerCluster.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerCluster"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerCluster.Name">
            <summary>
            Gets the name of the cluster a load balancer is located within.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration">
            <summary>
            This class represents the configuration for a new load balancer.
            </summary>
            <seealso cref="M:net.openstack.Providers.Rackspace.ILoadBalancerService.CreateLoadBalancerAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})"/>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration"/> class.
            </summary>
            <remarks>
            This constructor is used during JSON deserialization of derived types.
            </remarks>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration.#ctor(System.String,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingProtocol,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress},System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem},net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingAlgorithm,System.Nullable{System.Boolean},System.Nullable{System.Boolean},net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles,net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem},System.Nullable{System.TimeSpan},net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistence)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerConfiguration"/> class
            with the specified values.
            </summary>
            <param name="name">The name of the load balancer.</param>
            <param name="protocol">The load balancing protocol to use for this load balancer.</param>
            <param name="virtualAddresses">A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress"/> objects describing the virtual addresses to assign to the load balancer.</param>
            <param name="nodes">A collection of <see name="NodeConfiguration"/> objects describing the nodes in the load balancer. If this value is <c>null</c>, the load balancer will be created without any nodes.</param>
            <param name="halfClosed"><c>true</c> to enable half-closed support for the load balancer; otherwise, <c>false</c>. Half-Closed support provides the ability for one end of the connection to terminate its output, while still receiving data from the other end. Only applies to TCP/TCP_CLIENT_FIRST protocols.</param>
            <param name="accessList">A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem"/> objects describing the access list for the load balancer. If this value is <c>null</c>, the load balancer will be created without an access list configured.</param>
            <param name="algorithm">The load balancing algorithm that defines how traffic should be directed between back-end nodes. If this value is <c>null</c>, a provider-specific default algorithm will be used.</param>
            <param name="connectionLogging"><c>true</c> to enable connection logging; otherwise, <c>false</c>. If this value is <c>null</c>, a provider-specific default value will be used.</param>
            <param name="contentCaching"><c>true</c> to enable content caching; otherwise, <c>false</c>. If this value is <c>null</c>, a provider-specific default value will be used.</param>
            <param name="connectionThrottle">A <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles"/> object defining the connection throttling configuration for the load balancer. If this value is <c>null</c>, a provider-specific default value will be used.</param>
            <param name="healthMonitor">A <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor"/> object defining the health monitor to configure for the load balancer. If this value is <c>null</c>, the load balancer will be created with no health monitor configured.</param>
            <param name="metadata">A collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem"/> objects defining the initial metadata for the load balancer. If this value is <c>null</c>, the load balancer will be created without any initial custom metadata.</param>
            <param name="timeout">The timeout value for the load balancer and communications with its nodes. If this value is <c>null</c>, a provider-specific default value will be used.</param>
            <param name="sessionPersistence">A <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistence"/> object defining the session persistence configuration for the load balancer. If this value is <c>null</c>, the load balancer will be created with session persistence disabled.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="name"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="protocol"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="virtualAddresses"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="name"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="nodes"/> contains any <c>null</c> values.</para>
            <para>-or-</para>
            <para>If <paramref name="virtualAddresses"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="virtualAddresses"/> contains any <c>null</c> values.</para>
            <para>-or-</para>
            <para>If <paramref name="accessList"/> contains any <c>null</c> values.</para>
            <para>-or-</para>
            <para>If <paramref name="metadata"/> contains any <c>null</c> values.</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="timeout"/> is negative or <see cref="F:System.TimeSpan.Zero"/>.
            </exception>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerEnabledFlag">
            <summary>
            This class models the JSON object used to represent an enabled/disabled
            flag for a configuration option.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerEnabledFlag._true">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerEnabledFlag.True"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerEnabledFlag._false">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerEnabledFlag.False"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerEnabledFlag._enabled">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerEnabledFlag.Enabled"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerEnabledFlag.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerEnabledFlag"/>
            during JSON deserialization.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerEnabledFlag.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerEnabledFlag"/>
            with the specified value.
            </summary>
            <param name="enabled"><c>true</c> if the option is enabled; otherwise, <c>false</c>.</param>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerEnabledFlag.True">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerEnabledFlag"/> instance representing an enabled option.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerEnabledFlag.False">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerEnabledFlag"/> instance representing a disabled option.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerEnabledFlag.Enabled">
            <summary>
            Gets a value indicating whether or not the option is enabled.
            </summary>
            <value>
            <c>true</c> if the option is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId">
            <summary>
            Represents the unique identifier of a load balancer in the <see cref="T:net.openstack.Providers.Rackspace.ILoadBalancerService"/>.
            </summary>
            <seealso cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id"/>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId"/> class
            with the specified identifier value.
            </summary>
            <param name="id">The load balancer identifier value.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="id"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="id"/> is empty.</exception>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId.Converter.FromValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem">
            <summary>
            This class represents a metadata item associated with a resource in the load balancer service.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem._id">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem.Id"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem._key">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem.Key"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem._value">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem.Value"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem"/> class
            with the specified key and value.
            </summary>
            <param name="key">The metadata key.</param>
            <param name="value">The metadata value.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="key"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="value"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="key"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem.Id">
            <summary>
            Gets the unique ID for the metadata item.
            </summary>
            <remarks>
            Metadata IDs in the load balancer service are only guaranteed to be unique within the
            context of the item they are associated with.
            </remarks>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem.Key">
            <summary>
            Gets the key for this metadata item.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem.Value">
            <summary>
            Gets the value for this metadata item.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration">
            <summary>
            This class models the JSON representation of an SSL termination configuration in the
            load balancer service.
            </summary>
            <seealso cref="M:net.openstack.Providers.Rackspace.ILoadBalancerService.GetSslConfigurationAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)"/>
            <seealso cref="M:net.openstack.Providers.Rackspace.ILoadBalancerService.UpdateSslConfigurationAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})"/>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration._enabled">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration.Enabled"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration._secureTrafficOnly">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration.SecureTrafficOnly"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration._securePort">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration.SecurePort"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration._privateKey">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration.PrivateKey"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration._certificate">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration.Certificate"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration._intermediateCertificate">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration.IntermediateCertificate"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration"/> class
            using the specified configuration.
            </summary>
            <remarks>
            Configurations created with this constructor will not overwrite the private key or
            certificates stored on the server during a call to
            <see cref="M:net.openstack.Providers.Rackspace.ILoadBalancerService.UpdateSslConfigurationAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})"/>.
            </remarks>
            <param name="enabled"><c>true</c> to enable SSL termination on the load balancer; otherwise, <c>false</c>. If this value is <c>null</c>, the current configuration for the value is not changed by a call to <see cref="M:net.openstack.Providers.Rackspace.ILoadBalancerService.UpdateSslConfigurationAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})"/>.</param>
            <param name="secureTrafficOnly"><c>true</c> to require encryption for all traffic through the load balancer; otherwise, <c>false</c>. If this value is <c>null</c>, the current configuration for the value is not changed by a call to <see cref="M:net.openstack.Providers.Rackspace.ILoadBalancerService.UpdateSslConfigurationAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})"/>.</param>
            <param name="securePort">The port on which the SSL termination load balancer will listen for secure traffic. If this value is <c>null</c>, the current configuration for the value is not changed by a call to <see cref="M:net.openstack.Providers.Rackspace.ILoadBalancerService.UpdateSslConfigurationAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="securePort"/> is less than 0 or greater than 65535.
            </exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Int32,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration"/> class
            using the specified configuration and certificates.
            </summary>
            <param name="enabled"><c>true</c> to enable SSL termination on the load balancer; otherwise, <c>false</c>. If this value is <c>null</c>, the current configuration for the value is not changed by a call to <see cref="M:net.openstack.Providers.Rackspace.ILoadBalancerService.UpdateSslConfigurationAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})"/>.</param>
            <param name="secureTrafficOnly"><c>true</c> to require encryption for all traffic through the load balancer; otherwise, <c>false</c>. If this value is <c>null</c>, the current configuration for the value is not changed by a call to <see cref="M:net.openstack.Providers.Rackspace.ILoadBalancerService.UpdateSslConfigurationAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})"/>.</param>
            <param name="securePort">The port on which the SSL termination load balancer will listen for secure traffic. If this value is <c>null</c>, the current configuration for the value is not changed by a call to <see cref="M:net.openstack.Providers.Rackspace.ILoadBalancerService.UpdateSslConfigurationAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})"/>.</param>
            <param name="privateKey">The private key for the SSL certificate.</param>
            <param name="certificate">The certificate used for SSL termination.</param>
            <param name="intermediateCertificate">The user's intermediate certificate used for SSL termination.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="privateKey"/> is <c>null</c> and either <paramref name="certificate"/> or <paramref name="intermediateCertificate"/> is not <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="certificate"/> is <c>null</c> and <paramref name="privateKey"/> is not <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="privateKey"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="certificate"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="intermediateCertificate"/> is empty.</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="securePort"/> is less than 0 or greater than 65535.
            </exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration.Enabled">
            <summary>
            Gets a value indicating whether or not SSL termination is enabled on the load balancer.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration.SecureTrafficOnly">
            <summary>
            Gets a value indicating whether or not the load balancer should <em>only</em> accept secure traffic.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration.SecurePort">
            <summary>
            Gets a value indicating which port the load balancer should listen for secure traffic on.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration.PrivateKey">
            <summary>
            Gets the private key for the certificate used for SSL termination on the load balancer.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration.Certificate">
            <summary>
            Gets the certificate used for SSL termination on the load balancer.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerSslConfiguration.IntermediateCertificate">
            <summary>
            Gets the intermediate certificate used for SSL termination on the load balancer.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatistics">
            <summary>
            This class represents the load balancer statistics returned from a
            call to <see cref="M:net.openstack.Providers.Rackspace.ILoadBalancerService.GetStatisticsAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)"/>.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatistics.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatistics"/> class.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatistics.ConnectionTimedOut">
            <summary>
            Gets the number of connections closed by the load balancer because the <em>connect_timeout</em> interval was exceeded.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatistics.ConnectionError">
            <summary>
            Gets the number of transaction or protocol errors in the load balancer.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatistics.ConnectionFailure">
            <summary>
            Gets the number of connection failures in the load balancer.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatistics.DataTimedOut">
            <summary>
            Gets the number of connections closed by this load balancer because the <em>timeout</em> interval was exceeded.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatistics.KeepAliveTimedOut">
            <summary>
            Gets the number of connections closed by this load balancer because the <em>keepalive_timeout</em> interval was exceeded.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatistics.MaxConnections">
            <summary>
            Gets the maximum number of simultaneous TCP connections this load balancer has processed at any one time.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus">
            <summary>
            Represents the current status of a load balancer.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known load balancer
            statuses, with added support for unknown statuses returned by a server extension.
            </remarks>
            <seealso cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Status"/>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Update_Load_Balancer_Attributes-d1e1812.html">Update Load Balancer Attributes (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.FromName(System.String)">
            <summary>
            Gets the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.Active">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus"/> representing a load balancer that is configured
            properly and ready to serve traffic to incoming requests via the configured virtual IPs.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.Build">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus"/> representing a load balancer that is being
            provisioned for the first time and configuration is being applied to bring the service
            online. The service will not yet be ready to serve incoming requests.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingUpdate">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus"/> representing a load balancer that is online
            but configuration changes are being applied to update the service based on a previous
            request.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.PendingDelete">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus"/> representing a load balancer that is online
            but configuration changes are being applied to begin deletion of the service based
            on a previous request.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.Suspended">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus"/> representing a load balancer that has been
            taken offline and disabled.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.Error">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus"/> indicating the system encountered an error
            when attempting to configure the load balancer.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.Deleted">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus"/> representing a load balancer that has been
            deleted.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerStatus.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerTimestamp">
            <summary>
            This class models the JSON representation of a timestamp object
            in the load balancers service.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerTimestamp._time">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerTimestamp.Time"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerTimestamp.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerTimestamp"/> property
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerTimestamp.Time">
            <summary>
            Gets the time represented by the object.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUpdate">
            <summary>
            This object models the JSON representation of a configuration update to apply
            to an existing load balancer.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUpdate._name">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUpdate.Name"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUpdate._protocolName">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUpdate.ProtocolName"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUpdate._halfClosed">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUpdate.HalfClosed"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUpdate._algorithm">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUpdate.Algorithm"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUpdate._port">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUpdate.Port"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUpdate._timeout">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUpdate.Timeout"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUpdate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUpdate"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUpdate.#ctor(System.String,net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingProtocol,System.Nullable{System.Boolean},net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingAlgorithm,System.Nullable{System.TimeSpan})">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUpdate"/> class
            with the specified values.
            </summary>
            <param name="name">The name of the load balancer. If this value is <c>null</c>, the existing value for the load balancer is not changed.</param>
            <param name="protocol">The load balancing protocol to use for this load balancer. If this value is <c>null</c>, the existing value for the load balancer is not changed.</param>
            <param name="halfClosed"><c>true</c> to enable half-closed support for the load balancer; otherwise, <c>false</c>. Half-Closed support provides the ability for one end of the connection to terminate its output, while still receiving data from the other end. Only applies to TCP/TCP_CLIENT_FIRST protocols. If this value is <c>null</c>, the existing value for the load balancer is not changed.</param>
            <param name="algorithm">The load balancing algorithm that defines how traffic should be directed between back-end nodes. If this value is <c>null</c>, the existing value for the load balancer is not changed.</param>
            <param name="timeout">The timeout value for the load balancer and communications with its nodes. If this value is <c>null</c>, the existing value for the load balancer is not changed.</param>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="timeout"/> is negative or <see cref="F:System.TimeSpan.Zero"/>.
            </exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUpdate.Name">
            <summary>
            Gets the name of the load balancer.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUpdate.ProtocolName">
            <summary>
            Gets the name of the load balanced protocol.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUpdate.HalfClosed">
            <summary>
            Gets a value indicating whether or not half-closed support is enabled for the load balancer.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUpdate.Algorithm">
            <summary>
            Gets the load balancing algorithm used for distributing data between back-end nodes.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUpdate.Port">
            <summary>
            Gets the port number the load balancer will listen for connections on.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUpdate.Timeout">
            <summary>
            Gets the timeout value for the load balancer and communications with its nodes.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage">
            <summary>
            This class provides information about load balancer usage during a span of time.
            </summary>
            <seealso cref="M:net.openstack.Providers.Rackspace.ILoadBalancerService.ListAccountLevelUsageAsync(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)"/>
            <seealso cref="M:net.openstack.Providers.Rackspace.ILoadBalancerService.ListHistoricalUsageAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)"/>
            <seealso cref="M:net.openstack.Providers.Rackspace.ILoadBalancerService.ListCurrentUsageAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Threading.CancellationToken)"/>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Usage-d1e3014.html">List Usage (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage._id">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.Id"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage._averageConnections">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.AverageConnections"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage._incomingTransfer">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.IncomingTransfer"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage._outgoingTransfer">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.OutgoingTransfer"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage._averageConnectionsSsl">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.AverageConnectionsSsl"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage._incomingTransferSsl">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.IncomingTransferSsl"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage._outgoingTransferSsl">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.OutgoingTransferSsl"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage._virtualAddressCount">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.VirtualAddressCount"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage._pollCount">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.PollCount"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage._startTime">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.StartTime"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage._endTime">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.EndTime"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage._virtualAddressType">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.VirtualAddressType"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage._sslMode">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.SslMode"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage._eventType">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.EventType"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.Id">
            <summary>
            Gets the unique ID for this usage record.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.AverageConnections">
            <summary>
            Gets the average number of connections open to the load balancer between <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.StartTime"/> and <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.EndTime"/>.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.IncomingTransfer">
            <summary>
            Gets the number of incoming bytes transferred.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.OutgoingTransfer">
            <summary>
            Gets the number of outgoing bytes transferred.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.AverageConnectionsSsl">
            <summary>
            Gets the average number of secure connections open to the load balancer between <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.StartTime"/> and <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.EndTime"/>.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.IncomingTransferSsl">
            <summary>
            Gets the number of incoming bytes transferred over secure connections.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.OutgoingTransferSsl">
            <summary>
            Gets the number of outgoing bytes transferred over secure connections.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.VirtualAddressCount">
            <summary>
            Gets the number of virtual addresses assigned to the load balancer between <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.StartTime"/> and <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.EndTime"/>.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.PollCount">
            <summary>
            Gets <placeholder>what?</placeholder>
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.StartTime">
            <summary>
            Gets the starting timestamp for this load balancer usage record.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.EndTime">
            <summary>
            Gets the ending timestamp for this load balancer usage record.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.VirtualAddressType">
            <summary>
            Gets the virtual address type for the load balancer between <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.StartTime"/> and <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.EndTime"/>.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.SslMode">
            <summary>
            Gets the SSL mode for the load balancer between <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.StartTime"/> and <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.EndTime"/>.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.EventType">
            <summary>
            Gets <placeholder>what?</placeholder>
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsageId">
            <summary>
            Represents the unique identifier of a load balancer usage record in the <see cref="T:net.openstack.Providers.Rackspace.ILoadBalancerService"/>.
            </summary>
            <seealso cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage.Id"/>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsageId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsageId"/> class
            with the specified identifier value.
            </summary>
            <param name="id">The load balancer usage record identifier value.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="id"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="id"/> is empty.</exception>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsageId.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsageId"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsageId.Converter.FromValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress">
            <summary>
            This class represents a virtual address which is assigned to a load balancer,
            or a virtual address configuration for instructing the load balancer service
            to assign a particular type of virtual address to a load balancer.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress._address">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress.Address"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress._id">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress.Id"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress._type">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress.Type"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress._ipVersion">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress.IPVersion"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress.#ctor(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddressType)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress"/> class
            with the specified virtual address type.
            </summary>
            <param name="type">The virtual address type.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="type"/> is <c>null</c>.</exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress.#ctor(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddressType,System.Nullable{System.Net.Sockets.AddressFamily})">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress"/> class
            with the specified virtual address type and family.
            </summary>
            <param name="type">The virtual address type.</param>
            <param name="version"></param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="type"/> is <c>null</c>.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress.Id">
            <summary>
            Gets the unique ID representing this virtual address within the load balancers service.
            </summary>
            <value>
            The unique ID for the virtual address, or <c>null</c> if the virtual address has not been
            created or the JSON response from the server did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress.Address">
            <summary>
            Gets the IP address for this virtual address within the load balancers service.
            </summary>
            <value>
            The IP address for the virtual address, or <c>null</c> if the virtual address has not been
            created or the JSON response from the server did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress.Type">
            <summary>
            Gets the virtual address type.
            </summary>
            <value>
            A <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddressType"/> object describing the virtual address type,
            or <c>null</c> if the JSON response from the server did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress.IPVersion">
            <summary>
            Gets the address family for this virtual address.
            </summary>
            <value>
            An <see cref="T:System.Net.Sockets.AddressFamily"/> describing the address family for this virtual address,
            or <c>null</c> if the JSON response from the server did not include this property or
            the value was unrecognized.
            </value>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddressType">
            <summary>
            Represents a virtual address type in the load balancer service.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known virtual address types,
            with added support for unknown types returned by a server extension.
            </remarks>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddressType._types">
            <summary>
            This dictionary maintains a list of all <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddressType"/> objects
            which have already been created, to preserve reference equality semantics for objects of
            this class.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddressType._public">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddressType.Public"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddressType._servicenet">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddressType.ServiceNet"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddressType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddressType"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddressType.FromName(System.String)">
            <summary>
            Gets the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddressType"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddressType.Public">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddressType"/> representing <placeholder>placeholder</placeholder>.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddressType.ServiceNet">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddressType"/> representing <placeholder>placeholder</placeholder>.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddressType.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddressType"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddressType.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingAlgorithm">
            <summary>
            Represents a load balancing algorithm.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known load balancing
            algorithms, with added support for unknown algorithms returned by a server
            extension.
            </remarks>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Load_Balancing_Algorithms-d1e4459.html">List Load Balancing Algorithms (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingAlgorithm.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingAlgorithm"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingAlgorithm.FromName(System.String)">
            <summary>
            Gets the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingAlgorithm"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingAlgorithm.LeastConnections">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingAlgorithm"/> where the node with the lowest number
            of connections will receive requests.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingAlgorithm.Random">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingAlgorithm"/> where back-end servers are selected
            at random.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingAlgorithm.RoundRobin">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingAlgorithm"/> where connections are routed to each
            of the back-end servers in turn.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingAlgorithm.WeightedLeastConnections">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingAlgorithm"/> where each request will be assigned
            to a node based on the number of concurrent connections to the node and its weight.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingAlgorithm.WeightedRoundRobin">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingAlgorithm"/> similar to <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingAlgorithm.RoundRobin"/>,
            but with different proportions of traffic being directed to the back-end nodes.
            Weights must be defined as part of the load balancer's node configuration.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingAlgorithm.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingAlgorithm"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingAlgorithm.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingProtocol">
            <summary>
            This models the JSON object representing a load balancing protocol.
            </summary>
            <seealso cref="M:net.openstack.Providers.Rackspace.ILoadBalancerService.ListProtocolsAsync(System.Threading.CancellationToken)"/>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Load_Balancing_Protocols-d1e4269.html">List Load Balancing Protocols (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingProtocol._name">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingProtocol.Name"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingProtocol._port">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingProtocol.Port"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingProtocol.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingProtocol"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingProtocol.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingProtocol"/> class
            using the specified name and port number.
            </summary>
            <param name="name">The protocol name.</param>
            <param name="port">The default port number for the protocol, or 0 if no default port is defined for the protocol.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="port"/> is less than 0 or greated than 65535.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingProtocol.Name">
            <summary>
            Gets the name of the load balancing protocol.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingProtocol.Port">
            <summary>
            Gets the port for the load balancing protocol.
            </summary>
            <value>
            The default port number used for the protocol, or <c>null</c> if the JSON response from
            the server did not include the underlying property. If the value is 0, no default port
            is defined for the protocol.
            </value>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.MetadataId">
            <summary>
            Represents the unique identifier of a metadata item in the <see cref="T:net.openstack.Providers.Rackspace.ILoadBalancerService"/>.
            </summary>
            <seealso cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem.Id"/>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.MetadataId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.MetadataId"/> class
            with the specified identifier value.
            </summary>
            <param name="id">The metadata item identifier value.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="id"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="id"/> is empty.</exception>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.MetadataId.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.MetadataId"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.MetadataId.Converter.FromValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NamespaceDoc">
            <summary>
            The <see cref="N:net.openstack.Providers.Rackspace.Objects.LoadBalancers"/> namespaces define
            the object model for communicating with Rackspace's Cloud Load Balancers service over REST APIs.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem">
            <summary>
            This class represents a single entry in a load balancer access list.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem._id">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem.Id"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem._address">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem.Address"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem._type">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem.AccessType"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem"/> class during
            JSON deserialization.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem.#ctor(System.Net.IPAddress,net.openstack.Providers.Rackspace.Objects.LoadBalancers.AccessType)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem"/> class with the
            specified IP address and access type.
            </summary>
            <param name="address">The IP address to which this network item applies.</param>
            <param name="accessType">The access type for this network item.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="address"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="accessType"/> is <c>null</c>.</para>
            </exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem.#ctor(System.String,net.openstack.Providers.Rackspace.Objects.LoadBalancers.AccessType)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem"/> class with the
            specified IP address and access type.
            </summary>
            <param name="address">The IP address, or address range in CIDR notation, to which this network item applies.</param>
            <param name="accessType">The access type for this network item.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="address"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="accessType"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="address"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem.Id">
            <summary>
            Gets the unique ID associated with this network item resource in the load balancer service.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem.Address">
            <summary>
            Gets the IP address, or address range in CIDR notation, to which this network item applies.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem.AccessType">
            <summary>
            The access type for this network item.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItemId">
            <summary>
            Represents the unique identifier of an access control network item in the <see cref="T:net.openstack.Providers.Rackspace.ILoadBalancerService"/>.
            </summary>
            <seealso cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItem.Id"/>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItemId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItemId"/> class
            with the specified identifier value.
            </summary>
            <param name="id">The network item identifier value.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="id"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="id"/> is empty.</exception>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItemId.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItemId"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NetworkItemId.Converter.FromValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node">
            <summary>
            Represents a load balancer node in the <see cref="T:net.openstack.Providers.Rackspace.ILoadBalancerService"/>.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration">
            <summary>
            Represents a load balancer node configuration.
            </summary>
            <remarks>
            This class is used in calls to <see cref="M:net.openstack.Providers.Rackspace.ILoadBalancerService.AddNodeAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration,net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})"/>
            or <see cref="M:net.openstack.Providers.Rackspace.ILoadBalancerService.AddNodeRangeAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,System.Collections.Generic.IEnumerable{net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration},net.openstack.Core.AsyncCompletionOption,System.Threading.CancellationToken,net.openstack.Core.IProgress{net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer})"/>, and the
            <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node"/> class extends this class to represent a load balancer
            node that already exists as a resource in the <see cref="T:net.openstack.Providers.Rackspace.ILoadBalancerService"/>.
            </remarks>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration._address">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration.Address"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration._port">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration.Port"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration._condition">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration.Condition"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration._type">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration.Type"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration._weight">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration.Weight"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration"/> class during
            JSON deserialization.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration.#ctor(System.Net.IPAddress,System.Int32,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeCondition,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeType,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration"/> class.
            </summary>
            <param name="address">The IP address of the node.</param>
            <param name="port">The port number for the load balanced service.</param>
            <param name="condition">The condition for the node, which determines its role within the load balancer.</param>
            <param name="type">The node type. If this value is <c>null</c>, a provider-specific default value will be used.</param>
            <param name="weight">The weight of the node.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="address"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="condition"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="port"/> is less than 0 or greater than 65535.
            <para>-or-</para>
            <para>If <paramref name="weight"/> is less than or equal to 0.</para>
            </exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration.#ctor(System.String,System.Int32,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeCondition,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeType,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration"/> class.
            </summary>
            <param name="hostDomain">The domain name of the node.</param>
            <param name="port">The port number for the load balanced service.</param>
            <param name="condition">The condition for the node, which determines its role within the load balancer.</param>
            <param name="type">The node type. If this value is <c>null</c>, a provider-specific default value will be used.</param>
            <param name="weight">The weight of the node.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="hostDomain"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="condition"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="hostDomain"/> is empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="port"/> is less than 0 or greater than 65535.
            <para>-or-</para>
            <para>If <paramref name="weight"/> is less than or equal to 0.</para>
            </exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration.Address">
            <summary>
            Gets the IP address or domain name for the node.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration.Condition">
            <summary>
            Gets the condition for the node, which determines its role within the load balancer.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration.Port">
            <summary>
            Gets the port number of the load balanced service.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration.Type">
            <summary>
            Gets the load balancer node type.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration.Weight">
            <summary>
            Gets the weight of the load balancer node.
            </summary>
            <remarks>
            This property is only used by load balancers with a weighted algorithm, such as
            <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingAlgorithm.WeightedRoundRobin"/>.
            </remarks>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node._id">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node.Id"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node._status">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node.Status"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node"/> class during
            JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node.Id">
            <summary>
            Gets unique ID representing this node within the load balancers service.
            </summary>
            <value>
            The unique ID for the load balancer node, or <c>null</c> if the JSON response
            from the server did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node.Status">
            <summary>
            Gets the status of the load balancer node.
            </summary>
            <value>
            The status of the load balancer node, or <c>null</c> if the JSON response
            from the server did not include this property.
            </value>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeCondition">
            <summary>
            Represents the role of a node within a load balancer.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known node conditions,
            with added support for unknown conditions returned by a server extension.
            </remarks>
            <seealso cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeConfiguration.Condition"/>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Modify_Nodes-d1e2503.html">Modify Nodes (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeCondition.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeCondition"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeCondition.FromName(System.String)">
            <summary>
            Gets the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeCondition"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeCondition.Enabled">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeCondition"/> instance representing a node which is permitted
            to accept new connections.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeCondition.Disabled">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeCondition"/> instance representing a node which is not permitted
            to accept any new connections regardless of the session persistence configuration.
            Existing connections are forcibly terminated.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeCondition.Draining">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeCondition"/> instance representing a node which is allowed to
            service existing established connections and connections that are being directed to
            it as a result of the session persistence configuration.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeCondition.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeCondition"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeCondition.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId">
            <summary>
            Represents the unique identifier of a load balancer node in the <see cref="T:net.openstack.Providers.Rackspace.ILoadBalancerService"/>.
            </summary>
            <seealso cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node.Id"/>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId"/> class
            with the specified identifier value.
            </summary>
            <param name="id">The load balancer node identifier value.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="id"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="id"/> is empty.</exception>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeId.Converter.FromValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent">
            <summary>
            This class represents a node service event in the load balancer service.
            </summary>
            <see cref="M:net.openstack.Providers.Rackspace.ILoadBalancerService.ListNodeServiceEventsAsync(net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerId,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventId,System.Nullable{System.Int32},System.Threading.CancellationToken)"/>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent._id">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.Id"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent._loadBalancerId">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.LoadBalancerId"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent._nodeId">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.NodeId"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent._detailedMessage">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.DetailedMessage"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent._type">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.Type"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent._category">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.Category"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent._severity">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.Severity"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent._description">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.Description"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent._relativeUri">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.RelativeUri"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent._accountId">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.AccountId"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent._title">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.Title"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent._author">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.Author"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent._created">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.Created"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.Id">
            <summary>
            Gets the unique ID for this node service event record.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.LoadBalancerId">
            <summary>
            Gets the load balancer ID.
            </summary>
            <seealso cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer.Id"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.NodeId">
            <summary>
            Gets the load balancer node ID.
            </summary>
            <seealso cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node.Id"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.DetailedMessage">
            <summary>
            Gets the detailed message describing the service event.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.Type">
            <summary>
            Gets the service event type.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.Category">
            <summary>
            Gets the service event category.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.Severity">
            <summary>
            Gets the service event severity.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.Description">
            <summary>
            Gets a description of the service event.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.RelativeUri">
            <summary>
            Gets <placeholder>what?</placeholder>
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.AccountId">
            <summary>
            Gets the account ID associated with this service event. The account ID within
            the load balancer service is equivalent to the <see cref="P:net.openstack.Core.Domain.Tenant.Id">Tenant.Id</see>
            referenced by other services.
            </summary>
            <value>
            The account ID for the node service event, or <c>null</c> if the JSON response from the server
            did not include this property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.Title">
            <summary>
            Gets the title of the service event.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.Author">
            <summary>
            Gets the author responsible for this service event.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.Created">
            <summary>
            Gets a timestamp indicating when this service event was created.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventCategory">
            <summary>
            Represents a node service event category.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known categories,
            with added support for unknown categories returned by a server extension.
            </remarks>
            <seealso cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.Category"/>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Node-Events-d1e264.html">View Node Service Events (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventCategory.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventCategory"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventCategory.FromName(System.String)">
            <summary>
            Gets the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventCategory"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventCategory.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventCategory"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventCategory.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventId">
            <summary>
            Represents the unique identifier of a node service event in the <see cref="T:net.openstack.Providers.Rackspace.ILoadBalancerService"/>.
            </summary>
            <seealso cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.Id"/>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventId"/> class
            with the specified identifier value.
            </summary>
            <param name="id">The node service event identifier value.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="id"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="id"/> is empty.</exception>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventId.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventId"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventId.Converter.FromValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventSeverity">
            <summary>
            Represents a node service event severity.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known severities,
            with added support for unknown severities returned by a server extension.
            </remarks>
            <seealso cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.Severity"/>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Node-Events-d1e264.html">View Node Service Events (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventSeverity.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventSeverity"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventSeverity.FromName(System.String)">
            <summary>
            Gets the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventSeverity"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventSeverity.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventSeverity"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventSeverity.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventType">
            <summary>
            Represents a node service event type.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known event types,
            with added support for unknown types returned by a server extension.
            </remarks>
            <seealso cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent.Type"/>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Node-Events-d1e264.html">View Node Service Events (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventType"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventType.FromName(System.String)">
            <summary>
            Gets the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventType"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventType.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventType"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEventType.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeStatus">
            <summary>
            Represents load balancer node status.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known node statuses,
            with added support for unknown statuses returned by a server extension.
            </remarks>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Nodes-d1e2218.html">List Nodes (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeStatus.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeStatus"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeStatus.FromName(System.String)">
            <summary>
            Gets the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeStatus"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeStatus.Online">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeStatus"/> representing <placeholder>placeholder</placeholder>.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeStatus.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeStatus"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeStatus.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeType">
            <summary>
            Represents load balancer node type.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known node types,
            with added support for unknown types returned by a server extension.
            </remarks>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Add_Nodes-d1e2379.html">Add Nodes (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeType"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeType.FromName(System.String)">
            <summary>
            Gets the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeType"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeType.Primary">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeType"/> representing a node in the normal rotation to receive traffic from the load balancer.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeType.Secondary">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeType"/> representing a node only in the rotation to receive traffic from the load balancer when all the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeType.Primary"/> nodes fail.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeType.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeType"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeType.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeUpdate">
            <summary>
            This object models the JSON representation of a configuration update to apply
            to an existing load balancer node.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeUpdate._condition">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeUpdate.Condition"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeUpdate._type">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeUpdate.Type"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeUpdate._weight">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeUpdate.Weight"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeUpdate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeUpdate"/> class during
            JSON deserialization.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeUpdate.#ctor(net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeCondition,net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeType,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeUpdate"/> class.
            </summary>
            <param name="condition">The condition for the node, which determines its role within the load balancer. If this value is <c>null</c>, the existing value for the node is not changed.</param>
            <param name="type">The node type. If this value is <c>null</c>, a provider-specific default value will be used. If this value is <c>null</c>, the existing value for the node is not changed.</param>
            <param name="weight">The weight of the node. If this value is <c>null</c>, the existing value for the node is not changed.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="weight"/> is less than or equal to 0.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeUpdate.Condition">
            <summary>
            Gets the condition for the node, which determines its role within the load balancer.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeUpdate.Type">
            <summary>
            Gets the load balancer node type.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeUpdate.Weight">
            <summary>
            Gets the weight of the load balancer node.
            </summary>
            <remarks>
            This property is only used by load balancers with a weighted algorithm, such as
            <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingAlgorithm.WeightedRoundRobin"/>.
            </remarks>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Request.AddLoadBalancerMetadataRequest">
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Request.AddLoadBalancerMetadataRequest.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Request.AddLoadBalancerMetadataRequest"/> class
            with the specified metadata.
            </summary>
            <param name="metadata">The metadata to add.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="metadata"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="metadata"/> contains a pair whose key is <c>null</c> or empty, or whose value is <c>null</c>.</exception>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Request.AddNodesRequest">
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Request.CreateAccessListRequest">
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Request.CreateLoadBalancerRequest">
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Request.NamespaceDoc">
            <summary>
            The <see cref="N:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Request"/> namespace
            contains the object models for JSON request bodies sent in calls to Rackspace's
            Cloud Load Balancers API.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Request.SetLoadBalancerConnectionLoggingRequest">
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.GetLoadBalancerConnectionLoggingResponse">
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.GetLoadBalancerConnectionLoggingResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.GetLoadBalancerConnectionLoggingResponse"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Request.SetLoadBalancerContentCachingRequest">
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.GetLoadBalancerContentCachingResponse">
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.GetLoadBalancerContentCachingResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.GetLoadBalancerContentCachingResponse"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Request.SetLoadBalancerErrorPageRequest">
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.GetLoadBalancerErrorPageResponse">
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.GetLoadBalancerErrorPageResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.GetLoadBalancerErrorPageResponse"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Request.UpdateLoadBalancerMetadataItemRequest">
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Request.UpdateLoadBalancerMetadataItemRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Request.UpdateLoadBalancerMetadataItemRequest"/> class
            with the specified metadata value.
            </summary>
            <param name="value">The updated metadata value.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="value"/> is <c>null</c>.</exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Request.UpdateLoadBalancerMetadataItemRequest.UpdateMetadataItemRequestBody.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Request.UpdateLoadBalancerMetadataItemRequest.UpdateMetadataItemRequestBody"/> class
            with the specified metadata value.
            </summary>
            <param name="value">The updated metadata value.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="value"/> is <c>null</c>.</exception>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Request.UpdateLoadBalancerNodeRequest">
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Request.UpdateLoadBalancerNodeRequest._nodeUpdate">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Request.UpdateLoadBalancerNodeRequest.NodeUpdate"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Request.UpdateLoadBalancerNodeRequest.#ctor(net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeUpdate)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Request.UpdateLoadBalancerNodeRequest"/> class
            with the specified configuration.
            </summary>
            <param name="nodeUpdate">The updated configuration for the load balancer node.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="nodeUpdate"/> is <c>null</c>.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Request.UpdateLoadBalancerNodeRequest.NodeUpdate">
            <summary>
            Gets the updated configuration for the load balancer node.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Request.UpdateLoadBalancerRequest">
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.GetAccessListResponse">
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.GetAccessListResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.GetAccessListResponse"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.GetLoadBalancerMetadataItemResponse">
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.GetLoadBalancerMetadataItemResponse._metadataItem">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.GetLoadBalancerMetadataItemResponse.MetadataItem"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.GetLoadBalancerMetadataItemResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.GetLoadBalancerMetadataItemResponse"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.GetLoadBalancerNodeResponse">
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.GetLoadBalancerNodeResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.GetLoadBalancerNodeResponse"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.GetLoadBalancerResponse">
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.GetLoadBalancerResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.GetLoadBalancerResponse"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.GetLoadBalancerSslConfigurationResponse">
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.GetLoadBalancerSslConfigurationResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.GetLoadBalancerSslConfigurationResponse"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListAllowedDomainsResponse">
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListAllowedDomainsResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListAllowedDomainsResponse"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListAllowedDomainsResponse.AllowedDomain.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListAllowedDomainsResponse.AllowedDomain"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListAllowedDomainsResponse.AllowedDomain.AllowedDomainDescriptor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListAllowedDomainsResponse.AllowedDomain.AllowedDomainDescriptor"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancerMetadataResponse">
            <summary>
            This models the JSON response used for the List Metadata and Add Metadata requests.
            </summary>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Metadata-d1e2218.html">List Metadata (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Add_Metadata-d1e2379.html">Add Metadata (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancerMetadataResponse._metadata">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancerMetadataResponse.Metadata"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancerMetadataResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancerMetadataResponse"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancerMetadataResponse.Metadata">
            <summary>
            Gets a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerMetadataItem"/> objects describing the
            metadata associated with a resource in the load balancer service.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancerNodesResponse">
            <summary>
            This models the JSON response used for the List Nodes and Add Nodes requests.
            </summary>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Nodes-d1e2218.html">List Nodes (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Add_Nodes-d1e2379.html">Add Nodes (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancerNodesResponse._nodes">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancerNodesResponse.Nodes"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancerNodesResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancerNodesResponse"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancerNodesResponse.Nodes">
            <summary>
            Gets a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Node"/> objects describing the load balancer
            node resources available for a load balancer in the load balancer service.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancersResponse">
            <summary>
            This models the JSON response used for the List Load Balancers request.
            </summary>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Load_Balancers-d1e1367.html">List Load Balancers (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancersResponse._loadBalancers">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancersResponse.LoadBalancers"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancersResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancersResponse"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancersResponse.LoadBalancers">
            <summary>
            Gets a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancer"/> objects describing the load
            balancer resources in a load balancer service provider.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancerThrottlesResponse">
            <summary>
            This models the JSON response used for the Throttle Connections request.
            </summary>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Throttle_Connections-d1e4057.html">Throttle Connections (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancerThrottlesResponse._throttles">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancerThrottlesResponse.Throttles"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancerThrottlesResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancerThrottlesResponse"/>
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancerThrottlesResponse.Throttles">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.ConnectionThrottles"/> object describing the connection throttling
            configuration for a load balancer.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancerUsageResponse">
            <summary>
            This models the JSON response used for the List Usage request.
            </summary>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Usage-d1e3014.html">List Usage (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancerUsageResponse._loadBalancerUsage">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancerUsageResponse.UsageRecords"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancerUsageResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancerUsageResponse"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancerUsageResponse.UsageRecords">
            <summary>
            Gets a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerUsage"/> objects describing the load
            balancer usage resources in a load balancer service provider.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancingAlgorithmsResponse">
            <summary>
            This models the JSON response used for the List Load Balancing Algorithms request.
            </summary>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Load_Balancing_Algorithms-d1e4459.html">List Load Balancing Algorithms (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancingAlgorithmsResponse._algorithms">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancingAlgorithmsResponse.Algorithms"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancingAlgorithmsResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancingAlgorithmsResponse"/>
            class during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancingAlgorithmsResponse.Algorithms">
            <summary>
            Gets a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingAlgorithm"/> objects
            describing the load balancing algorithms supported by a load balancer
            service provider.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancingAlgorithmsResponse.SerializedLoadBalancingAlgorithm">
            <summary>
            This models the intermediate JSON representation of a named object.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancingAlgorithmsResponse.SerializedLoadBalancingAlgorithm._name">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancingAlgorithmsResponse.SerializedLoadBalancingAlgorithm.Algorithm"/> property.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancingAlgorithmsResponse.SerializedLoadBalancingAlgorithm.Algorithm">
            <summary>
            Gets the load balancing algorithm.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancingProtocolsResponse">
            <summary>
            This models the JSON response used for the List Load Balancing Protocols request.
            </summary>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/List_Load_Balancing_Protocols-d1e4269.html">List Load Balancing Protocols (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancingProtocolsResponse._protocols">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancingProtocolsResponse.Protocols"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancingProtocolsResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancingProtocolsResponse"/>
            class during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListLoadBalancingProtocolsResponse.Protocols">
            <summary>
            Gets a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancingProtocol"/> objects describing the
            protocols supported by the a load balancing service provider.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListNodeServiceEventsResponse">
            <summary>
            This models the JSON response used for the View Node Service Events request.
            </summary>
            <seealso href="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Node-Events-d1e264.html">View Node Service Events (Rackspace Cloud Load Balancers Developer Guide - API v1.0)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListNodeServiceEventsResponse._nodeServiceEvents">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListNodeServiceEventsResponse.NodeServiceEvents"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListNodeServiceEventsResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListNodeServiceEventsResponse"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListNodeServiceEventsResponse.NodeServiceEvents">
            <summary>
            Gets a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.NodeServiceEvent"/> objects describing the node service
            events for a load balancer.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListVirtualAddressesResponse">
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListVirtualAddressesResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.ListVirtualAddressesResponse"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response.NamespaceDoc">
            <summary>
            The <see cref="N:net.openstack.Providers.Rackspace.Objects.LoadBalancers.Response"/> namespace
            contains the object models for JSON responses returned by calls to Rackspace's
            Cloud Load Balancers API.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistence">
            <summary>
            This class represents a session persistence configuration in the load balancer service.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistence._body">
            <summary>
            This intermediate field is required for modeling the JSON representation of a
            session persistence configuration.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistence.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistence"/> class during
            JSON deserialization.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistence.#ctor(net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistenceType)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistence"/> class using
            the specified persistence type.
            </summary>
            <param name="persistenceType">The session persistence mode to use.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="persistenceType"/> is <c>null</c>.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistence.PersistenceType">
            <summary>
            Gets the session persistence type.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistence.SessionPersistenceBody">
            <summary>
            This class models the JSON representation used for the body of a session persistence
            configuration.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistence.SessionPersistenceBody._persistenceType">
            <summary>
            This is the backing field for the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistenceType"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistence.SessionPersistenceBody.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistence.SessionPersistenceBody"/> class during
            JSON deserialization.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistence.SessionPersistenceBody.#ctor(net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistenceType)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistence.SessionPersistenceBody"/> class
            using the specified persistence type.
            </summary>
            <param name="persistenceType">The session persistence mode to use.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="persistenceType"/> is <c>null</c>.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistence.SessionPersistenceBody.PersistenceType">
            <summary>
            Gets the session persistence type.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistenceType">
            <summary>
            Represents a type of session persistence in the load balancers service.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known session persistence types,
            with added support for unknown types returned by a server extension.
            </remarks>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistenceType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistenceType"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistenceType.FromName(System.String)">
            <summary>
            Gets the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistenceType"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistenceType.HttpCookie">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistenceType"/> representing a session persistence mechanism that
            inserts an HTTP cookie and is used to determine the destination back-end node. This is supported
            for HTTP load balancing only.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistenceType.SourceAddress">
            <summary>
            Gets a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistenceType"/> representing a session persistence mechanism that
            will keep track of the source IP address that is mapped and is able to determine the destination
            back-end node. This is supported for HTTPS pass-through and non-HTTP load balancing only.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistenceType.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistenceType"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.SessionPersistenceType.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.VirtualAddressId">
            <summary>
            Represents the unique identifier of a virtual address in the <see cref="T:net.openstack.Providers.Rackspace.ILoadBalancerService"/>.
            </summary>
            <seealso cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.LoadBalancerVirtualAddress.Id"/>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.VirtualAddressId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.VirtualAddressId"/> class
            with the specified identifier value.
            </summary>
            <param name="id">The virtual address identifier value.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="id"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="id"/> is empty.</exception>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.VirtualAddressId.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.VirtualAddressId"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.VirtualAddressId.Converter.FromValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.WebServerHealthMonitor">
            <summary>
            This class models the JSON object used to represent a <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.HealthMonitor"/> for
            HTTP or HTTPS connections.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.WebServerHealthMonitor._bodyRegex">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.WebServerHealthMonitor.BodyRegex"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.WebServerHealthMonitor._path">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.WebServerHealthMonitor.Path"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.WebServerHealthMonitor._statusRegex">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.WebServerHealthMonitor.StatusRegex"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.LoadBalancers.WebServerHealthMonitor._hostHeader">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.WebServerHealthMonitor.HostHeader"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.WebServerHealthMonitor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.WebServerHealthMonitor"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.WebServerHealthMonitor.#ctor(System.Boolean,System.Int32,System.TimeSpan,System.TimeSpan,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.WebServerHealthMonitor"/> class
            with the specified values.
            </summary>
            <param name="https"><c>true</c> to monitor HTTPS connections; otherwise, <c>false</c> to monitor HTTP connections.</param>
            <param name="attemptsBeforeDeactivation">The number of permissible monitor failures before removing a node from rotation.</param>
            <param name="timeout">The maximum number of seconds to wait for a connection to be established before timing out.</param>
            <param name="delay">The minimum time to wait before executing the health monitor.</param>
            <param name="bodyRegex">A regular expression that will be used to evaluate the contents of the body of the response.</param>
            <param name="path">The HTTP path that will be used in the sample request.</param>
            <param name="statusRegex">A regular expression that will be used to evaluate the HTTP status code returned in the response.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="bodyRegex"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="path"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="statusRegex"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="bodyRegex"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="path"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="statusRegex"/> is empty.</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="attemptsBeforeDeactivation"/> is less than or equal to 0.
            <para>-or-</para>
            <para>If <paramref name="timeout"/> is negative or <see cref="F:System.TimeSpan.Zero"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="delay"/> is negative or <see cref="F:System.TimeSpan.Zero"/>.</para>
            </exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.LoadBalancers.WebServerHealthMonitor.#ctor(System.Boolean,System.Int32,System.TimeSpan,System.TimeSpan,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.LoadBalancers.WebServerHealthMonitor"/> class
            with the specified values.
            </summary>
            <param name="https"><c>true</c> to monitor HTTPS connections; otherwise, <c>false</c> to monitor HTTP connections.</param>
            <param name="attemptsBeforeDeactivation">The number of permissible monitor failures before removing a node from rotation.</param>
            <param name="timeout">The maximum number of seconds to wait for a connection to be established before timing out.</param>
            <param name="delay">The minimum time to wait before executing the health monitor.</param>
            <param name="bodyRegex">A regular expression that will be used to evaluate the contents of the body of the response.</param>
            <param name="path">The HTTP path that will be used in the sample request.</param>
            <param name="statusRegex">A regular expression that will be used to evaluate the HTTP status code returned in the response.</param>
            <param name="hostHeader">The name of a host for which the health monitors will check, or <c>null</c> <placeholder>when?</placeholder>.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="bodyRegex"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="path"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="statusRegex"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="bodyRegex"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="path"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="statusRegex"/> is empty.</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="attemptsBeforeDeactivation"/> is less than or equal to 0.
            <para>-or-</para>
            <para>If <paramref name="timeout"/> is negative or <see cref="F:System.TimeSpan.Zero"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="delay"/> is negative or <see cref="F:System.TimeSpan.Zero"/>.</para>
            </exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.WebServerHealthMonitor.BodyRegex">
            <summary>
            Gets a regular expression that will be used to evaluate the contents of the body of the response.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.WebServerHealthMonitor.Path">
            <summary>
            Gets the HTTP path that will be used in the sample request.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.WebServerHealthMonitor.StatusRegex">
            <summary>
            Gets a regular expression that will be used to evaluate the HTTP status code returned in the response.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.LoadBalancers.WebServerHealthMonitor.HostHeader">
            <summary>
            Gets the optional name of a host for which the health monitors will check.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Mapping.BulkDeletionResultMapper.Map(net.openstack.Providers.Rackspace.Objects.Response.BulkDeleteResponse)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Mapping.BulkDeletionResultMapper.Map(net.openstack.Providers.Rackspace.Objects.BulkDeletionResults)">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Mapping.NamespaceDoc">
            <summary>
            The <see cref="N:net.openstack.Providers.Rackspace.Objects.Mapping"/> namespace provides
            implementations of <see cref="T:net.openstack.Core.Domain.Mapping.IObjectMapper`2"/> used in Rackspace-specific
            features.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.NamespaceDoc">
            <summary>
            The <see cref="N:net.openstack.Providers.Rackspace.Objects"/> namespaces define
            the object model for communicating with Rackspace services over REST APIs.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Queues.NamespaceDoc">
            <summary>
            The <see cref="N:net.openstack.Providers.Rackspace.Objects.Queues"/> namespaces define
            the object model for communicating with Rackspace's Cloud Queues service over REST APIs.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Queues.Request.ClaimMessagesRequest">
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Queues.Request.NamespaceDoc">
            <summary>
            The <see cref="N:net.openstack.Providers.Rackspace.Objects.Queues.Request"/> namespace
            contains the object models for JSON request bodies sent in calls to Rackspace's
            Cloud Queues API.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Queues.Response.ListCloudQueueMessagesResponse">
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Queues.Response.ListCloudQueueMessagesResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Queues.Response.ListCloudQueueMessagesResponse"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Queues.Response.ListCloudQueuesResponse">
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Queues.Response.ListCloudQueuesResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Queues.Response.ListCloudQueuesResponse"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Queues.Response.NamespaceDoc">
            <summary>
            The <see cref="N:net.openstack.Providers.Rackspace.Objects.Queues.Response"/> namespace
            contains the object models for JSON responses returned by calls to Rackspace's
            Cloud Queues API.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.CreateVirtualInterfaceRequest">
            <summary>
            This models the JSON request used for the Create Virtual Interface request.
            </summary>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/api_create_virtual_interface.html">Create Virtual Interface (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.CreateVirtualInterfaceRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.CreateVirtualInterfaceRequest"/>
            class with the specified network ID.
            </summary>
            <param name="networkId">The network ID. This is obtained from <see cref="P:net.openstack.Core.Domain.CloudNetwork.Id">CloudNetwork.Id</see>.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="networkId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="networkId"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.CreateVirtualInterfaceRequest.VirtualInterface">
            <summary>
            Gets additional details about the virtual interface to create.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.CreateVirtualInterfaceRequest.CreateVirtualInterface">
            <summary>
            This models the JSON body containing details for a Create Virtual Interface request.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.CreateVirtualInterfaceRequest.CreateVirtualInterface.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.CreateVirtualInterfaceRequest.CreateVirtualInterface"/>
            class with the specified network ID.
            </summary>
            <param name="networkId">The network ID. This is obtained from <see cref="P:net.openstack.Core.Domain.CloudNetwork.Id">CloudNetwork.Id</see>.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="networkId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="networkId"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.CreateVirtualInterfaceRequest.CreateVirtualInterface.NetworkId">
            <summary>
            Gets the network ID.
            </summary>
            <seealso cref="P:net.openstack.Core.Domain.CloudNetwork.Id"/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.NamespaceDoc">
            <summary>
            The <see cref="N:net.openstack.Providers.Rackspace.Objects.Request"/> namespace
            contains the object models for JSON request bodies sent in calls to Rackspace's
            REST APIs.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.PasswordCredential">
            <summary>
            This models the JSON representation of password credentials.
            </summary>
            <seealso cref="T:net.openstack.Providers.Rackspace.Objects.Request.SetPasswordRequest"/>
            <seealso cref="T:net.openstack.Providers.Rackspace.Objects.Response.PasswordCredentialResponse"/>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Update User Credentials (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.PasswordCredential.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.PasswordCredential"/> class
            with the specified username and password.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="username"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="password"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="username"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="password"/> is empty.</para>
            </exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.PasswordCredential.Username">
            <summary>
            Gets the username for the credentials.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.PasswordCredential.Password">
            <summary>
            Gets the password for the credentials.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.ExtractArchiveError">
            <summary>
            Represents an error which occurred while extracting a file during an Extract Archive operation.
            </summary>
            <seealso cref="M:net.openstack.Providers.Rackspace.CloudFilesProvider.ExtractArchive(System.IO.Stream,System.String,net.openstack.Providers.Rackspace.Objects.ArchiveFormat,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Action{System.Int64},System.Boolean,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso cref="M:net.openstack.Providers.Rackspace.CloudFilesProvider.ExtractArchiveFromFile(System.String,System.String,net.openstack.Providers.Rackspace.Objects.ArchiveFormat,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Action{System.Int64},System.Boolean,net.openstack.Core.Domain.CloudIdentity)"/>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Response.ExtractArchiveError._path">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Response.ExtractArchiveError.Path"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Response.ExtractArchiveError._status">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Response.ExtractArchiveError.Status"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Response.ExtractArchiveError.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Response.ExtractArchiveError"/> class
            with the specified path and status.
            </summary>
            <param name="path">The path of the file affected by this error.</param>
            <param name="status">The specific status for the error affecting the file.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="path"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="path"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.ExtractArchiveError.Path">
            <summary>
            Gets the path of the file affected by this error.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.ExtractArchiveError.Status">
            <summary>
            Gets the specific status for the error affecting the file.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.ExtractArchiveResponse">
            <summary>
            This class models the JSON response to an Extract Archive operation.
            </summary>
            <seealso cref="M:net.openstack.Providers.Rackspace.CloudFilesProvider.ExtractArchive(System.IO.Stream,System.String,net.openstack.Providers.Rackspace.Objects.ArchiveFormat,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Action{System.Int64},System.Boolean,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso cref="M:net.openstack.Providers.Rackspace.CloudFilesProvider.ExtractArchiveFromFile(System.String,System.String,net.openstack.Providers.Rackspace.Objects.ArchiveFormat,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Action{System.Int64},System.Boolean,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/Extract_Archive-d1e2338.html">Extract Archive (Rackspace Cloud Files Developer Guide - API v1)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Response.ExtractArchiveResponse._createdFiles">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Response.ExtractArchiveResponse.CreatedFiles"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Response.ExtractArchiveResponse._responseStatus">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Response.ExtractArchiveResponse.ResponseStatus"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Response.ExtractArchiveResponse._responseBody">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Response.ExtractArchiveResponse.ResponseBody"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Objects.Response.ExtractArchiveResponse._errors">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.Objects.Response.ExtractArchiveResponse.CreatedFiles"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Response.ExtractArchiveResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Response.ExtractArchiveResponse"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.ExtractArchiveResponse.CreatedFiles">
            <summary>
            Gets the number of files created by the Extract Archive operation.
            </summary>
            <value>
            The number of files created by the Extract Archive operation, or <c>null</c> if
            the JSON response from the server did not include the underlying property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.ExtractArchiveResponse.ResponseStatus">
            <summary>
            Gets the response status for the Extract Archive operation.
            </summary>
            <value>
            The response status for the Extract Archive operation, or <c>null</c> if
            the JSON response from the server did not include the underlying property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.ExtractArchiveResponse.ResponseBody">
            <summary>
            Gets the response body for the Extract Archive operation.
            </summary>
            <value>
            The response body for the Extract Archive operation, or <c>null</c> if
            the JSON response from the server did not include the underlying property.
            </value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.ExtractArchiveResponse.Errors">
            <summary>
            Gets a collection of <see cref="T:net.openstack.Providers.Rackspace.Objects.Response.ExtractArchiveError"/> objects describing errors
            which occurred while processing specific files within the archive.
            </summary>
            <value>
            A collection of errors, if any, which occurred for specific files during the
            Extract Archive operation, or <c>null</c> if the JSON response from the server
            did not include the underlying property.
            </value>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.ListEndpointsResponse">
            <summary>
            This models the JSON response used for the List Endpoints request.
            </summary>
            <seealso href="hhttp://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_listEndpointsForToken_v2.0_tokens__tokenId__endpoints_Token_Operations.html">List Token Endpoints (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.ListEndpointsResponse.Endpoints">
            <summary>
            Gets additional information about the endpoints.
            </summary>
            <seealso cref="T:net.openstack.Core.Domain.UserAccess"/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.MetadataItemResponse">
            <summary>
            This models the JSON response used for the Get Metadata Item request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Get_Metadata_Item-d1e5507.html">Get Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.MetadataItemResponse.Metadata">
            <summary>
            Gets information about the metadata item. The returned <see cref="P:net.openstack.Providers.Rackspace.Objects.Response.MetadataItemResponse.Metadata"/> object
            will only have one item, containing the key and value for the metadata item.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.ListVirtualInterfacesResponse">
            <summary>
            This models the JSON response used for the Create Virtual Interface and List Virtual Interfaces requests.
            </summary>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/api_create_virtual_interface.html">Create Virtual Interface (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/list_virt_interfaces.html">List Virtual Interfaces (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.ListVirtualInterfacesResponse.VirtualInterfaces">
            <summary>
            Gets a collection of information about the virtual interfaces.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.NamespaceDoc">
            <summary>
            The <see cref="N:net.openstack.Providers.Rackspace.Objects.Response"/> namespace
            contains the object models for JSON responses returned by calls to Rackspace's
            REST APIs.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.RoleResponse">
            <summary>
            This models the JSON response used for the Add Role and Get Role by Name requests.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_addRole_v2.0_OS-KSADM_roles_Role_Operations_OS-KSADM.html">Add Role (OpenStack Identity Service API v2.0 Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_getRoleByName_v2.0_OS-KSADM_roles_Role_Operations_OS-KSADM.html">Get Role by Name (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.RoleResponse.Role">
            <summary>
            Gets information about the role.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Validators.CloudFilesValidator">
            <summary>
            Provides an implementation of <see cref="T:net.openstack.Core.Validators.IObjectStorageValidator"/> for
            operation with Rackspace's Cloud Files product.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="T:net.openstack.Core.Validators.IObjectStorageValidator">
            <summary>
            Represents an object that validates arguments for an implementation of <see cref="T:net.openstack.Core.Providers.IObjectStorageProvider"/>
            prior to sending the calls to the underlying REST API.
            </summary>
        </member>
        <member name="M:net.openstack.Core.Validators.IObjectStorageValidator.ValidateContainerName(System.String)">
            <summary>
            Validates a container name for an object storage provider.
            </summary>
            <param name="containerName">The container name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="containerName"/> is <c>null</c>.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="containerName"/> is not a valid container name.</exception>
        </member>
        <member name="M:net.openstack.Core.Validators.IObjectStorageValidator.ValidateObjectName(System.String)">
            <summary>
            Validates an object name for an object storage provider.
            </summary>
            <param name="objectName">The object name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="objectName"/> is <c>null</c>.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="objectName"/> is not a valid object name.</exception>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Validators.CloudFilesValidator._default">
            <summary>
            A default instance of <see cref="T:net.openstack.Providers.Rackspace.Validators.CloudBlockStorageValidator"/>.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Validators.CloudFilesValidator.ValidateContainerName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Validators.CloudFilesValidator.ValidateObjectName(System.String)">
            <inheritdoc/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Validators.CloudFilesValidator.Default">
            <summary>
            Gets a default instance of <see cref="T:net.openstack.Providers.Rackspace.Validators.CloudBlockStorageValidator"/>.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.EncodeDecodeProvider">
            <summary>
            Provides a default implementation of <see cref="T:net.openstack.Core.IEncodeDecodeProvider"/> for
            use with Rackspace services. This implementation uses <see cref="M:System.Web.HttpUtility.UrlEncode(System.String)"/>
            and <see cref="M:System.Web.HttpUtility.UrlDecode(System.String)"/>, with an additional string transformation that
            encodes the <c>+</c> character to <c>%20</c>, effectively rendering it to a space
            character.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.EncodeDecodeProvider._default">
            <summary>
            A default instance of <see cref="T:net.openstack.Providers.Rackspace.EncodeDecodeProvider"/>.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.EncodeDecodeProvider.UrlEncode(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.EncodeDecodeProvider.UrlDecode(System.String)">
            <inheritdoc/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.EncodeDecodeProvider.Default">
            <summary>
            Gets a default instance of <see cref="T:net.openstack.Providers.Rackspace.EncodeDecodeProvider"/>.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Exceptions.InvalidVolumeSizeException">
            <summary>
            Represents errors which occur during validation of a block storage volume size.
            </summary>
            <seealso cref="M:net.openstack.Core.Validators.IBlockStorageValidator.ValidateVolumeSize(System.Int32)"/>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Exceptions.InvalidVolumeSizeException.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Exceptions.InvalidVolumeSizeException"/> class
            with the specified volume size.
            </summary>
            <param name="size">The invalid volume size which was requested.</param>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Exceptions.InvalidVolumeSizeException.Size">
            <summary>
            Gets the requested volume size.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.CloudNetworksProvider">
            <summary>
            <para>The Cloud Networks Provider enable simple access to the Rackspace Cloud Network Services.
            Cloud Networks lets you create a virtual Layer 2 network, known as an isolated network, 
            which gives you greater control and security when you deploy web applications.</para>
            <para/>
            <para>Documentation URL: http://docs.rackspace.com/servers/api/v2/cn-gettingstarted/content/ch_overview.html</para>
            </summary>
            <see cref="T:net.openstack.Core.Providers.INetworksProvider"/>
            <inheritdoc/>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudNetworksProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudFilesProvider"/> class with
            no default identity or region, and the default identity provider and REST
            service implementation.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudNetworksProvider.#ctor(net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudNetworksProvider"/> class with
            the specified default identity, no default region, and the default identity
            provider and REST service implementation.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <c>null</c>, no default identity is available so all calls must specify an explicit identity.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudNetworksProvider.#ctor(JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudNetworksProvider"/> class with
            no default identity or region, the default identity provider, and the specified
            REST service implementation.
            </summary>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <c>null</c>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudNetworksProvider.#ctor(net.openstack.Core.Providers.IIdentityProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudNetworksProvider"/> class with
            no default identity or region, the specified identity provider, and the default
            REST service implementation.
            </summary>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <c>null</c>, a new instance of <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> is created with no default identity.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudNetworksProvider.#ctor(net.openstack.Core.Domain.CloudIdentity,net.openstack.Core.Providers.IIdentityProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudNetworksProvider"/> class with
            the specified default identity and identity provider, no default region, and
            the default REST service implementation.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <c>null</c>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <c>null</c>, a new instance of <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> is created using <paramref name="identity"/> as the default identity.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudNetworksProvider.#ctor(net.openstack.Core.Domain.CloudIdentity,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudNetworksProvider"/> class with
            the specified default identity and REST service implementation, no default region,
            and the default identity provider.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <c>null</c>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <c>null</c>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudNetworksProvider.#ctor(net.openstack.Core.Domain.CloudIdentity,net.openstack.Core.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudNetworksProvider"/> class with
            the specified default identity, no default region, and the specified identity
            provider and REST service implementation.
            </summary>
            <param name="identity">An instance of a <see cref="T:net.openstack.Core.Domain.CloudIdentity"/> object. <remarks>If not provided, the user will be required to pass a <see cref="T:net.openstack.Core.Domain.CloudIdentity"/> object to each method individually.</remarks></param>
            <param name="identityProvider">An instance of an <see cref="T:net.openstack.Core.Providers.IIdentityProvider"/> to override the default <see cref="T:net.openstack.Core.Domain.CloudIdentity"/></param>
            <param name="restService">An instance of an <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to override the default <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/></param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudNetworksProvider.#ctor(net.openstack.Core.Domain.CloudIdentity,System.String,net.openstack.Core.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudNetworksProvider"/> class with
            the specified default identity, default region, identity provider, and REST
            service implementation.
            </summary>
            <param name="identity">An instance of a <see cref="T:net.openstack.Core.Domain.CloudIdentity"/> object. <remarks>If not provided, the user will be required to pass a <see cref="T:net.openstack.Core.Domain.CloudIdentity"/> object to each method individually.</remarks></param>
            <param name="defaultRegion">The default region to use for calls that do not explicitly specify a region. If this value is <c>null</c>, the default region for the user will be used; otherwise if the service uses region-specific endpoints all calls must specify an explicit region.</param>
            <param name="identityProvider">An instance of an <see cref="T:net.openstack.Core.Providers.IIdentityProvider"/> to override the default <see cref="T:net.openstack.Core.Domain.CloudIdentity"/></param>
            <param name="restService">An instance of an <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to override the default <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/></param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudNetworksProvider.ListNetworks(System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudNetworksProvider.CreateNetwork(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudNetworksProvider.ShowNetwork(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudNetworksProvider.DeleteNetwork(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudNetworksProvider.GetServiceEndpoint(net.openstack.Core.Domain.CloudIdentity,System.String)">
            <summary>
            Gets the public service endpoint to use for Cloud Networks requests for the specified identity and region.
            </summary>
            <remarks>
            This method uses <c>compute</c> for the service type, and <c>cloudServersOpenStack</c> for the preferred service name.
            </remarks>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <param name="region">The preferred region for the service. If this value is <c>null</c>, the user's default region will be used.</param>
            <returns>The public URL for the requested Cloud Networks endpoint.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.NoDefaultRegionSetException">If <paramref name="region"/> is <c>null</c> and no default region is available for the identity or provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthenticationException">If no service catalog is available for the user.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthorizationException">If no endpoint is available for the requested service.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.IExtendedCloudIdentityProvider">
            <summary>
            Represents an identity provider that implements Rackspace-specific extensions to the
            OpenStack Identity API.
            </summary>
            <seealso href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/index.html">Rackspace Cloud Identity Client Developer Guide - API v2.0</seealso>
        </member>
        <member name="T:net.openstack.Core.Providers.IIdentityProvider">
            <summary>
            Represents a provider for the OpenStack Identity Service.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/">OpenStack Identity Service API v2.0 Reference</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IIdentityProvider.Authenticate(net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Authenticates the user for the specified identity.
            </summary>
            <remarks>
            This method always authenticates to the server, even if an unexpired, cached <see cref="T:net.openstack.Core.Domain.UserAccess"/>
            is available for the specified identity.
            </remarks>
            <param name="identity">The identity of the user to authenticate. If this value is <c>null</c>, the authentication is performed with the <see cref="P:net.openstack.Core.Providers.IIdentityProvider.DefaultIdentity"/>.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.UserAccess"/> object containing the authentication token, service catalog and user data.</returns>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the authentication request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IIdentityProvider.ValidateToken(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Validates a given token.
            </summary>
            <param name="token">The token to be validated.</param>
            <param name="tenantId">If specified, the validation ensures that the specified tenant is in scope. This is obtained from <see cref="P:net.openstack.Core.Domain.Tenant.Id"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.UserAccess"/> object containing the authentication token and user data. The <see cref="P:net.openstack.Core.Domain.UserAccess.ServiceCatalog"/> property of the result may be <c>null</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="token"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="token"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ItemNotFoundException">If <paramref name="tenantId"/> is specified and the token is not valid within the specified tenant.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the authentication request failed or the token does not exist.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_validateToken_v2.0_tokens__tokenId__Token_Operations.html">Validate Token (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IIdentityProvider.GetToken(net.openstack.Core.Domain.CloudIdentity,System.Boolean)">
             <summary>
             Gets the authentication token for the specified identity. If necessary, the identity is authenticated
             on the server to obtain a token.
             </summary>
             <remarks>
             If <paramref name="forceCacheRefresh"/> is <c>false</c> and a cached <see cref="T:net.openstack.Core.Domain.IdentityToken"/>
             is available for the specified <paramref name="identity"/>, this method may return the cached
             value without performing an authentication against the server. If <paramref name="forceCacheRefresh"/>
             is <c>true</c>, this method returns the equivalent of the following statement.
            
             <para><c>provider.<see cref="M:net.openstack.Core.Providers.IIdentityProvider.Authenticate(net.openstack.Core.Domain.CloudIdentity)">Authenticate</see>(<paramref name="identity"/>).<see cref="P:net.openstack.Core.Domain.UserAccess.Token"/></c></para>
             </remarks>
             <param name="identity">The identity of the user to authenticate. If this value is <c>null</c>, the authentication is performed with the <see cref="P:net.openstack.Core.Providers.IIdentityProvider.DefaultIdentity"/>.</param>
             <param name="forceCacheRefresh">If <c>true</c>, the user is always authenticated against the server; otherwise a cached <see cref="T:net.openstack.Core.Domain.IdentityToken"/> may be returned.</param>
             <returns>The user's authentication token.</returns>
             <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
             <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the authentication request failed.</exception>
             <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IIdentityProvider.GetRolesByUser(System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Lists global roles for a specified user. Excludes tenant roles.
            </summary>
            <param name="userId">The user's ID. This is obtained from <see cref="P:net.openstack.Core.Domain.User.Id">User.Id</see>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the <see cref="P:net.openstack.Core.Providers.IIdentityProvider.DefaultIdentity"/> for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:net.openstack.Core.Domain.Role"/> objects describing the roles for the specified user.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="userId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="userId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_listUserGlobalRoles_v2.0_users__user_id__roles_User_Operations.html">List User Global Roles (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IIdentityProvider.ListUsers(net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Lists all users for the account.
            </summary>
            <param name="identity">The cloud identity to use for this request. If not specified, the <see cref="P:net.openstack.Core.Providers.IIdentityProvider.DefaultIdentity"/> for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:net.openstack.Core.Domain.User"/> objects describing the users for the account.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_listUsers_v2.0_users_.html">List Users (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IIdentityProvider.GetUserByName(System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Gets the details for the user with the specified username.
            </summary>
            <param name="name">The username.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the <see cref="P:net.openstack.Core.Providers.IIdentityProvider.DefaultIdentity"/> for the current provider instance will be used.</param>
            <returns>The <see cref="T:net.openstack.Core.Domain.User"/> details.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_getUserByName_v2.0_users__User_Operations.html">Get User Information by Name (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IIdentityProvider.GetUser(System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Gets the details for the user with the specified ID.
            </summary>
            <param name="id">The user ID.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the <see cref="P:net.openstack.Core.Providers.IIdentityProvider.DefaultIdentity"/> for the current provider instance will be used.</param>
            <returns>The <see cref="T:net.openstack.Core.Domain.User"/> details.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="id"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="id"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_getUserById_v2.0_users__user_id__User_Operations.html">Get User Information by ID (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IIdentityProvider.AddUser(net.openstack.Core.Domain.NewUser,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Adds a user to the account.
            </summary>
            <remarks>
            The returned <see cref="T:net.openstack.Core.Domain.NewUser"/> object will contain the password of the created user.
            If no <see cref="P:net.openstack.Core.Domain.NewUser.Password"/> is specified in <paramref name="user"/>, the returned
            password will be an automatically generated password from the server.
            <note type="warning">
            After this call, there is no way to retrieve the password for a user. If the password was
            auto-generated by the server, make sure to either store the returned value or provide the
            information to the user for later use.
            </note>
            </remarks>
            <param name="user">A <see cref="T:net.openstack.Core.Domain.NewUser"/> object containing the details of the user to create.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the <see cref="P:net.openstack.Core.Providers.IIdentityProvider.DefaultIdentity"/> for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.NewUser"/> object containing the details of the created user.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="user"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="user"/>.<see cref="P:net.openstack.Core.Domain.NewUser.Username"/> is <c>null</c> or empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="user"/>.<see cref="P:net.openstack.Core.Domain.NewUser.Id"/> is not <c>null</c> (i.e. <paramref name="user"/> represents a user that already exists).
            <para>-or-</para>
            <para>If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_addUser_v2.0_users_.html">Add User (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IIdentityProvider.UpdateUser(net.openstack.Core.Domain.User,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Updates the details for the specified user.
            </summary>
            <remarks>
            The ID of the user to update is specified in <paramref name="user"/>.<see cref="P:net.openstack.Core.Domain.User.Id"/>.
            The other fields of <paramref name="user"/> are either <c>null</c> to keep the existing values
            or non-null to specify an updated value. The returned <see cref="T:net.openstack.Core.Domain.User"/> instance contains
            the complete details of the updated user.
            </remarks>
            <param name="user">The <see cref="T:net.openstack.Core.Domain.User"/> details to update.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the <see cref="P:net.openstack.Core.Providers.IIdentityProvider.DefaultIdentity"/> for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.User"/> object containing the details of the updated user.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="user"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="user"/>.<see cref="P:net.openstack.Core.Domain.User.Id"/> is <c>null</c> or empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUser_v2.0_users__userId__.html">Update User (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IIdentityProvider.DeleteUser(System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Deletes the specified user from the account.
            </summary>
            <param name="userId">The user ID. This is obtained from <see cref="P:net.openstack.Core.Domain.User.Id"/> or <see cref="P:net.openstack.Core.Domain.NewUser.Id"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the <see cref="P:net.openstack.Core.Providers.IIdentityProvider.DefaultIdentity"/> for the current provider instance will be used.</param>
            <returns><c>true</c> if the user was successfully deleted; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="userId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="userId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/DELETE_deleteUser_v2.0_users__userId__.html">Delete User (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IIdentityProvider.ListUserCredentials(System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Lists the credentials for the specified user.
            </summary>
            <param name="userId">The user ID. This is obtained from <see cref="P:net.openstack.Core.Domain.User.Id"/> or <see cref="P:net.openstack.Core.Domain.NewUser.Id"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the <see cref="P:net.openstack.Core.Providers.IIdentityProvider.DefaultIdentity"/> for the current provider instance will be used.</param>
            <returns>List of <see cref="T:net.openstack.Core.Domain.UserCredential"/> objects describing the credentials of the specified user.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="userId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="userId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_listCredentials_v2.0_users__userId__OS-KSADM_credentials_.html">List Credentials (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IIdentityProvider.ListTenants(net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Lists the tenants for the currently authenticated user.
            </summary>
            <param name="identity">The cloud identity to use for this request. If not specified, the <see cref="P:net.openstack.Core.Providers.IIdentityProvider.DefaultIdentity"/> for the current provider instance will be used.</param>
            <returns>List of <see cref="T:net.openstack.Core.Domain.Tenant"/> objects describing the tenants of the currently authenticated user.</returns>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_listTenants_v2.0_tenants_Tenant_Operations.html">List Tenants (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IIdentityProvider.GetUserAccess(net.openstack.Core.Domain.CloudIdentity,System.Boolean)">
            <summary>
            Gets the user access details, authenticating with the server if necessary.
            </summary>
            <remarks>
            If <paramref name="forceCacheRefresh"/> is <c>false</c> and a cached <see cref="T:net.openstack.Core.Domain.UserAccess"/>
            is available for the specified <paramref name="identity"/>, this method may return the cached
            value without performing an authentication against the server. If <paramref name="forceCacheRefresh"/>
            is <c>true</c>, this method is equivalent to <see cref="M:net.openstack.Core.Providers.IIdentityProvider.Authenticate(net.openstack.Core.Domain.CloudIdentity)"/>.
            </remarks>
            <param name="identity">The identity of the user to authenticate. If this value is <c>null</c>, the authentication is performed with the <see cref="P:net.openstack.Core.Providers.IIdentityProvider.DefaultIdentity"/>.</param>
            <param name="forceCacheRefresh">If <c>true</c>, the user is always authenticated against the server; otherwise a cached <see cref="T:net.openstack.Core.Domain.IdentityToken"/> may be returned.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.UserAccess"/> object containing the authentication token, service catalog and user data.</returns>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IIdentityProvider.GetUserCredential(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Gets the specified user credential.
            </summary>
            <param name="userId">The user ID. This is obtained from <see cref="P:net.openstack.Core.Domain.User.Id"/> or <see cref="P:net.openstack.Core.Domain.NewUser.Id"/>.</param>
            <param name="credentialKey">The credential key.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the <see cref="P:net.openstack.Core.Providers.IIdentityProvider.DefaultIdentity"/> for the current provider instance will be used.</param>
            <returns>The <see cref="T:net.openstack.Core.Domain.UserCredential"/> details for the specified credentials type.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="userId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="credentialKey"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="userId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="credentialKey"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="">Get User Credentials (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IIdentityProvider.ListEndpoints(System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Lists the endpoints associated to a given authentication token.
            </summary>
            <param name="token">The authentication token Id. This is obtained from <see cref="P:net.openstack.Core.Domain.IdentityToken.Id"/></param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:net.openstack.Core.Domain.ExtendedEndpoint"/> objects containing endpoint details.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="token"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="token"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the authentication request failed or the token does not exist.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_listEndpointsForToken_v2.0_tokens__tokenId__endpoints_Token_Operations.html">List Token Endpoints (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="P:net.openstack.Core.Providers.IIdentityProvider.DefaultIdentity">
            <summary>
            Gets the default <see cref="T:net.openstack.Core.Domain.CloudIdentity"/> to use for requests from this provider.
            If no default identity is available, the value is <c>null</c>.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IExtendedCloudIdentityProvider.ListRoles(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Lists all roles.
            <note type="warning">The behavior of this API method is not defined. Do not use.</note>
            </summary>
            <param name="serviceId">The "serviceId".</param>
            <param name="marker">The index of the last item in the previous list. Used for pagination. If the value is <c>null</c>, the list starts at the beginning.</param>
            <param name="limit">Indicates the maximum number of items to return. Used for pagination. If the value is <c>null</c>, a provider-specific default value is used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:net.openstack.Core.Domain.Role"/> objects describing the requested roles.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="limit"/> is less than 0.</exception>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/openstack-extensions/auth/OS-KSADM-admin-devguide/content/GET_listRoles_v2.0_OS-KSADM_roles_Admin_API_Service_Developer_Operations-d1e1357.html">List Roles (Rackspace OS-KSADM Extension - API v2.0)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IExtendedCloudIdentityProvider.ListUsersByRole(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Lists all users for a given role.
            </summary>
            <param name="roleId">The role ID. This is obtained from <see cref="P:net.openstack.Core.Domain.Role.Id">Role.Id</see>.</param>
            <param name="enabled">Allows you to filter enabled or un-enabled users. If the value is <c>null</c>, a provider-specific default value is used.</param>
            <param name="marker">The index of the last item in the previous list. Used for pagination. If the value is <c>null</c>, the list starts at the beginning.</param>
            <param name="limit">Indicates the maximum number of items to return. Used for pagination. If the value is <c>null</c>, a provider-specific default value is used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:net.openstack.Core.Domain.Role"/> objects describing the requested roles.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="limit"/> is less than 0 or greater than 1000.</exception>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IExtendedCloudIdentityProvider.AddRole(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Create a new role.
            </summary>
            <param name="name">The name for the new role.</param>
            <param name="description">The description for the new role.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.Role"/> containing the details of the added role.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_addRole_v2.0_OS-KSADM_roles_Role_Operations_OS-KSADM.html">Add Role (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IExtendedCloudIdentityProvider.GetRole(System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Gets details about the specified role.
            </summary>
            <param name="roleId">The role ID. This is obtained from <see cref="P:net.openstack.Core.Domain.Role.Id">Role.Id</see>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.Role"/> containing the details of the role.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="roleId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="roleId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_getRoleByName_v2.0_OS-KSADM_roles_Role_Operations_OS-KSADM.html">Get Role by Name (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IExtendedCloudIdentityProvider.AddRoleToUser(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Adds the specified global role to the user.
            </summary>
            <param name="userId">The user ID. This is obtained from <see cref="P:net.openstack.Core.Domain.NewUser.Id"/> or <see cref="P:net.openstack.Core.Domain.User.Id"/>.</param>
            <param name="roleId">The role ID. This is obtained from <see cref="P:net.openstack.Core.Domain.Role.Id"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><c>true</c> if the role was removed from the user; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="userId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="roleId"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="userId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="roleId"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/PUT_addUserRole_v2.0_users__userId__roles_OS-KSADM__roleId__.html">Add Global Role to User (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IExtendedCloudIdentityProvider.DeleteRoleFromUser(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Deletes the specified global role from the user.
            </summary>
            <param name="userId">The user ID. This is obtained from <see cref="P:net.openstack.Core.Domain.NewUser.Id"/> or <see cref="P:net.openstack.Core.Domain.User.Id"/>.</param>
            <param name="roleId">The role ID. This is obtained from <see cref="P:net.openstack.Core.Domain.Role.Id"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><c>true</c> if the role was removed from the user; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="userId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="roleId"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="userId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="roleId"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/DELETE_deleteUserRole_v2.0_users__userId__roles_OS-KSADM__roleId__.html">Delete Global Role from User (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IExtendedCloudIdentityProvider.UpdateUserCredentials(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Updates the API key for the specified user.
            </summary>
            <remarks>
            This method is a Rackspace-specific usage scenario for the
            <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Update User Credentials</see>
            method, where the credentials are always specified in the form of an API key.
            </remarks>
            <returns>A <see cref="T:net.openstack.Core.Domain.UserCredential"/> object containing the updated user information.</returns>
            <param name="userId">The user ID. This is obtained from <see cref="P:net.openstack.Core.Domain.NewUser.Id"/> or <see cref="P:net.openstack.Core.Domain.User.Id"/>.</param>
            <param name="apiKey">The new API key.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="userId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="apiKey"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="userId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="apiKey"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Update User Credentials (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IExtendedCloudIdentityProvider.DeleteUserCredentials(System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Deletes API key credentials for the specified user.
            </summary>
            <remarks>
            This method is a Rackspace-specific usage scenario for the
            <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/DELETE_deleteUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Delete User Credentials</see>
            method, where the credentials are always specified in the form of an API key.
            </remarks>
            <param name="userId">The user ID. This is obtained from <see cref="P:net.openstack.Core.Domain.NewUser.Id"/> or <see cref="P:net.openstack.Core.Domain.User.Id"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><c>true</c> if the credentials were removed from the user; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="userId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="userId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/DELETE_deleteUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Delete User Credentials</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IExtendedCloudIdentityProvider.SetUserPassword(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Sets the password for the specified user.
            </summary>
            <param name="userId">The user ID. This is obtained from <see cref="P:net.openstack.Core.Domain.NewUser.Id"/> or <see cref="P:net.openstack.Core.Domain.User.Id"/>.</param>
            <param name="password">The new password.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><c>true</c> if the operation succeeded; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="userId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="password"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="userId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="password"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Update User Credentials (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IExtendedCloudIdentityProvider.SetUserPassword(net.openstack.Core.Domain.User,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Updates the username and password for the specified user.
            </summary>
            <param name="user">The user.</param>
            <param name="password">The new password.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><c>true</c> if the operation succeeded; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="user"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="password"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="password"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="user"/>.<see cref="P:net.openstack.Core.Domain.User.Id"/> is <c>null</c> or empty.</para>
            <para>-or-</para>
            <para>If <paramref name="user"/>.<see cref="P:net.openstack.Core.Domain.User.Username"/> is <c>null</c> or empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Update User Credentials (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IExtendedCloudIdentityProvider.SetUserPassword(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Updates the username and password for the specified user.
            </summary>
            <param name="userId">The user ID. This is obtained from <see cref="P:net.openstack.Core.Domain.NewUser.Id"/> or <see cref="P:net.openstack.Core.Domain.User.Id"/>.</param>
            <param name="username">The new username.</param>
            <param name="password">The new password.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><c>true</c> if the operation succeeded; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="userId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="username"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="password"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="userId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="username"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="password"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Update User Credentials (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IExtendedCloudIdentityProvider.UpdateUserCredentials(net.openstack.Core.Domain.User,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Updates the username and API key for the specified user.
            </summary>
            <remarks>
            This method is a Rackspace-specific usage scenario for the
            <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Update User Credentials</see>
            method, where the credentials are always specified in the form of an API key.
            </remarks>
            <param name="user">The user.</param>
            <param name="apiKey">The API key.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.UserCredential"/> object containing the updated user information.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="user"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="apiKey"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="apiKey"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="user"/>.<see cref="P:net.openstack.Core.Domain.User.Id"/> is <c>null</c> or empty.</para>
            <para>-or-</para>
            <para>If <paramref name="user"/>.<see cref="P:net.openstack.Core.Domain.User.Username"/> is <c>null</c> or empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Update User Credentials (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IExtendedCloudIdentityProvider.UpdateUserCredentials(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Updates the username and API key for the specified user.
            </summary>
            <remarks>
            This method is a Rackspace-specific usage scenario for the
            <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Update User Credentials</see>
            method, where the credentials are always specified in the form of an API key.
            </remarks>
            <param name="userId">The user ID. This is obtained from <see cref="P:net.openstack.Core.Domain.NewUser.Id"/> or <see cref="P:net.openstack.Core.Domain.User.Id"/>.</param>
            <param name="username">The new username.</param>
            <param name="apiKey">The new API key.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.UserCredential"/> object containing the updated user information.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="userId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="username"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="apiKey"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="userId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="username"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="apiKey"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Update User Credentials (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Exceptions.InvalidETagException">
            <summary>
            Represents errors which occur while validating the ETag following an object transfer.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Exceptions.InvalidETagException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Exceptions.InvalidETagException"/> class.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Exceptions.InvalidETagException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Exceptions.InvalidETagException"/> class with
            serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="info"/> is <c>null</c>.</exception>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.CloudFilesProvider">
            <summary>
            Provides an implementation of <see cref="T:net.openstack.Core.Providers.IObjectStorageProvider"/>
            for operating with Rackspace's Cloud Files product.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/">OpenStack Object Storage API v1 Reference</seealso>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/Overview-d1e70.html">Rackspace Cloud Files Developer Guide - API v1</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.AuthToken">
            <summary>
            The X-Auth-Token header, which specifies the token to use for authenticated requests.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/authentication-object-dev-guide.html">Authentication (OpenStack Object Storage API v1 Reference)</seealso>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/Authentication-d1e639.html">Authentication (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.CdnManagementUrl">
            <summary>
            The X-Cdn-Management-Url header.
            <note type="warning">The value of this header is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.StorageUrl">
            <summary>
            The X-Storage-Url header, which specifies the base URI for all object storage requests.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/authentication-object-dev-guide.html">Authentication (OpenStack Object Storage API v1 Reference)</seealso>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/Authentication-d1e639.html">Authentication (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.AccountMetaDataPrefix">
            <summary>
            The X-Account-Meta- header prefix, which specifies the HTTP header prefix for metadata keys associated with an account.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/create-update-account-metadata.html">Create or Update Account Metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.AccountBytesUsed">
            <summary>
            The X-Account-Bytes-Used header, which specifies total storage used by an account in bytes.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/retrieve-account-metadata.html">Get Account Metadata (OpenStack Object Storage API v1 Reference)</seealso>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/View_Account_Details-d1e108.html">View Account Details (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.AccountContainerCount">
            <summary>
            The X-Account-Container-Count header, which specifies the number of containers associated with an account.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/retrieve-account-metadata.html">Get Account Metadata (OpenStack Object Storage API v1 Reference)</seealso>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/View_Account_Details-d1e108.html">View Account Details (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.AccountObjectCount">
            <summary>
            The X-Account-Object-Count header, which specifies the number of objects associated with an account.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/listing-and-creating-storage-containers.html">Listing and Creating Containers (OpenStack Object Storage API v1 Reference)</seealso>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/View_Account_Details-d1e108.html">View Account Details (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.ContainerMetaDataPrefix">
            <summary>
            The X-Container-Meta- header prefix, which specifies the HTTP header prefix for metadata keys associated with a container.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/Update_Container_Metadata-d1e1900.html">Create or Update Container Metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.ContainerRemoveMetaDataPrefix">
            <summary>
            The X-Remove-Container-Meta- header prefix, which specifies the HTTP header prefix for removing metadata keys from a container.
            </summary>
            <remarks>
            This value is not required in the .NET SDK, since a shorter way to remove metadata is to simply assign an empty string as the value for a metadata key.
            </remarks>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/delete-container-metadata.html">Delete Container Metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.ContainerBytesUsed">
            <summary>
            The X-Container-Bytes-Used header, which specifies the total size of all objects stored in a container.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/retrieve-container-metadata.html">Get Container Metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.ContainerObjectCount">
            <summary>
            The X-Container-Object-Count header, which specifies the total number of objects stored in a container.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/retrieve-container-metadata.html">Get Container Metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.WebIndex">
            <summary>
            The Web-Index metadata key, which specifies the index page for every pseudo-directory in a website.
            </summary>
            <remarks>
            If your pseudo-directory does not have a file with the same name as your index file, visits to the sub-directory return a 404 error.
            </remarks>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/Create_Static_Website-dle4000.html">Create Static Website (OpenStack Object Storage API v1 Reference - API v1)</seealso>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/Create_Static_Website-dle4000.html">Create Static Website (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.WebError">
             <summary>
             The Web-Error metadata key, which specifies the suffix for error pages displayed for a website.
             </summary>
             <remarks>
             You may create and set custom error pages for visitors to your website; currently, only
             401 (Unauthorized) and 404 (Not Found) errors are supported. To do this, set the metadata
             value <see cref="F:net.openstack.Providers.Rackspace.CloudFilesProvider.WebError"/>.
            
             <para>
             Error pages are served with the &lt;status&gt; code prepended to the name of the error
             page you set. For instance, if you set <see cref="F:net.openstack.Providers.Rackspace.CloudFilesProvider.WebError"/> to <fictitiousUri>error.html</fictitiousUri>,
             401 errors will display the page <fictitiousUri>401error.html</fictitiousUri>. Similarly, 404
             errors will display <fictitiousUri>404error.html</fictitiousUri>. You must have both of these
             pages created in your container when you set the <see cref="F:net.openstack.Providers.Rackspace.CloudFilesProvider.WebError"/> metadata, or your site
             will display generic error pages.
             </para>
            
             <para>
             You need only set the <see cref="F:net.openstack.Providers.Rackspace.CloudFilesProvider.WebError"/> metadata once for your entire static website.
             </para>
             </remarks>
             <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/Set_Error_Pages_for_Static_Website-dle4005.html">Set Error Pages for Static Website (OpenStack Object Storage API v1 Reference - API v1)</seealso>
             <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/Set_Error_Pages_for_Static_Website-dle4005.html">Set Error Pages for Static Website (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.WebListings">
            <summary>
            The Web-Listings metadata key, which specifies whether or not pseudo-directories should
            display a list of files instead of returning a 404 error when the pseudo-directory does
            not contain an index file.
            </summary>
            <remarks>
            To display a list of files in pseudo-directories instead of an index, set the
            <see cref="F:net.openstack.Providers.Rackspace.CloudFilesProvider.WebListings"/> metadata value to <c>"TRUE"</c> for a container.
            </remarks>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/Create_Static_Website-dle4000.html">Create Static Website (OpenStack Object Storage API v1 Reference - API v1)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.WebListingsCSS">
            <summary>
            The Web-Listings-CSS metadata key, which specifies the stylesheet to use for file listings
            when <see cref="F:net.openstack.Providers.Rackspace.CloudFilesProvider.WebListings"/> is <c>true</c> and a pseudo-directory does not contain an
            index file.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/Create_Static_Website-dle4000.html">Create Static Website (OpenStack Object Storage API v1 Reference - API v1)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.VersionsLocation">
            <summary>
            The X-Versions-Location header, which specifies the name of the container where previous
            versions of objects are stored for a container.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/Object_Versioning-e1e3230.html">Object Versioning (OpenStack Object Storage API v1 Reference - API v1)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.CdnUri">
            <summary>
            The X-Cdn-Uri header, which specifies the publicly-available URL
            for a CDN-enabled container.
            </summary>
            <remarks>
            <note type="note">
            This header is a Rackspace-specific extension to the OpenStack Object Storage Service.
            </note>
            </remarks>
            <seealso cref="P:net.openstack.Core.Domain.ContainerCDN.CDNUri"/>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/CDN_Container_Services-d1e2632.html">CDN Container Services (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.CdnSslUri">
            <summary>
            The X-Cdn-Ssl-Uri header, which specifies the publicly-available
            URL for SSL access to a CDN-enabled container.
            </summary>
            <remarks>
            <note type="note">
            This header is a Rackspace-specific extension to the OpenStack Object Storage Service.
            </note>
            </remarks>
            <seealso cref="P:net.openstack.Core.Domain.ContainerCDN.CDNSslUri"/>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/CDN_Container_Services-d1e2632.html">CDN Container Services (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.CdnStreamingUri">
            <summary>
            The X-Cdn-Streaming-Uri header, which specifies the publicly-available
            URL for streaming access to a CDN-enabled container.
            </summary>
            <remarks>
            <note type="note">
            This header is a Rackspace-specific extension to the OpenStack Object Storage Service.
            </note>
            </remarks>
            <seealso cref="P:net.openstack.Core.Domain.ContainerCDN.CDNStreamingUri"/>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/CDN_Container_Services-d1e2632.html">CDN Container Services (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.CdnTTL">
            <summary>
            The X-Ttl header, which specifies the Time To Live (TTL) in seconds for a CDN-enabled container.
            </summary>
            <remarks>
            <note type="note">
            This header is a Rackspace-specific extension to the OpenStack Object Storage Service.
            </note>
            </remarks>
            <seealso cref="P:net.openstack.Core.Domain.ContainerCDN.Ttl"/>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/CDN-Enable_a_Container-d1e2665.html">CDN-Enable a Container (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.CdnLogRetention">
            <summary>
            The X-Log-Retention header, which specifies whether or not log retention is enabled for a CDN-enabled container.
            </summary>
            <remarks>
            <note type="note">
            This header is a Rackspace-specific extension to the OpenStack Object Storage Service.
            </note>
            </remarks>
            <seealso cref="P:net.openstack.Core.Domain.ContainerCDN.LogRetention"/>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/List_CDN-Enabled_Container_Metadata-d1e2711.html">List a CDN-Enabled Container's Metadata (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.CdnEnabled">
            <summary>
            The X-Cdn-Enabled header, which specifies whether or not a container is CDN-enabled.
            </summary>
            <remarks>
            <note type="note">
            This header is a Rackspace-specific extension to the OpenStack Object Storage Service.
            </note>
            </remarks>
            <seealso cref="P:net.openstack.Core.Domain.ContainerCDN.CDNEnabled"/>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/CDN-Enable_a_Container-d1e2665.html">CDN-Enable a Container (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.CdnIosUri">
            <summary>
            The X-Cdn-Ios-Uri header, which specifies the publicly-available URL for
            iOS streaming access to a CDN-enabled container.
            </summary>
            <remarks>
            <note type="note">
            This header is a Rackspace-specific extension to the OpenStack Object Storage Service.
            </note>
            </remarks>
            <seealso cref="P:net.openstack.Core.Domain.ContainerCDN.CDNIosUri"/>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/iOS-Streaming-d1f3725.html">iOS Streaming (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.ObjectMetaDataPrefix">
            <summary>
            The X-Object-Meta- header prefix, which specifies the HTTP header prefix for metadata keys associated with an object.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/update-object-metadata.html">Update Object Metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.ObjectDeleteAfter">
            <summary>
            The X-Delete-After header, which specifies the relative time (in seconds
            from "now") after which an object should expire, not be served, and be
            deleted completely from the storage system.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/Expiring_Objects-e1e3228.html">Expiring Objects with the X-Delete-After and X-Delete-At Headers (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.ObjectDeleteAt">
            <summary>
            The X-Delete-At header, which specifies the absolute time (in Unix Epoch
            format) after which an object should expire, not be served, and be deleted
            completely from the storage system.
            </summary>
            <remarks>
            Unix time is specified as the number of seconds elapsed since 00:00:00 UTC,
            1 January 1970, not counting leap seconds.
            </remarks>
            <seealso href="http://en.wikipedia.org/wiki/Unix_time">Unix time (Wikipedia)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/Expiring_Objects-e1e3228.html">Expiring Objects with the X-Delete-After and X-Delete-At Headers (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.Etag">
            <summary>
            The ETag header, which specifies the MD5 checksum of the data in an object stored in Object Storage.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/create-update-object.html">Create or Update Object (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.Destination">
            <summary>
            The Destination header, which specifies the destination container and object
            name for a Copy Object operation.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/copy-object.html">Copy Object (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.ObjectManifest">
            <summary>
            The X-Object-Manifest header, which specifies the container and prefix for the segments of a
            large object.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/large-object-creation.html">Create Large Objects (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.CdnPurgeEmail">
            <summary>
            The X-Purge-Email header, which specifies the comma-separated list of email addresses to notify when a CDN purge request completes.
            </summary>
            <remarks>
            <note type="note">
            This header is a Rackspace-specific extension to the OpenStack Object Storage Service.
            </note>
            </remarks>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/Purge_CDN-Enabled_Objects-d1e3858.html">Purge CDN-Enabled Objects (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.ProcessedHeadersMetadataKey">
            <summary>
            This value is used as the key for storing metadata information in the dictionary
            returned by <see cref="M:net.openstack.Providers.Rackspace.CloudFilesMetadataProcessor.ProcessMetadata(System.Collections.Generic.IList{JSIStudios.SimpleRESTServices.Client.HttpHeader})"/>.
            </summary>
            <seealso cref="T:net.openstack.Providers.Rackspace.CloudFilesMetadataProcessor"/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.ProcessedHeadersHeaderKey">
            <summary>
            This value is used as the key for storing non-metadata header information in the
            dictionary returned by <see cref="M:net.openstack.Providers.Rackspace.CloudFilesMetadataProcessor.ProcessMetadata(System.Collections.Generic.IList{JSIStudios.SimpleRESTServices.Client.HttpHeader})"/>.
            </summary>
            <seealso cref="T:net.openstack.Providers.Rackspace.CloudFilesMetadataProcessor"/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider._cloudFilesValidator">
            <summary>
            The <see cref="T:net.openstack.Core.Validators.IObjectStorageValidator"/> to use for this provider. This is
            typically set to <see cref="P:net.openstack.Providers.Rackspace.Validators.CloudFilesValidator.Default"/>.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider._cloudFilesMetadataProcessor">
            <summary>
            The <see cref="T:net.openstack.Core.IObjectStorageMetadataProcessor"/> to use for this provider. This is
            typically set to <see cref="P:net.openstack.Providers.Rackspace.CloudFilesMetadataProcessor.Default"/>.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider._encodeDecodeProvider">
            <summary>
            The <see cref="T:net.openstack.Core.IEncodeDecodeProvider"/> to use for this provider. This is
            typically set to <see cref="P:net.openstack.Providers.Rackspace.EncodeDecodeProvider.Default"/>.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider._statusParser">
            <summary>
            The <see cref="T:net.openstack.Core.IStatusParser"/> to use for this provider. This is
            typically set to <see cref="P:net.openstack.Core.HttpStatusCodeParser.Default"/>.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider._bulkDeletionResultMapper">
            <summary>
            The <see cref="T:net.openstack.Core.Domain.Mapping.IObjectMapper`2"/> to use for
            this provider. This is typically set to a new instance of <see cref="T:net.openstack.Providers.Rackspace.Objects.Mapping.BulkDeletionResultMapper"/>.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudFilesProvider"/> class with
            no default identity or region, and the default identity provider and REST service
            implementation.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.#ctor(net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudFilesProvider"/> class with
            the specified default identity, no default region, and the default identity provider
            and REST service implementation.
            </summary>
            <param name="defaultIdentity">The default identity to use for calls that do not explicitly specify an identity. If this value is <c>null</c>, no default identity is available so all calls must specify an explicit identity.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.#ctor(JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudFilesProvider"/> class with
            no default identity or region, the default identity provider, and the specified
            REST service implementation.
            </summary>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <c>null</c>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.#ctor(net.openstack.Core.Providers.IIdentityProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudFilesProvider"/> class with
            no default identity or region, the specified identity provider, and the default
            REST service implementation.
            </summary>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <c>null</c>, a new instance of <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> is created with no default identity.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.#ctor(net.openstack.Core.Domain.CloudIdentity,net.openstack.Core.Providers.IIdentityProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudFilesProvider"/> class with
            the specified default identity and identity provider, no default region, and
            the default REST service implementation.
            </summary>
            <param name="defaultIdentity">The default identity to use for calls that do not explicitly specify an identity. If this value is <c>null</c>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <c>null</c>, a new instance of <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> is created using <paramref name="defaultIdentity"/> as the default identity.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.#ctor(net.openstack.Core.Domain.CloudIdentity,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudFilesProvider"/> class with
            the specified default identity and REST service implementation, no default region,
            and the default identity provider.
            </summary>
            <param name="defaultIdentity">The default identity to use for calls that do not explicitly specify an identity. If this value is <c>null</c>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <c>null</c>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.#ctor(net.openstack.Core.Domain.CloudIdentity,net.openstack.Core.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudFilesProvider"/> class with
            the specified default identity, no default region, the specified identity
            provider and REST service implementation, and the default
            Rackspace-Cloud-Files-specific implementations of the object storage validator,
            metadata processor, encoder, status parser, and bulk delete results mapper.
            </summary>
            <param name="defaultIdentity">The default identity to use for calls that do not explicitly specify an identity. If this value is <c>null</c>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <c>null</c>, a new instance of <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> is created using <paramref name="defaultIdentity"/> as the default identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <c>null</c>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.#ctor(net.openstack.Core.Domain.CloudIdentity,System.String,net.openstack.Core.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudFilesProvider"/> class with
            the specified default identity, default region, identity provider, and REST service
            implementation, and the default Rackspace-Cloud-Files-specific implementations of
            the object storage validator, metadata processor, encoder, status parser, and bulk
            delete results mapper.
            </summary>
            <param name="defaultIdentity">The default identity to use for calls that do not explicitly specify an identity. If this value is <c>null</c>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="defaultRegion">The default region to use for calls that do not explicitly specify a region. If this value is <c>null</c>, the default region for the user will be used; otherwise if the service uses region-specific endpoints all calls must specify an explicit region.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <c>null</c>, a new instance of <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> is created using <paramref name="defaultIdentity"/> as the default identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <c>null</c>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.#ctor(System.String,net.openstack.Core.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService,net.openstack.Core.Validators.IObjectStorageValidator,net.openstack.Core.IObjectStorageMetadataProcessor,net.openstack.Core.IEncodeDecodeProvider,net.openstack.Core.IStatusParser,net.openstack.Core.Domain.Mapping.IObjectMapper{net.openstack.Providers.Rackspace.Objects.Response.BulkDeleteResponse,net.openstack.Providers.Rackspace.Objects.BulkDeletionResults})">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudFilesProvider"/> class with
            no default identity, the specified default region, and the default identity
            provider, REST service implementation, validator, metadata processor, encoder,
            status parser, and bulk delete results mapper.
            </summary>
            <param name="defaultRegion">The default region to use for calls that do not explicitly specify a region. If this value is <c>null</c>, the default region for the user will be used; otherwise if the service uses region-specific endpoints all calls must specify an explicit region.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <c>null</c>, a new instance of <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> is created with no default identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <c>null</c>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
            <param name="cloudFilesValidator">The <see cref="T:net.openstack.Core.Validators.IObjectStorageValidator"/> to use for validating requests to this service.</param>
            <param name="cloudFilesMetadataProcessor">The <see cref="T:net.openstack.Core.IObjectStorageMetadataProcessor"/> to use for processing metadata returned in HTTP headers.</param>
            <param name="encodeDecodeProvider">The <see cref="T:net.openstack.Core.IEncodeDecodeProvider"/> to use for encoding data in URI query strings.</param>
            <param name="statusParser">The <see cref="T:net.openstack.Core.IStatusParser"/> to use for parsing HTTP status codes.</param>
            <param name="mapper">The object mapper to use for mapping <see cref="T:net.openstack.Providers.Rackspace.Objects.Response.BulkDeleteResponse"/> objects to <see cref="T:net.openstack.Providers.Rackspace.Objects.BulkDeletionResults"/> objects.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="cloudFilesValidator"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="cloudFilesMetadataProcessor"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="encodeDecodeProvider"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="statusParser"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="mapper"/> is <c>null</c>.</para>
            </exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.#ctor(net.openstack.Core.Domain.CloudIdentity,System.String,net.openstack.Core.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService,net.openstack.Core.Validators.IObjectStorageValidator,net.openstack.Core.IObjectStorageMetadataProcessor,net.openstack.Core.IEncodeDecodeProvider,net.openstack.Core.IStatusParser,net.openstack.Core.Domain.Mapping.IObjectMapper{net.openstack.Providers.Rackspace.Objects.Response.BulkDeleteResponse,net.openstack.Providers.Rackspace.Objects.BulkDeletionResults})">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudFilesProvider"/> class with
            the specified default identity, default region, identity provider, REST service
            implementation, validator, metadata processor, encoder, status parser, and bulk
            delete results mapper.
            </summary>
            <param name="defaultIdentity">The default identity to use for calls that do not explicitly specify an identity. If this value is <c>null</c>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="defaultRegion">The default region to use for calls that do not explicitly specify a region. If this value is <c>null</c>, the default region for the user will be used; otherwise if the service uses region-specific endpoints all calls must specify an explicit region.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <c>null</c>, a new instance of <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> is created using <paramref name="defaultIdentity"/> as the default identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <c>null</c>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
            <param name="cloudFilesValidator">The <see cref="T:net.openstack.Core.Validators.IObjectStorageValidator"/> to use for validating requests to this service.</param>
            <param name="cloudFilesMetadataProcessor">The <see cref="T:net.openstack.Core.IObjectStorageMetadataProcessor"/> to use for processing metadata returned in HTTP headers.</param>
            <param name="encodeDecodeProvider">The <see cref="T:net.openstack.Core.IEncodeDecodeProvider"/> to use for encoding data in URI query strings.</param>
            <param name="statusParser">The <see cref="T:net.openstack.Core.IStatusParser"/> to use for parsing HTTP status codes.</param>
            <param name="bulkDeletionResultMapper">The object mapper to use for mapping <see cref="T:net.openstack.Providers.Rackspace.Objects.Response.BulkDeleteResponse"/> objects to <see cref="T:net.openstack.Providers.Rackspace.Objects.BulkDeletionResults"/> objects.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="cloudFilesValidator"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="cloudFilesMetadataProcessor"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="encodeDecodeProvider"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="statusParser"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="bulkDeletionResultMapper"/> is <c>null</c>.</para>
            </exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.ListContainers(System.Nullable{System.Int32},System.String,System.String,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.CreateContainer(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.DeleteContainer(System.String,System.Boolean,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.GetContainerHeader(System.String,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.GetContainerMetaData(System.String,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.GetContainerCDNHeader(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.ListCDNContainers(System.Nullable{System.Int32},System.String,System.String,System.Boolean,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.EnableCDNOnContainer(System.String,System.Int64,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.EnableCDNOnContainer(System.String,System.Boolean,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.EnableCDNOnContainer(System.String,System.Int64,System.Boolean,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.DisableCDNOnContainer(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.UpdateContainerMetadata(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.DeleteContainerMetadata(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.DeleteContainerMetadata(System.String,System.String,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.UpdateContainerCdnHeaders(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.EnableStaticWebOnContainer(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.EnableStaticWebOnContainer(System.String,System.String,System.String,System.Boolean,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.EnableStaticWebOnContainer(System.String,System.String,System.Boolean,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.EnableStaticWebOnContainer(System.String,System.String,System.String,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.DisableStaticWebOnContainer(System.String,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.GetObjectHeaders(System.String,System.String,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.GetObjectMetaData(System.String,System.String,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.UpdateObjectMetadata(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.DeleteObjectMetadata(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.DeleteObjectMetadata(System.String,System.String,System.String,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.ListObjects(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.CreateObjectFromFile(System.String,System.String,System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Action{System.Int64},System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.CreateObject(System.String,System.IO.Stream,System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Action{System.Int64},System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.GetObject(System.String,System.String,System.IO.Stream,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,System.Action{System.Int64},System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.GetObjectSaveToFile(System.String,System.String,System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,System.Action{System.Int64},System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.CopyObject(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.DeleteObject(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.DeleteObjects(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Deletes a collection of objects from a container.
            </summary>
            <param name="container">The container name.</param>
            <param name="objects">A names of objects to delete.</param>
            <param name="headers">A collection of custom HTTP headers to include with the request.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="objects"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="objects"/> contains any null or empty values.</para>
            <para>-or-</para>
            <para>If <paramref name="headers"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="objects"/> contains an item that is not a valid object name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/Bulk_Delete-d1e2338.html">Bulk Delete (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.BulkDelete(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Deletes a collection of objects stored in object storage.
            </summary>
            <param name="items">The collection of items to delete. The keys of each pair specifies the container name, and the value specifies the object name.</param>
            <param name="headers">A collection of custom HTTP headers to include with the request.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="items"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="items"/> contains any values with null or empty keys or values.
            <para>-or-</para>
            <para>If <paramref name="headers"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="items"/> contains a pair where the key is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="items"/> contains a pair where the value is not a valid object name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/Bulk_Delete-d1e2338.html">Bulk Delete (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.ExtractArchiveFromFile(System.String,System.String,net.openstack.Providers.Rackspace.Objects.ArchiveFormat,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Action{System.Int64},System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Upload and automatically extract an archive of files.
            </summary>
            <param name="filePath">The source file path. Example <localUri>c:\folder1\folder2\archive_name.tar.gz</localUri></param>
            <param name="uploadPath">The target path for the extracted files. For details about this value, see the Extract Archive reference link in the documentation for this method.</param>
            <param name="archiveFormat">The archive format.</param>
            <param name="contentType">The content type of the files extracted from the archive. If the value is <c>null</c> or empty, the content type of the extracted files is unspecified.</param>
            <param name="chunkSize">The buffer size to use for copying streaming data.</param>
            <param name="headers">A collection of custom HTTP headers to associate with the object (see <see cref="M:net.openstack.Providers.Rackspace.CloudFilesProvider.GetObjectHeaders(System.String,System.String,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)"/>).</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="progressUpdated">A callback for progress updates. If the value is <c>null</c>, no progress updates are reported.</param>
            <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>An <see cref="T:net.openstack.Providers.Rackspace.Objects.Response.ExtractArchiveResponse"/> object containing the detailed result of the extract archive operation.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="filePath"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="uploadPath"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="archiveFormat"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="filePath"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="headers"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="chunkSize"/> is less than 0.</exception>
            <exception cref="T:System.IO.FileNotFoundException">If the file <paramref name="filePath"/> could not be found.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="archiveFormat"/> is not supported by the provider.</para>
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/Extract_Archive-d1e2338.html">Extract Archive (Rackspace Cloud Files Developer Guide - API v1)</seealso>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.ExtractArchive(System.IO.Stream,System.String,net.openstack.Providers.Rackspace.Objects.ArchiveFormat,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Action{System.Int64},System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Upload and automatically extract an archive of files.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> providing the data for the archive.</param>
            <param name="uploadPath">The target path for the extracted files. For details about this value, see the Extract Archive reference link in the documentation for this method.</param>
            <param name="archiveFormat">The archive format.</param>
            <param name="contentType">The content type of the files extracted from the archive. If the value is <c>null</c> or empty, the content type of the extracted files is unspecified.</param>
            <param name="chunkSize">The buffer size to use for copying streaming data.</param>
            <param name="headers">A collection of custom HTTP headers to associate with the object (see <see cref="M:net.openstack.Providers.Rackspace.CloudFilesProvider.GetObjectHeaders(System.String,System.String,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)"/>).</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="progressUpdated">A callback for progress updates. If the value is <c>null</c>, no progress updates are reported.</param>
            <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>An <see cref="T:net.openstack.Providers.Rackspace.Objects.Response.ExtractArchiveResponse"/> object containing the detailed result of the extract archive operation.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="stream"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="uploadPath"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="archiveFormat"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="headers"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="chunkSize"/> is less than 0.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="archiveFormat"/> is not supported by the provider.</para>
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/Extract_Archive-d1e2338.html">Extract Archive (Rackspace Cloud Files Developer Guide - API v1)</seealso>
            <preliminary/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.MoveObject(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.PurgeObjectFromCDN(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.GetAccountHeaders(System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.GetAccountMetaData(System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.UpdateAccountMetadata(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.GetServiceEndpointCloudFiles(net.openstack.Core.Domain.CloudIdentity,System.String,System.Boolean)">
            <summary>
            Gets the public or internal service endpoint to use for Cloud Files requests for the specified identity and region.
            </summary>
            <remarks>
            This method uses <c>object-store</c> for the service type, and <c>cloudFiles</c> for the preferred service name.
            </remarks>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <param name="region">The preferred region for the service. If this value is <c>null</c>, the user's default region will be used.</param>
            <param name="useInternalUrl"><c>true</c> to use the internal service endpoint; otherwise <c>false</c> to use the public service endpoint.</param>
            <returns>The URL for the requested Cloud Files endpoint.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.NoDefaultRegionSetException">If <paramref name="region"/> is <c>null</c> and no default region is available for the identity or provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthenticationException">If no service catalog is available for the user.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthorizationException">If no endpoint is available for the requested service.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.GetServiceEndpointCloudFilesCDN(net.openstack.Core.Domain.CloudIdentity,System.String)">
            <summary>
            Gets the public service endpoint to use for Cloud Files CDN requests for the specified identity and region.
            </summary>
            <remarks>
            This method uses <c>rax:object-cdn</c> for the service type, and <c>cloudFilesCDN</c> for the preferred service name.
            </remarks>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <param name="region">The preferred region for the service. If this value is <c>null</c>, the user's default region will be used.</param>
            <returns>The public URL for the requested Cloud Files CDN endpoint.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.NoDefaultRegionSetException">If <paramref name="region"/> is <c>null</c> and no default region is available for the identity or provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthenticationException">If no service catalog is available for the user.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthorizationException">If no endpoint is available for the requested service.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.CopyStream(System.IO.Stream,System.IO.Stream,System.Int32,System.Action{System.Int64})">
            <summary>
            Copy data from an input stream to an output stream.
            </summary>
            <remarks>
            The argument to the callback method is the total number of bytes written to the output stream thus far.
            Note that <see cref="M:System.IO.Stream.Flush"/> is not called on <paramref name="output"/> prior to reporting a
            progress update, so data may remain in the stream's buffer.
            </remarks>
            <param name="input">The input stream.</param>
            <param name="output">The output stream.</param>
            <param name="bufferSize">The size of the buffer to use for copying data.</param>
            <param name="progressUpdated">A callback for progress updates. If the value is <c>null</c>, no progress updates are reported.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="input"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="output"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="bufferSize"/> is less than or equal to 0.</exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.CreateObjectInSegments(System.String,System.IO.Stream,System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Action{System.Int64},System.Boolean,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Creates an object consisting of multiple segments, each no larger than
            <see cref="P:net.openstack.Providers.Rackspace.CloudFilesProvider.LargeFileBatchThreshold"/>, using data from a <see cref="T:System.IO.Stream"/>.
            If the destination file already exists, the contents are overwritten.
            </summary>
            <remarks>
            In addition to the individual segments containing file data, this method creates
            the manifest required for treating the segments as a single object in future GET
            requests.
            </remarks>
            <param name="container">The container name.</param>
            <param name="stream">A <see cref="T:System.IO.Stream"/> providing the data for the file.</param>
            <param name="objectName">The destination object name. Example <localUri>image_name.jpeg</localUri></param>
            <param name="contentType">The content type of the created object. If the value is <c>null</c> or empty, the content type of the created object is unspecified.</param>
            <param name="chunkSize">The buffer size to use for copying streaming data.</param>
            <param name="headers">A collection of custom HTTP headers to associate with the object (see <see cref="M:net.openstack.Providers.Rackspace.CloudFilesProvider.GetObjectHeaders(System.String,System.String,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)"/>).</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="progressUpdated">A callback for progress updates. If the value is <c>null</c>, no progress updates are reported.</param>
            <param name="useInternalUrl"><c>true</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.InternalURL"/>; otherwise <c>false</c> to use the endpoint's <see cref="P:net.openstack.Core.Domain.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="stream"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="headers"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="objectName"/> is not a valid object name.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="chunkSize"/> is less than 0.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <c>true</c> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/create-update-object.html">Create or Update Object (OpenStack Object Storage API v1 Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/large-object-creation.html">Create Large Objects (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesProvider.VerifyContainerIsCDNEnabled(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Verifies that a particular container is CDN-enabled.
            </summary>
            <remarks>
            Normally, the <see cref="P:net.openstack.Core.Domain.ContainerCDN.CDNEnabled"/> property is used to check if a container is
            CDN-enabled. However, if a container has <em>never</em> been CDN-enabled, the
            <see cref="M:net.openstack.Providers.Rackspace.CloudFilesProvider.GetContainerCDNHeader(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/> method throws a misleading <see cref="T:net.openstack.Core.Exceptions.Response.ItemNotFoundException"/>.
            This method uses <see cref="M:net.openstack.Providers.Rackspace.CloudFilesProvider.GetContainerHeader(System.String,System.String,System.Boolean,net.openstack.Core.Domain.CloudIdentity)"/> to distinguish between these cases, ensuring
            that a <see cref="T:net.openstack.Core.Exceptions.CDNNotEnabledException"/> gets thrown whenever a container exists but is not
            CDN-enabled.
            </remarks>
            <param name="container">The container name.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="container"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="container"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.CDNNotEnabledException">If the container does not have a CDN header, or if the <see cref="P:net.openstack.Core.Domain.ContainerCDN.CDNEnabled"/> property is <c>false</c>.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider.MaxLargeFileBatchThreshold">
            <summary>
            The maximum value of <see cref="P:net.openstack.Providers.Rackspace.CloudFilesProvider.LargeFileBatchThreshold"/> supported by this provider.
            This value is set to the minimum value for which creation of a single object larger than
            the value may result in the server closing the TCP/IP connection and purging the object's
            data.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/large-object-creation.html">Create Large Objects (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesProvider._largeFileBatchThreshold">
            <summary>
            This is the backing field for <see cref="P:net.openstack.Providers.Rackspace.CloudFilesProvider.LargeFileBatchThreshold"/>. The
            default value is <see cref="F:net.openstack.Providers.Rackspace.CloudFilesProvider.MaxLargeFileBatchThreshold"/>.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.CloudFilesProvider.LargeFileBatchThreshold">
            <summary>
            Gets or sets the maximum allowable size of a single object stored in this provider.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="value"/> is less than 0.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="value"/> exceeds <see cref="F:net.openstack.Providers.Rackspace.CloudFilesProvider.MaxLargeFileBatchThreshold"/>.</exception>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.CloudServersProvider">
            <summary>
            <para>The Cloud Servers Provider enables simple access go the Rackspace next generation Cloud Servers powered by OpenStack.
            The next generation service is a fast, reliable, and scalable cloud compute solution without the risk of proprietary lock-in. 
            It provides the core features of the OpenStack Compute API v2 and also deploys certain extensions as permitted by the OpenStack Compute API contract. 
            Some of these extensions are generally available through OpenStack while others implement Rackspace-specific features 
            to meet customers’ expectations and for operational compatibility. The OpenStack Compute API and the Rackspace extensions are 
            known collectively as API v2.</para>
            <para/>
            <para>Documentation URL: http://docs.rackspace.com/servers/api/v2/cs-gettingstarted/content/overview.html</para>
            </summary>
            <see cref="T:net.openstack.Core.Providers.IComputeProvider"/>
            <inheritdoc/>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="T:net.openstack.Core.Providers.IComputeProvider">
            <summary>
            Represents a provider for the OpenStack Compute service.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/">OpenStack Compute API v2 and Extensions Reference</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.ListServers(System.String,System.String,System.String,net.openstack.Core.Domain.ServerState,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Returns a list of basic information for servers in the account.
            </summary>
            <remarks>
            If the <paramref name="changesSince"/> parameter is specified, servers which have been
            deleted since the specified time are returned by this method. Otherwise, deleted servers
            are not included in the list of servers returned by this method.
            </remarks>
            <param name="imageId">The image to filter the returned servers list. If
            the value is <c>null</c>, servers for all images are returned. This is
            specified as an image ID (see <see cref="P:net.openstack.Core.Domain.SimpleServerImage.Id"/>) or a full URL.</param>
            <param name="flavorId">The flavor to filter the returned servers list. If
            the value is <c>null</c>, servers for all flavors are returned. This
            is specified as a flavor ID (see <see cref="P:net.openstack.Core.Domain.Flavor.Id"/>) or a full URL.</param>
            <param name="name">Filters the list to those with a name that matches.
            If the value is <c>null</c>, servers are not filtered by name.</param>
            <param name="status">Filters the list to those with a status that matches.
            If the value is <c>null</c>, servers are not filtered by status. See
            <see cref="T:net.openstack.Core.Domain.ServerState"/> for the allowed values.</param>
            <param name="markerId">The <see cref="P:net.openstack.Core.Domain.ServerBase.Id"/> of the last item in the previous list. Used for <see href="http://docs.openstack.org/api/openstack-compute/2/content/Paginated_Collections-d1e664.html">pagination</see>. If the value is <c>null</c>, the list starts at the beginning.</param>
            <param name="limit">Indicates the maximum number of items to return. Used for <see href="http://docs.openstack.org/api/openstack-compute/2/content/Paginated_Collections-d1e664.html">pagination</see>. If the value is <c>null</c>, a provider-specific default value is used.</param>
            <param name="changesSince">Filters the list to those that have changed since the given date.
            If the value is <c>null</c>, servers are not filtered by timestamp.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:net.openstack.Core.Domain.SimpleServer"/> objects describing the requested servers.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="limit"/> is less than 0.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Servers-d1e2078.html">List Servers (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.ListServersWithDetails(System.String,System.String,System.String,net.openstack.Core.Domain.ServerState,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Returns a list of detailed information servers for servers in the account.
            </summary>
            <remarks>
            If the <paramref name="changesSince"/> parameter is specified, servers which have been
            deleted since the specified time are returned by this method. Otherwise, deleted servers
            are not included in the list of servers returned by this method.
            </remarks>
            <param name="imageId">The image to filter the returned servers list. If
            the value is <c>null</c>, servers for all images are returned. This is
            specified as an image ID (see <see cref="P:net.openstack.Core.Domain.SimpleServerImage.Id"/>) or a full URL.</param>
            <param name="flavorId">The flavor to filter the returned servers list. If
            the value is <c>null</c>, servers for all flavors are returned. This
            is specified as a flavor ID (see <see cref="P:net.openstack.Core.Domain.Flavor.Id"/>) or a full URL.</param>
            <param name="name">Filters the list to those with a name that matches.
            If the value is <c>null</c>, servers are not filtered by name.</param>
            <param name="status">Filters the list to those with a status that matches.
            If the value is <c>null</c>, servers are not filtered by status. See
            <see cref="T:net.openstack.Core.Domain.ServerState"/> for the allowed values.</param>
            <param name="markerId">The <see cref="P:net.openstack.Core.Domain.ServerBase.Id"/> of the last item in the previous list. Used for <see href="http://docs.openstack.org/api/openstack-compute/2/content/Paginated_Collections-d1e664.html">pagination</see>. If the value is <c>null</c>, the list starts at the beginning.</param>
            <param name="limit">Indicates the maximum number of items to return. Used for <see href="http://docs.openstack.org/api/openstack-compute/2/content/Paginated_Collections-d1e664.html">pagination</see>. If the value is <c>null</c>, a provider-specific default value is used.</param>
            <param name="changesSince">Filters the list to those that have changed since the given date.
            If the value is <c>null</c>, servers are not filtered by timestamp.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:net.openstack.Core.Domain.Server"/> objects describing the requested servers.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="limit"/> is less than 0.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Servers-d1e2078.html">List Servers (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.CreateServer(System.String,System.String,System.String,net.openstack.Core.Domain.DiskConfiguration,net.openstack.Core.Domain.Metadata,net.openstack.Core.Domain.Personality[],System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.String,net.openstack.Core.Domain.CloudIdentity)">
             <summary>
             Creates a new server.
             </summary>
             <remarks>
             This operation asynchronously provisions a new server. The progress of this operation depends on
             several factors including location of the requested image, network i/o, host load, and the selected
             flavor. The progress of the request can be checked by calling <see cref="M:net.openstack.Core.Providers.IComputeProvider.GetDetails(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/> and getting
             the value of <see cref="P:net.openstack.Core.Domain.Server.Status"/> and <see cref="P:net.openstack.Core.Domain.Server.Progress"/>.
            
             <note type="caller">
             This is the only time the server's admin password is returned. Make sure to retain the value.
             </note>
            
             <note>
             The <paramref name="diskConfig"/> parameter is ignored if the provider does not support the
             <see href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/ch_extensions.html#diskconfig_attribute"><newTerm>disk configuration extension</newTerm></see>.
             </note>
             </remarks>
             <param name="cloudServerName">Name of the cloud server.</param>
             <param name="imageName">The image to use for the new server instance. This is
             specified as an image ID (see <see cref="P:net.openstack.Core.Domain.SimpleServerImage.Id"/>) or a full URL.</param>
             <param name="flavor">The flavor to use for the new server instance. This
             is specified as a flavor ID (see <see cref="P:net.openstack.Core.Domain.Flavor.Id"/>) or a full URL.</param>
             <param name="diskConfig">The disk configuration. If the value is <c>null</c>, the default configuration for the specified image is used.</param>
             <param name="metadata">The metadata to associate with the server.</param>
             <param name="personality">A collection of <see cref="T:net.openstack.Core.Domain.Personality"/> objects describing the paths and contents of files to inject in the target file system during the creation process. If the value is <c>null</c>, no files are injected.</param>
             <param name="attachToServiceNetwork"><c>true</c> if the private network will be attached to the newly created server; otherwise, <c>false</c>.</param>
             <param name="attachToPublicNetwork"><c>true</c> if the public network will be attached to the newly created server; otherwise, <c>false</c>.</param>
             <param name="networks">A collection of IDs of networks to attach to the server. This is obtained from <see cref="P:net.openstack.Core.Domain.CloudNetwork.Id">CloudNetwork.Id</see>.</param>
             <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <returns>A <see cref="T:net.openstack.Core.Domain.NewServer"/> instance containing the details for the newly created server.</returns>
             <exception cref="T:System.ArgumentNullException">
             <paramref name="cloudServerName"/> is <c>null</c>.
             <para>-or-</para>
             <para><paramref name="imageName"/> is <c>null</c>.</para>
             <para>-or-</para>
             <para><paramref name="flavor"/> is <c>null</c>.</para>
             </exception>
             <exception cref="T:System.ArgumentException">
             <paramref name="cloudServerName"/> is empty.
             <para>-or-</para>
             <para><paramref name="imageName"/> is empty.</para>
             <para>-or-</para>
             <para><paramref name="flavor"/> is empty.</para>
             <para>-or-</para>
             <para><paramref name="metadata"/> contains a value with a null or empty key.</para>
             <para>-or-</para>
             <para><paramref name="networks"/> contains a null or empty value.</para>
             </exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="diskConfig"/>.
             <para>-or-</para>
             <para>If the provider does not support the given <paramref name="identity"/> type.</para>
             <para>-or-</para>
             <para>The specified <paramref name="region"/> is not supported.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
             <para>-or-</para>
             <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/CreateServers.html">Create Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.GetDetails(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Gets the detailed information for a specific server.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.Server"/> object containing the details for the given server.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="serverId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="serverId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Get_Server_Details-d1e2623.html">Get Server Details (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.UpdateServer(System.String,System.String,System.Net.IPAddress,System.Net.IPAddress,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Updates the editable attributes for the specified server.
            </summary>
            <remarks>
            Server names are not guaranteed to be unique.
            </remarks>
            <param name="serverId">The server ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="name">The new name for the server. If the value is <c>null</c>, the server name is not changed.</param>
            <param name="accessIPv4">The new IP v4 address for the server. If the value is <c>null</c>, the server's IP v4 address is not updated.</param>
            <param name="accessIPv6">The new IP v6 address for the server. If the value is <c>null</c>, the server's IP v6 address is not updated.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><c>true</c> if the server was successfully updated; otherwise <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="serverId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If the <see cref="T:System.Net.Sockets.AddressFamily"/> of <paramref name="accessIPv4"/> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork"/></para>
            <para>-or-</para>
            <para>If the <see cref="T:System.Net.Sockets.AddressFamily"/> of <paramref name="accessIPv6"/> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6"/></para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/ServerUpdate.html">Update Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.DeleteServer(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Marks a server for asynchronous deletion.
            </summary>
            <remarks>
            The server deletion operation is completed asynchronously. The <see cref="M:net.openstack.Core.Providers.IComputeProvider.WaitForServerDeleted(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            method may be used to block execution until the server is finally deleted.
            </remarks>
            <param name="serverId">The server ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><c>true</c> if the server was successfully marked for deletion; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="serverId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="serverId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Delete_Server-d1e2883.html">Delete Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.ListAddresses(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Lists all networks and server addresses associated with a specified server.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.ServerAddresses"/> object containing the list of network addresses for the server.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="serverId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="serverId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Addresses-d1e3014.html">List Addresses (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.ListAddressesByNetwork(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Lists addresses associated with a specified server and network.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="network">The network label. This is obtained from <see cref="P:net.openstack.Core.Domain.CloudNetwork.Label">CloudNetwork.Label</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:System.Net.IPAddress"/> containing the network addresses associated with the server on the specified network.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="network"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="network"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Addresses_by_Network-d1e3118.html">List Addresses by Network (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.ChangeAdministratorPassword(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Changes the administrator password for a specified server.
            </summary>
            <remarks>
            The password change operation is performed asynchronously. If the password does not
            meet the server's complexity requirements, the server may end up in an <see cref="P:net.openstack.Core.Domain.ServerState.Error"/>
            state. In this case, the client may call <see cref="M:net.openstack.Core.Providers.IComputeProvider.ChangeAdministratorPassword(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/> again to
            select a new password.
            </remarks>
            <param name="serverId">The server ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="password">The new administrator password.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><c>true</c> if the administrator password change operation was successfully started; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="password"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="password"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Change_Password-d1e3234.html">Change Administrator Password (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.RebootServer(System.String,net.openstack.Core.Domain.RebootType,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Initiates an asynchronous reboot operation on the specified server.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="rebootType">The type of reboot to perform. See <see cref="T:net.openstack.Core.Domain.RebootType"/> for predefined values.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><c>true</c> if the reboot operation was successfully initiated; otherwise <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="rebootType"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="serverId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the specified <paramref name="rebootType"/>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Reboot_Server-d1e3371.html">Reboot Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.RebuildServer(System.String,System.String,System.String,System.String,System.String,System.Net.IPAddress,System.Net.IPAddress,net.openstack.Core.Domain.Metadata,net.openstack.Core.Domain.DiskConfiguration,net.openstack.Core.Domain.Personality,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Initiates an asynchronous rebuild of the specified server.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="serverName">The new name for the server. If the value is <c>null</c>, the server name is not changed.</param>
            <param name="imageName">The image to rebuild the server from. This is specified as an image ID (see <see cref="P:net.openstack.Core.Domain.SimpleServerImage.Id"/>) or a full URL.</param>
            <param name="flavor">The new flavor for server. This is obtained from <see cref="P:net.openstack.Core.Domain.Flavor.Id"/>.</param>
            <param name="adminPassword">The new admin password for the server.</param>
            <param name="accessIPv4">The new IP v4 address for the server. If the value is <c>null</c>, the server's IP v4 address is not updated.</param>
            <param name="accessIPv6">The new IP v6 address for the server. If the value is <c>null</c>, the server's IP v6 address is not updated.</param>
            <param name="metadata">The list of metadata to associate with the server. If the value is <c>null</c>, the metadata associated with the server is not changed during the rebuild operation.</param>
            <param name="diskConfig">The disk configuration. If the value is <c>null</c>, the default configuration for the specified image is used.</param>
            <param name="personality">The path and contents of a file to inject in the target file system during the rebuild operation. If the value is <c>null</c>, no file is injected.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.Server"/> object containing the details for the given server.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="imageName"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="flavor"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="adminPassword"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="imageName"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="flavor"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="adminPassword"/> is empty.</para>
            <para>-or-</para>
            <para>If the <see cref="T:System.Net.Sockets.AddressFamily"/> of <paramref name="accessIPv4"/> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork"/></para>
            <para>-or-</para>
            <para>If the <see cref="T:System.Net.Sockets.AddressFamily"/> of <paramref name="accessIPv6"/> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6"/></para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="diskConfig"/>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Rebuild_Server-d1e3538.html">Rebuild Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.ResizeServer(System.String,System.String,System.String,net.openstack.Core.Domain.DiskConfiguration,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Initiates an asynchronous resize of the specified server. A server resize is performed by
            specifying a new <see cref="T:net.openstack.Core.Domain.Flavor"/> for the server.
            </summary>
            <remarks>
            Following a resize operation, the original server is not immediately removed. After testing
            if the resulting server is operating successfully, a call should be made to <see cref="M:net.openstack.Core.Providers.IComputeProvider.ConfirmServerResize(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            to keep the resized server, or to <see cref="M:net.openstack.Core.Providers.IComputeProvider.RevertServerResize(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/> to revert to the original server.
            If 24 hours pass and neither of these methods is called, the server will be automatically confirmed.
            </remarks>
            <param name="serverId">The server ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="serverName">The new name for the resized server.</param>
            <param name="flavor">The new flavor. This is obtained from <see cref="P:net.openstack.Core.Domain.Flavor.Id">Flavor.Id</see>.</param>
            <param name="diskConfig">The disk configuration. If the value is <c>null</c>, the default configuration for the specified image is used.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><c>true</c> if the resize operation is successfully started; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="serverName"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="flavor"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="serverName"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="flavor"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="diskConfig"/>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Resize_Server-d1e3707.html">Resize Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.ConfirmServerResize(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Confirms a completed asynchronous server resize action.
            </summary>
            <remarks>
            If a server resize operation is not manually confirmed or reverted within 24 hours,
            the operation is automatically confirmed.
            </remarks>
            <param name="serverId">The server ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><c>true</c> if the resize operation was confirmed; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="serverId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="serverId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Confirm_Resized_Server-d1e3868.html">Confirm Resized Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.RevertServerResize(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Cancels and reverts a server resize action.
            </summary>
            <remarks>
            If a server resize operation is not manually confirmed or reverted within 24 hours,
            the operation is automatically confirmed.
            </remarks>
            <param name="serverId">The server ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><c>true</c> if the resize operation was reverted; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="serverId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="serverId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Revert_Resized_Server-d1e4024.html">Revert Resized Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.RescueServer(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
             <summary>
             Places a server in rescue mode.
             </summary>
             <remarks>
             This operation is completed asynchronously. To wait for the server to enter rescue mode,
             call <see cref="O:WaitForServerState"/> with the state <see cref="P:net.openstack.Core.Domain.ServerState.Rescue"/>.
            
             <note>
             The provider may limit the duration of rescue mode, after which the rescue image is destroyed
             and the server attempts to reboot. Rescue mode may be explicitly exited at any time by
             calling <see cref="M:net.openstack.Core.Providers.IComputeProvider.UnRescueServer(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>.
             </note>
             </remarks>
             <param name="serverId">The server ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerBase.Id">ServerBase.Id</see>.</param>
             <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <returns>The root password assigned for use during rescue mode.</returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="serverId"/> is <c>null</c>.</exception>
             <exception cref="T:System.ArgumentException">If <paramref name="serverId"/> is empty.</exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="region"/> is not supported.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
             <para>-or-</para>
             <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/rescue_mode.html">Rescue Server (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.UnRescueServer(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
             <summary>
             Takes a server out of rescue mode.
             </summary>
             <remarks>
             This operation is completed asynchronously. To wait for the server to exit rescue mode,
             call <see cref="O:WaitForServerActive"/>.
            
             <note>
             The provider may limit the duration of rescue mode, after which the rescue image is destroyed
             and the server attempts to reboot. Rescue mode may be explicitly exited at any time by
             calling <see cref="M:net.openstack.Core.Providers.IComputeProvider.UnRescueServer(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>.
             </note>
             </remarks>
             <param name="serverId">The server ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerBase.Id">ServerBase.Id</see>.</param>
             <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <returns><c>true</c> if the server exited rescue mode; otherwise, <c>false</c>.</returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="serverId"/> is <c>null</c>.</exception>
             <exception cref="T:System.ArgumentException">If <paramref name="serverId"/> is empty.</exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="region"/> is not supported.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
             <para>-or-</para>
             <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/exit_rescue_mode.html">Unrescue Server (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.CreateImage(System.String,System.String,net.openstack.Core.Domain.Metadata,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Creates a new snapshot image for a specified server at its current state.
            </summary>
            <remarks>
            The server snapshot process is completed asynchronously. To wait for the image
            to be completed, you may call <see cref="M:net.openstack.Core.Providers.IComputeProvider.WaitForImageActive(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,net.openstack.Core.Domain.CloudIdentity)"/>.
            </remarks>
            <param name="serverId">The server ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="imageName">Name of the new image.</param>
            <param name="metadata">The metadata to associate to the new image.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><c>true</c> if the image creation process was successfully started; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="imageName"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="imageName"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_Image-d1e4655.html">Create Image (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.AttachServerVolume(System.String,System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Attaches a volume to the specified server.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerBase.Id"/>.</param>
            <param name="volumeId">The volume ID. This is obtained from <see cref="P:net.openstack.Core.Domain.Volume.Id"/>.</param>
            <param name="storageDevice">The name of the device, such as <localUri>/dev/xvdb</localUri>. If the value is <c>null</c>, an automatically generated device name will be used.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.ServerVolume"/> object containing the details about the volume.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="volumeId"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="volumeId"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/Attach_Volume_to_Server.html">Attach Volume to Server (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.ListServerVolumes(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Lists the volume attachments for the specified server.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerBase.Id"/>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:net.openstack.Core.Domain.ServerVolume"/> objects describing the volumes attached to the server.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="serverId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="serverId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/List_Volume_Attachments.html">List Volume Attachments (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.GetServerVolumeDetails(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Gets detailed information about the specified server-attached volume.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerBase.Id"/>.</param>
            <param name="volumeId">The volume attachment ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerVolume.Id">ServerVolume.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.ServerVolume"/> object containing details about the volume attachment.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="volumeId"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="volumeId"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/Get_Volume_Attachment_Details.html">Get Volume Attachment Details (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.DetachServerVolume(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Detaches the specified volume from the specified server.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="volumeId">The volume attachment ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerVolume.Id">ServerVolume.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><c>true</c> if the volume was successfully detached; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="volumeId"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="volumeId"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/Delete_Volume_Attachment.html">Delete Volume Attachment (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.ListVirtualInterfaces(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Lists the virtual interfaces for the specified server.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:net.openstack.Core.Domain.VirtualInterface"/> objects describing the virtual interfaces for the server.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="serverId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="serverId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/list_virt_interfaces.html">List Virtual Interfaces (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.CreateVirtualInterface(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Creates a virtual interface for the specified network and attaches the network to the specified server.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="networkId">The network ID. This is obtained from <see cref="P:net.openstack.Core.Domain.CloudNetwork.Id">CloudNetwork.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.VirtualInterface"/> object containing the details of the newly-created virtual network.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="networkId"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="networkId"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/api_create_virtual_interface.html">Create Virtual Interface (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.DeleteVirtualInterface(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Deletes the specified virtual interface from the specified server.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="virtualInterfaceId">The virtual interface ID. This is obtained from <see cref="P:net.openstack.Core.Domain.VirtualInterface.Id">VirtualInterface.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><c>true</c> if the virtual interface was successfully removed from the server; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="virtualInterfaceId"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="virtualInterfaceId"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/delete_virt_interface_api.html">Delete Virtual Interface (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.ListFlavors(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Lists basic information for all available flavors.
            </summary>
            <param name="minDiskInGB">Filters the list of flavors to those with the specified minimum number of gigabytes of disk storage. If the value is <c>null</c>, the results are not filtered by storage space.</param>
            <param name="minRamInMB">Filters the list of flavors to those with the specified minimum amount of RAM in megabytes. If the value is <c>null</c>, the results are not filtered by memory capacity.</param>
            <param name="markerId">The <see cref="P:net.openstack.Core.Domain.Flavor.Id"/> of the last item in the previous list. Used for <see href="http://docs.openstack.org/api/openstack-compute/2/content/Paginated_Collections-d1e664.html">pagination</see>.</param>
            <param name="limit">The maximum number of items to return. Used for <see href="http://docs.openstack.org/api/openstack-compute/2/content/Paginated_Collections-d1e664.html">pagination</see>. If the value is <c>null</c>, a provider-specific default value is used.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:net.openstack.Core.Domain.Flavor"/> objects describing the available flavors.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="minDiskInGB"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="minRamInMB"/> is less than 0.</para>
            <para>-or-</para>
            <para>If <paramref name="limit"/> is less than 0.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.ListFlavorsWithDetails(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Flavors-d1e4188.html">List Flavors (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.ListFlavorsWithDetails(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Lists full details for all available flavors.
            </summary>
            <param name="minDiskInGB">Filters the list of flavors to those with the specified minimum number of gigabytes of disk storage. If the value is <c>null</c>, the results are not filtered by storage space.</param>
            <param name="minRamInMB">Filters the list of flavors to those with the specified minimum amount of RAM in megabytes. If the value is <c>null</c>, the results are not filtered by memory capacity.</param>
            <param name="markerId">The <see cref="P:net.openstack.Core.Domain.Flavor.Id"/> of the last item in the previous list. Used for <see href="http://docs.openstack.org/api/openstack-compute/2/content/Paginated_Collections-d1e664.html">pagination</see>.</param>
            <param name="limit">The maximum number of items to return. Used for <see href="http://docs.openstack.org/api/openstack-compute/2/content/Paginated_Collections-d1e664.html">pagination</see>. If the value is <c>null</c>, a provider-specific default value is used.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:net.openstack.Core.Domain.FlavorDetails"/> objects containing detailed information for the available flavors.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="minDiskInGB"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="minRamInMB"/> is less than 0.</para>
            <para>-or-</para>
            <para>If <paramref name="limit"/> is less than 0.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.ListFlavors(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Flavors-d1e4188.html">List Flavors (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.GetFlavor(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Gets details for the specified flavor.
            </summary>
            <param name="id">The flavor ID. This is obtained from <see cref="P:net.openstack.Core.Domain.Flavor.Id">Flavor.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.FlavorDetails"/> object containing details of the flavor.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="id"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="id"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Get_Flavor_Details-d1e4317.html">Get Flavor Details (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.ListImages(System.String,System.String,net.openstack.Core.Domain.ImageState,System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Int32},net.openstack.Core.Domain.ImageType,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Lists basic information for all available images.
            </summary>
            <remarks>
            If the <paramref name="changesSince"/> parameter is not specified, deleted images are
            not returned by this method. If the <paramref name="changesSince"/> parameter is specified,
            the result includes images which were deleted since the specified time.
            </remarks>
            <param name="server">Filters the list of images by server. This is specified as a server ID (see <see cref="P:net.openstack.Core.Domain.ServerBase.Id"/>) or a full URL. If the value is <c>null</c>, the results are not filtered by ID.</param>
            <param name="imageName">Filters the list of images by image name. If the value is <c>null</c>, the results are not filtered by name.</param>
            <param name="imageStatus">Filters the list of images by status. If the value is <c>null</c>, the results are not filtered by status.</param>
            <param name="changesSince">Filters the list of images to those that have changed since the specified time. If the value is <c>null</c>, the results are not filtered by timestamp.</param>
            <param name="markerId">The <see cref="P:net.openstack.Core.Domain.SimpleServerImage.Id"/> of the last item in the previous list. Used for <see href="http://docs.openstack.org/api/openstack-compute/2/content/Paginated_Collections-d1e664.html">pagination</see>. If the value is <c>null</c>, the results start at the beginning.</param>
            <param name="limit">Indicates the maximum number of items to return. Used for <see href="http://docs.openstack.org/api/openstack-compute/2/content/Paginated_Collections-d1e664.html">pagination</see>. If the value is <c>null</c>, a provider-specific default value is used.</param>
            <param name="imageType">Filters base Rackspace images or any custom server images that you have created. If the value is <c>null</c>, the results are not filtered by image type.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:net.openstack.Core.Domain.SimpleServerImage"/> objects containing basic information for the images.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="limit"/> is less than 0.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.ListImagesWithDetails(System.String,System.String,net.openstack.Core.Domain.ImageState,System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Int32},net.openstack.Core.Domain.ImageType,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Images-d1e4435.html">List Images (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.ListImagesWithDetails(System.String,System.String,net.openstack.Core.Domain.ImageState,System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Int32},net.openstack.Core.Domain.ImageType,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Lists detailed information for all available images.
            </summary>
            <remarks>
            If the <paramref name="changesSince"/> parameter is not specified, deleted images are
            not returned by this method. If the <paramref name="changesSince"/> parameter is specified,
            the result includes images which were deleted since the specified time.
            </remarks>
            <param name="server">Filters the list of images by server. This is specified as a server ID (see <see cref="P:net.openstack.Core.Domain.ServerBase.Id"/>) or a full URL. If the value is <c>null</c>, the results are not filtered by ID.</param>
            <param name="imageName">Filters the list of images by image name. If the value is <c>null</c>, the results are not filtered by name.</param>
            <param name="imageStatus">Filters the list of images by status. If the value is <c>null</c>, the results are not filtered by status.</param>
            <param name="changesSince">Filters the list of images to those that have changed since the specified time. If the value is <c>null</c>, the results are not filtered by timestamp.</param>
            <param name="markerId">The <see cref="P:net.openstack.Core.Domain.SimpleServerImage.Id"/> of the last item in the previous list. Used for <see href="http://docs.openstack.org/api/openstack-compute/2/content/Paginated_Collections-d1e664.html">pagination</see>. If the value is <c>null</c>, the results start at the beginning.</param>
            <param name="limit">Indicates the maximum number of items to return. Used for <see href="http://docs.openstack.org/api/openstack-compute/2/content/Paginated_Collections-d1e664.html">pagination</see>. If the value is <c>null</c>, a provider-specific default value is used.</param>
            <param name="imageType">Filters base Rackspace images or any custom server images that you have created. If the value is <c>null</c>, the results are not filtered by image type.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:net.openstack.Core.Domain.ServerImage"/> objects containing detailed information for the images.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="limit"/> is less than 0.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.ListImages(System.String,System.String,net.openstack.Core.Domain.ImageState,System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Int32},net.openstack.Core.Domain.ImageType,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Images-d1e4435.html">List Images (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.GetImage(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Gets detailed information for the specified image.
            </summary>
            <param name="imageId">The image ID. This is obtained from <see cref="P:net.openstack.Core.Domain.SimpleServerImage.Id">SimpleServerImage.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.ServerImage"/> object containing detailed information about the specified image.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="imageId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="imageId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Get_Image_Details-d1e4848.html">Get Image Details (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.DeleteImage(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Deletes the specified image.
            </summary>
            <param name="imageId">The image ID. This is obtained from <see cref="P:net.openstack.Core.Domain.SimpleServerImage.Id">SimpleServerImage.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><c>true</c> if the image was successfully deleted; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="imageId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="imageId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Delete_Image-d1e4957.html">Delete Image (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.ListServerMetadata(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Gets the metadata associated with the specified server.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.Metadata"/> object containing the metadata associated with the server.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="serverId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="serverId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Metadata-d1e5089.html">List Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.SetServerMetadata(System.String,net.openstack.Core.Domain.Metadata,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Sets the metadata associated with the specified server, replacing any existing metadata.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="metadata">The metadata to associate with the server.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><c>true</c> if the metadata for the server was successfully updated; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="metadata"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="metadata"/> contains any values with null or empty keys.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_or_Replace_Metadata-d1e5358.html">Set Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.UpdateServerMetadata(System.String,net.openstack.Core.Domain.Metadata,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Updates the metadata for the specified server.
            </summary>
            <remarks>
            For each item in <paramref name="metadata"/>, if the key exists, the value is updated; otherwise, the item is added.
            </remarks>
            <param name="serverId">The server ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="metadata">The server metadata to update.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><c>true</c> if the metadata for the server was successfully updated; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="metadata"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="metadata"/> contains any values with null or empty keys.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Update_Metadata-d1e5208.html">Update Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.GetServerMetadataItem(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Gets the specified metadata item.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="key">The metadata key.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>The metadata value for the associated with the server for the specified key.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="key"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="key"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Get_Metadata_Item-d1e5507.html">Get Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.SetServerMetadataItem(System.String,System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Sets the value for the specified metadata item. If the key already exists, it is updated; otherwise, a new metadata item is added.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="key">The metadata key.</param>
            <param name="value">The new value for the metadata item.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><c>true</c> if the metadata for the server was successfully updated; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="key"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="value"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="key"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_or_Update_a_Metadata_Item-d1e5633.html">Set Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.DeleteServerMetadataItem(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Deletes the specified metadata item from the server.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="key">The metadata key.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><c>true</c> if the metadata item was removed; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="key"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="key"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Delete_Metadata_Item-d1e5790.html">Delete Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.ListImageMetadata(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Gets the metadata associated with the specified image.
            </summary>
            <param name="imageId">The image ID. This is obtained from <see cref="P:net.openstack.Core.Domain.SimpleServerImage.Id">SimpleServerImage.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.Metadata"/> object containing the metadata associated with the image.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="imageId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="imageId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Metadata-d1e5089.html">List Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.SetImageMetadata(System.String,net.openstack.Core.Domain.Metadata,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Sets the metadata associated with the specified image, replacing any existing metadata.
            </summary>
            <param name="imageId">The image ID. This is obtained from <see cref="P:net.openstack.Core.Domain.SimpleServerImage.Id">SimpleServerImage.Id</see>.</param>
            <param name="metadata">The metadata to associate with the image.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><c>true</c> if the metadata for the image was successfully updated; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="imageId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="metadata"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="imageId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="metadata"/> contains any values with null or empty keys.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_or_Replace_Metadata-d1e5358.html">Set Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.UpdateImageMetadata(System.String,net.openstack.Core.Domain.Metadata,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Updates the metadata for the specified image.
            </summary>
            <remarks>
            For each item in <paramref name="metadata"/>, if the key exists, the value is updated; otherwise, the item is added.
            </remarks>
            <param name="imageId">The image ID. This is obtained from <see cref="P:net.openstack.Core.Domain.SimpleServerImage.Id">SimpleServerImage.Id</see>.</param>
            <param name="metadata">The image metadata to update.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><c>true</c> if the metadata for the image was successfully updated; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="imageId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="metadata"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="imageId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="metadata"/> contains any values with null or empty keys.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Update_Metadata-d1e5208.html">Update Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.GetImageMetadataItem(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Gets the specified metadata item.
            </summary>
            <param name="imageId">The image ID. This is obtained from <see cref="P:net.openstack.Core.Domain.SimpleServerImage.Id">SimpleServerImage.Id</see>.</param>
            <param name="key">The metadata key.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>The metadata value for the associated with the image for the specified key.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="imageId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="key"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="imageId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="key"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Get_Metadata_Item-d1e5507.html">Get Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.SetImageMetadataItem(System.String,System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Sets the value for the specified metadata item. If the key already exists, it is updated; otherwise, a new metadata item is added.
            </summary>
            <param name="imageId">The image ID. This is obtained from <see cref="P:net.openstack.Core.Domain.SimpleServerImage.Id">SimpleServerImage.Id</see>.</param>
            <param name="key">The metadata key.</param>
            <param name="value">The new value for the metadata item.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><c>true</c> if the metadata for the image was successfully updated; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="imageId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="key"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="value"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="imageId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="key"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_or_Update_a_Metadata_Item-d1e5633.html">Set Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.DeleteImageMetadataItem(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Deletes the specified metadata item from the image.
            </summary>
            <param name="imageId">The image ID. This is obtained from <see cref="P:net.openstack.Core.Domain.SimpleServerImage.Id">SimpleServerImage.Id</see>.</param>
            <param name="key">The metadata key.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><c>true</c> if the metadata item was removed; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="imageId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="key"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="imageId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="key"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Delete_Metadata_Item-d1e5790.html">Delete Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.WaitForServerState(System.String,net.openstack.Core.Domain.ServerState,net.openstack.Core.Domain.ServerState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Waits for the server to enter a specified state.
            </summary>
            <remarks>
            <note type="caller">
            This is a blocking operation and will not return until the server enters either the expected state, an error state, or the retry count is exceeded.
            </note>
            </remarks>
            <param name="serverId">The server ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="expectedState">The expected state.</param>
            <param name="errorStates">The error state(s) in which to throw an exception if the server enters.</param>
            <param name="refreshCount">Number of times to poll the server's status.</param>
            <param name="refreshDelay">The time to wait between polling requests for the server status. If this value is <c>null</c>, the default is 2.4 seconds.</param>
            <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:net.openstack.Core.Domain.Server.Progress"/> value increases. If this value is <c>null</c>, progress updates are not reported.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.Server"/> object containing the server details, including the final <see cref="P:net.openstack.Core.Domain.Server.Status"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="expectedState"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="errorStates"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ServerEnteredErrorStateException">If the method returned due to the server entering one of the <paramref name="errorStates"/>.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.WaitForServerState(System.String,net.openstack.Core.Domain.ServerState[],net.openstack.Core.Domain.ServerState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Waits for the server to enter any one of a set of specified states.
            </summary>
            <remarks>
            <note type="caller">
            This is a blocking operation and will not return until the server enters either an expected state, an error state, or the retry count is exceeded.
            </note>
            </remarks>
            <param name="serverId">The server ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="expectedStates">The expected state(s).</param>
            <param name="errorStates">The error state(s) in which to throw an exception if the server enters.</param>
            <param name="refreshCount">Number of times to poll the server's status.</param>
            <param name="refreshDelay">The time to wait between polling requests for the server status. If this value is <c>null</c>, the default is 2.4 seconds.</param>
            <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:net.openstack.Core.Domain.Server.Progress"/> value increases. If this value is <c>null</c>, progress updates are not reported.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.Server"/> object containing the server details, including the final <see cref="P:net.openstack.Core.Domain.Server.Status"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="expectedStates"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="errorStates"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="expectedStates"/> is empty.</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ServerEnteredErrorStateException">If the method returned due to the server entering one of the <paramref name="errorStates"/>.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.WaitForServerActive(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Waits for the server to enter the <see cref="P:net.openstack.Core.Domain.ServerState.Active"/> state.
            </summary>
            <remarks>
            <note type="caller">
            This is a blocking operation and will not return until the server enters the <see cref="P:net.openstack.Core.Domain.ServerState.Active"/> state, an error state, or the retry count is exceeded.
            </note>
            </remarks>
            <param name="serverId">The server ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="refreshCount">Number of times to poll the server's status.</param>
            <param name="refreshDelay">The time to wait between polling requests for the server status. If this value is <c>null</c>, the default is 2.4 seconds.</param>
            <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:net.openstack.Core.Domain.Server.Progress"/> value increases. If this value is <c>null</c>, progress updates are not reported.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.Server"/> object containing the server details, including the final <see cref="P:net.openstack.Core.Domain.Server.Status"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.WaitForServerDeleted(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Waits for the server to enter the <see cref="P:net.openstack.Core.Domain.ServerState.Deleted"/> state or to be removed.
            </summary>
            <remarks>
            <note type="caller">
            This is a blocking operation and will not return until the server enters the <see cref="P:net.openstack.Core.Domain.ServerState.Deleted"/> state, an error state, or the retry count is exceeded.
            </note>
            </remarks>
            <param name="serverId">The server ID. This is obtained from <see cref="P:net.openstack.Core.Domain.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="refreshCount">Number of times to poll the server's status.</param>
            <param name="refreshDelay">The time to wait between polling requests for the server status. If this value is <c>null</c>, the default is 2.4 seconds.</param>
            <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:net.openstack.Core.Domain.Server.Progress"/> value increases. If this value is <c>null</c>, progress updates are not reported.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.WaitForImageState(System.String,net.openstack.Core.Domain.ImageState,net.openstack.Core.Domain.ImageState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Waits for the image to enter a specified state.
            </summary>
            <remarks>
            <note type="caller">
            This is a blocking operation and will not return until the image enters either the expected state, an error state, or the retry count is exceeded.
            </note>
            </remarks>
            <param name="imageId">The image ID. This is obtained from <see cref="P:net.openstack.Core.Domain.SimpleServerImage.Id">SimpleServerImage.Id</see>.</param>
            <param name="expectedState">The expected state.</param>
            <param name="errorStates">The error state(s) in which to throw an exception if the image enters.</param>
            <param name="refreshCount">Number of times to poll the image's status.</param>
            <param name="refreshDelay">The time to wait between polling requests for the image status. If this value is <c>null</c>, the default is 2.4 seconds.</param>
            <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:net.openstack.Core.Domain.ServerImage.Progress"/> value increases. If this value is <c>null</c>, progress updates are not reported.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.ServerImage"/> object containing the image details, including the final <see cref="P:net.openstack.Core.Domain.ServerImage.Status"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="imageId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="expectedState"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="errorStates"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="imageId"/> is empty.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ImageEnteredErrorStateException">If the method returned due to the image entering one of the <paramref name="errorStates"/>.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.WaitForImageState(System.String,net.openstack.Core.Domain.ImageState[],net.openstack.Core.Domain.ImageState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Waits for the image to enter any one of a set of specified states.
            </summary>
            <remarks>
            <note type="caller">
            This is a blocking operation and will not return until the image enters either an expected state, an error state, or the retry count is exceeded.
            </note>
            </remarks>
            <param name="imageId">The image ID. This is obtained from <see cref="P:net.openstack.Core.Domain.SimpleServerImage.Id">SimpleServerImage.Id</see>.</param>
            <param name="expectedStates">The expected state(s).</param>
            <param name="errorStates">The error state(s) in which to throw an exception if the image enters.</param>
            <param name="refreshCount">Number of times to poll the image's status.</param>
            <param name="refreshDelay">The time to wait between polling requests for the image status. If this value is <c>null</c>, the default is 2.4 seconds.</param>
            <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:net.openstack.Core.Domain.ServerImage.Progress"/> value increases. If this value is <c>null</c>, progress updates are not reported.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.ServerImage"/> object containing the image details, including the final <see cref="P:net.openstack.Core.Domain.ServerImage.Status"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="imageId"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="expectedStates"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="errorStates"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="imageId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="expectedStates"/> is empty.</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ImageEnteredErrorStateException">If the method returned due to the image entering one of the <paramref name="errorStates"/>.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.WaitForImageActive(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Waits for the image to enter the <see cref="P:net.openstack.Core.Domain.ImageState.Active"/> state.
            </summary>
            <remarks>
            <note type="caller">
            This is a blocking operation and will not return until the image enters either the
            <see cref="P:net.openstack.Core.Domain.ImageState.Active"/> state, an error state, or the retry count is exceeded.
            </note>
            </remarks>
            <param name="imageId">The image ID. This is obtained from <see cref="P:net.openstack.Core.Domain.SimpleServerImage.Id">SimpleServerImage.Id</see>.</param>
            <param name="refreshCount">Number of times to poll the image's status.</param>
            <param name="refreshDelay">The time to wait between polling requests for the image status. If this value is <c>null</c>, the default is 2.4 seconds.</param>
            <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:net.openstack.Core.Domain.ServerImage.Progress"/> value increases. If this value is <c>null</c>, progress updates are not reported.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.ServerImage"/> object containing the image details, including the final <see cref="P:net.openstack.Core.Domain.ServerImage.Status"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="imageId"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="imageId"/> is empty.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Core.Providers.IComputeProvider.WaitForImageDeleted(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Waits for the image to enter the <see cref="P:net.openstack.Core.Domain.ImageState.Deleted"/> state or to be removed.
            </summary>
            <remarks>
            <note type="warning">
            This is a blocking operation and will not return until the image enters either the
            <see cref="P:net.openstack.Core.Domain.ImageState.Deleted"/> state, an error state, is removed, or the retry count is exceeded.
            </note>
            </remarks>
            <param name="imageId">The image ID. This is obtained from <see cref="P:net.openstack.Core.Domain.SimpleServerImage.Id">SimpleServerImage.Id</see>.</param>
            <param name="refreshCount">Number of times to poll the image's status.</param>
            <param name="refreshDelay">The time to wait between polling requests for the image status. If this value is <c>null</c>, the default is 2.4 seconds.</param>
            <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:net.openstack.Core.Domain.ServerImage.Progress"/> value increases. If this value is <c>null</c>, progress updates are not reported.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="imageId"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="imageId"/> is empty.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <c>null</c> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudServersProvider"/> class with
            no default identity or region, and the default identity provider and REST
            service implementation.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.#ctor(net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudServersProvider"/> class with
            the specified default identity, no default region, and the default identity
            provider and REST service implementation.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <c>null</c>, no default identity is available so all calls must specify an explicit identity.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.#ctor(JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudServersProvider"/> class with
            no default identity or region, the default identity provider, and the specified
            REST service implementation.
            </summary>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <c>null</c>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.#ctor(net.openstack.Core.Providers.IIdentityProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudServersProvider"/> class with
            no default identity or region, the specified identity provider, and the default
            REST service implementation.
            </summary>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <c>null</c>, a new instance of <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> is created with no default identity.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.#ctor(net.openstack.Core.Domain.CloudIdentity,net.openstack.Core.Providers.IIdentityProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudServersProvider"/> class with
            the specified default identity and identity provider, no default region, and
            the default REST service implementation.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <c>null</c>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <c>null</c>, a new instance of <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> is created using <paramref name="identity"/> as the default identity.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.#ctor(net.openstack.Core.Domain.CloudIdentity,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudServersProvider"/> class with
            the specified default identity and REST service implementation, no default region,
            and the default identity provider.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <c>null</c>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <c>null</c>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.#ctor(net.openstack.Core.Domain.CloudIdentity,net.openstack.Core.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudServersProvider"/> class with
            the specified default identity, no default region, and the specified identity
            provider and REST service implementation.
            </summary>
            <param name="identity">An instance of a <see cref="T:net.openstack.Core.Domain.CloudIdentity"/> object. <remarks>If not provided, the user will be required to pass a <see cref="T:net.openstack.Core.Domain.CloudIdentity"/> object to each method individually.</remarks></param>
            <param name="identityProvider">An instance of an <see cref="T:net.openstack.Core.Providers.IIdentityProvider"/> to override the default <see cref="T:net.openstack.Core.Domain.CloudIdentity"/></param>
            <param name="restService">An instance of an <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to override the default <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/></param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.#ctor(net.openstack.Core.Domain.CloudIdentity,System.String,net.openstack.Core.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudServersProvider"/> class with
            the specified default identity, default region, identity provider, and REST
            service implementation.
            </summary>
            <param name="identity">An instance of a <see cref="T:net.openstack.Core.Domain.CloudIdentity"/> object. <remarks>If not provided, the user will be required to pass a <see cref="T:net.openstack.Core.Domain.CloudIdentity"/> object to each method individually.</remarks></param>
            <param name="defaultRegion">The default region to use for calls that do not explicitly specify a region. If this value is <c>null</c>, the default region for the user will be used; otherwise if the service uses region-specific endpoints all calls must specify an explicit region.</param>
            <param name="identityProvider">An instance of an <see cref="T:net.openstack.Core.Providers.IIdentityProvider"/> to override the default <see cref="T:net.openstack.Core.Domain.CloudIdentity"/></param>
            <param name="restService">An instance of an <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to override the default <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/></param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.ListServers(System.String,System.String,System.String,net.openstack.Core.Domain.ServerState,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.ListServersWithDetails(System.String,System.String,System.String,net.openstack.Core.Domain.ServerState,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.CreateServer(System.String,System.String,System.String,net.openstack.Core.Domain.DiskConfiguration,net.openstack.Core.Domain.Metadata,net.openstack.Core.Domain.Personality[],System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.GetDetails(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.UpdateServer(System.String,System.String,System.Net.IPAddress,System.Net.IPAddress,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.DeleteServer(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.WaitForServerState(System.String,net.openstack.Core.Domain.ServerState,net.openstack.Core.Domain.ServerState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.WaitForServerState(System.String,net.openstack.Core.Domain.ServerState[],net.openstack.Core.Domain.ServerState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.WaitForServerActive(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.WaitForServerDeleted(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.ListAddresses(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.ListAddressesByNetwork(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.ChangeAdministratorPassword(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.RebootServer(System.String,net.openstack.Core.Domain.RebootType,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.RebuildServer(System.String,System.String,System.String,System.String,System.String,System.Net.IPAddress,System.Net.IPAddress,net.openstack.Core.Domain.Metadata,net.openstack.Core.Domain.DiskConfiguration,net.openstack.Core.Domain.Personality,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.ResizeServer(System.String,System.String,System.String,net.openstack.Core.Domain.DiskConfiguration,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.ConfirmServerResize(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.RevertServerResize(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.RescueServer(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.UnRescueServer(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.CreateImage(System.String,System.String,net.openstack.Core.Domain.Metadata,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.AttachServerVolume(System.String,System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.ListServerVolumes(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.GetServerVolumeDetails(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.DetachServerVolume(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.ListVirtualInterfaces(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.CreateVirtualInterface(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.DeleteVirtualInterface(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.ListFlavors(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.ListFlavorsWithDetails(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.GetFlavor(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.ListImages(System.String,System.String,net.openstack.Core.Domain.ImageState,System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Int32},net.openstack.Core.Domain.ImageType,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.ListImagesWithDetails(System.String,System.String,net.openstack.Core.Domain.ImageState,System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Int32},net.openstack.Core.Domain.ImageType,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.GetImage(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.DeleteImage(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.WaitForImageState(System.String,net.openstack.Core.Domain.ImageState[],net.openstack.Core.Domain.ImageState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.WaitForImageState(System.String,net.openstack.Core.Domain.ImageState,net.openstack.Core.Domain.ImageState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.WaitForImageActive(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.WaitForImageDeleted(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.ListServerMetadata(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.SetServerMetadata(System.String,net.openstack.Core.Domain.Metadata,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.UpdateServerMetadata(System.String,net.openstack.Core.Domain.Metadata,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.GetServerMetadataItem(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.SetServerMetadataItem(System.String,System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.DeleteServerMetadataItem(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.ListImageMetadata(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.SetImageMetadata(System.String,net.openstack.Core.Domain.Metadata,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.UpdateImageMetadata(System.String,net.openstack.Core.Domain.Metadata,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.GetImageMetadataItem(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.SetImageMetadataItem(System.String,System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.DeleteImageMetadataItem(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudServersProvider.GetServiceEndpoint(net.openstack.Core.Domain.CloudIdentity,System.String)">
            <summary>
            Gets the public service endpoint to use for Cloud Servers requests for the specified identity and region.
            </summary>
            <remarks>
            This method uses <c>compute</c> for the service type, and <c>cloudServersOpenStack</c> for the preferred service name.
            </remarks>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <param name="region">The preferred region for the service. If this value is <c>null</c>, the user's default region will be used.</param>
            <returns>The public URL for the requested Cloud Servers endpoint.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.NoDefaultRegionSetException">If <paramref name="region"/> is <c>null</c> and no default region is available for the identity or provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthenticationException">If no service catalog is available for the user.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthorizationException">If no endpoint is available for the requested service.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="T:net.openstack.Core.Exceptions.InvalidCloudIdentityException">
            <summary>
            The exception thrown when the <see cref="T:net.openstack.Core.Domain.CloudIdentity"/> instance passed
            to a provider method is not supported by that provider.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Exceptions.InvalidCloudIdentityException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.InvalidCloudIdentityException"/> class
            with the specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:net.openstack.Core.Exceptions.InvalidCloudIdentityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.InvalidCloudIdentityException"/> class with
            serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="info"/> is <c>null</c>.</exception>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudFilesMetadataProcessor._default">
            <summary>
            A default instance of <see cref="T:net.openstack.Providers.Rackspace.CloudFilesMetadataProcessor"/>.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudFilesMetadataProcessor.ProcessMetadata(System.Collections.Generic.IList{JSIStudios.SimpleRESTServices.Client.HttpHeader})">
             <summary>
             Extracts metadata information from a collection of HTTP headers.
             </summary>
             <remarks>
             The returned collection has two keys: <see cref="F:net.openstack.Providers.Rackspace.CloudFilesProvider.ProcessedHeadersHeaderKey"/>
             and <see cref="F:net.openstack.Providers.Rackspace.CloudFilesProvider.ProcessedHeadersMetadataKey"/>.
            
             <para>The value for
             <see cref="F:net.openstack.Providers.Rackspace.CloudFilesProvider.ProcessedHeadersMetadataKey"/> contains the processed Cloud Files
             metadata included in HTTP headers such as <strong>X-Account-Meta-*</strong>,
             <strong>X-Container-Meta-*</strong>, and <strong>X-Object-Meta-*</strong>. The metadata prefix
             has been removed from the keys stored in this value.</para>
            
             <para>The value for <see cref="F:net.openstack.Providers.Rackspace.CloudFilesProvider.ProcessedHeadersHeaderKey"/> contains the
             HTTP headers which were not in the form of a known Cloud Files metadata prefix.</para>
             </remarks>
             <inheritdoc/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.CloudFilesMetadataProcessor.Default">
            <summary>
            Gets a default instance of <see cref="T:net.openstack.Providers.Rackspace.CloudFilesMetadataProcessor"/>.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.AttachServerVolumeRequest">
            <summary>
            This models the JSON request used for the Attach Volume to Server request.
            </summary>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/Attach_Volume_to_Server.html">Attach Volume to Server (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.AttachServerVolumeRequest.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.AttachServerVolumeRequest"/> class
            with the given device name and volume ID.
            </summary>
            <param name="device">
            The name of the device, such as <localUri>/dev/xvdb</localUri>. If the value
            is <c>null</c>, an automatically generated device name will be used.
            </param>
            <param name="volumeId">The volume ID. This is obtained from <see cref="P:net.openstack.Core.Domain.Volume.Id"/>.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="volumeId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="volumeId"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.AttachServerVolumeRequest.ServerVolumeData">
            <summary>
            Gets additional information about the volume to attach.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.AttachServerVolumeRequest.AttachServerVolumeData">
            <summary>
            This models the JSON body containing the details of the Attach Volume to Server request.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.AttachServerVolumeRequest.AttachServerVolumeData.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.AttachServerVolumeRequest.AttachServerVolumeData"/> class
            with the given device name and volume ID.
            </summary>
            <param name="device">
            The name of the device, such as <localUri>/dev/xvdb</localUri>. If the value
            is <c>null</c>, an automatically generated device name will be used.
            </param>
            <param name="volumeId">The volume ID. This is obtained from <see cref="P:net.openstack.Core.Domain.Volume.Id"/>.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="volumeId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="volumeId"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.AttachServerVolumeRequest.AttachServerVolumeData.Device">
            <summary>
            Gets the name of the device, such as <localUri>/dev/xvdb</localUri>.
            If the value is <c>null</c>, the server automatically assigns a device
            name.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.AttachServerVolumeRequest.AttachServerVolumeData.VolumeId">
            <summary>
            Gets the ID of the volume to attach to the server instance.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudNetworkRequest">
            <summary>
            This models the JSON request used for the Create Network request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-network/2.0/content/Create_Network.html">Create Network (OpenStack Networking API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudNetworkRequest.#ctor(net.openstack.Providers.Rackspace.Objects.Request.CreateCloudNetworksDetails)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudNetworkRequest"/>
            class with the specified details.
            </summary>
            <param name="details">The details of the request.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="details"/> is <c>null</c>.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudNetworkRequest.Details">
            <summary>
            Gets additional details about the Create Network request.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudNetworksDetails">
            <summary>
            This models the JSON body containing details for the Create Network request.
            </summary>
            <seealso cref="T:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudNetworkRequest"/>
            <seealso href="http://docs.openstack.org/api/openstack-network/2.0/content/Create_Network.html">Create Network (OpenStack Networking API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudNetworksDetails.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudNetworksDetails"/>
            class with the specified CIDR and name.
            </summary>
            <param name="cidr">The IP block from which to allocate the network. For example, <c>172.16.0.0/24</c> or <c>2001:DB8::/64</c>.</param>
            <param name="label">The name of the new network. For example, <c>my_new_network</c>.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="cidr"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="label"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="cidr"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="label"/> is empty.</para>
            </exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudNetworksDetails.Cidr">
            <summary>
            Gets the CIDR for the network.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudNetworksDetails.Label">
            <summary>
            Gets the name of the network.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.CloudNetworkResponse">
            <summary>
            This models the JSON response used for the Create Network and Show Network requests.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-network/2.0/content/Create_Network.html">Create Network (OpenStack Networking API v2.0 Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-network/2.0/content/List_Networks_Detail.html">Show Network (OpenStack Networking API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.CloudNetworkResponse.Network">
            <summary>
            Gets additional information about the network.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.ListCloudNetworksResponse">
            <summary>
            This models the JSON response used for the List Networks request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-network/2.0/content/List_Networks.html">List Networks (OpenStack Networking API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.ListCloudNetworksResponse.Networks">
            <summary>
            Gets a collection of networks.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.ServerVolumeListResponse">
            <summary>
            This models the JSON response used for the List Volume Attachments request.
            </summary>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/List_Volume_Attachments.html">List Volume Attachments (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.ServerVolumeListResponse.ServerVolumes">
            <summary>
            Gets a collection of information about the volume attachments.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.ServerVolumeResponse">
            <summary>
            This models the JSON response used for the Attach Volume to Server and Get Volume Attachment Details requests.
            </summary>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/Attach_Volume_to_Server.html">Attach Volume to Server (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/Get_Volume_Attachment_Details.html">Get Volume Attachment Details (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.ServerVolumeResponse.ServerVolume">
            <summary>
            Gets information about the volume attachment.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.AddRoleRequest">
            <summary>
            This models the JSON request used for the Add Role request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_addRole_v2.0_OS-KSADM_roles_Role_Operations_OS-KSADM.html">Add Role (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.AddRoleRequest.#ctor(net.openstack.Core.Domain.Role)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.AddRoleRequest"/> class for the
            specified <paramref name="role"/>.
            </summary>
            <param name="role">The role.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="role"/> is <c>null</c>.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.AddRoleRequest.Role">
            <summary>
            Gets additional information about the role to add.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.AddUserRequest">
            <summary>
            This models the JSON request used for the Add User request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_addUser_v2.0_users_.html">Add User (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.AddUserRequest.#ctor(net.openstack.Core.Domain.NewUser)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.AddUserRequest"/> class for the
            specified <paramref name="user"/>.
            </summary>
            <param name="user">The user.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="user"/> is <c>null</c>.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.AddUserRequest.User">
            <summary>
            Gets additional information about the user to add.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.ConfirmServerResizeRequest">
            <summary>
            This models the JSON request used for the Confirm Resized Server request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Confirm_Resized_Server-d1e3868.html">Confirm Resized Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudBlockStorageSnapshotDetails">
            <summary>
            This models the JSON body containing details for the Create Snapshot request.
            </summary>
            <seealso cref="T:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudBlockStorageSnapshotRequest"/>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Create_Snapshot.html">Create Snapshot (OpenStack Block Storage Service API Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudBlockStorageSnapshotDetails.#ctor(System.String,System.Boolean,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudBlockStorageSnapshotDetails"/>
            class with the specified volume ID, name, description, and value indicating whether or
            not to create the snapshot even if the volume is attached to an active server.
            </summary>
            <param name="volumeId">The ID of the volume to snapshot. The value should be obtained from <see cref="P:net.openstack.Core.Domain.Volume.Id">Volume.Id</see>.</param>
            <param name="force"><c>true</c> to create the snapshot even if the volume is attached to an active server; otherwise, <c>false</c>.</param>
            <param name="displayName">Name of the snapshot.</param>
            <param name="displayDescription">Description of snapshot.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="volumeId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="volumeId"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudBlockStorageSnapshotDetails.VolumeId">
            <summary>
            Gets the ID of the volume to snapshot.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudBlockStorageSnapshotDetails.Force">
            <summary>
            Gets a value indicating whether to create the snapshot even while the volume is attached to an active server.
            </summary>
            <value><c>true</c> to create the snapshot even if the server is running; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudBlockStorageSnapshotDetails.DisplayName">
            <summary>
            Gets the display name of the snapshot.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudBlockStorageSnapshotDetails.DisplayDescription">
            <summary>
            Gets the display description of the snapshot.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudBlockStorageSnapshotRequest">
            <summary>
            This models the JSON request used for the Create Snapshot request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Create_Snapshot.html">Create Snapshot (OpenStack Block Storage Service API Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudBlockStorageSnapshotRequest.#ctor(net.openstack.Providers.Rackspace.Objects.Request.CreateCloudBlockStorageSnapshotDetails)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudBlockStorageSnapshotRequest"/>
            class with the specified details.
            </summary>
            <param name="details">The details of the request.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="details"/> is <c>null</c>.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudBlockStorageSnapshotRequest.CreateCloudBlockStorageSnapshotDetails">
            <summary>
            Gets additional details about the Create Snapshot request.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudBlockStorageVolumeDetails">
            <summary>
            This models the JSON body containing details for the Create Volume request.
            </summary>
            <seealso cref="T:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudBlockStorageVolumeRequest"/>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Create_Volume.html">Create Volume (OpenStack Block Storage Service API Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudBlockStorageVolumeDetails.#ctor(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudBlockStorageVolumeDetails"/> class.
            </summary>
            <param name="size">The size of the volume in GB.</param>
            <param name="displayDescription">A description of the volume.</param>
            <param name="displayName">The name of the volume.</param>
            <param name="snapshotId">The snapshot from which to create a volume. The value should be <c>null</c> or obtained from <see cref="P:net.openstack.Core.Domain.Snapshot.Id">Snapshot.Id</see>.</param>
            <param name="volumeType">The type of volume to create. If not defined, then the default is used. The value should be <c>null</c> or obtained from <see cref="P:net.openstack.Core.Domain.VolumeType.Id">VolumeType.Id</see>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="size"/> is less than or equal to zero.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudBlockStorageVolumeDetails.Size">
            <summary>
            Gets the size of the volume in GB.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudBlockStorageVolumeDetails.DisplayDescription">
            <summary>
            Gets the display description of the volume.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudBlockStorageVolumeDetails.DisplayName">
            <summary>
            Gets the display name of the volume.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudBlockStorageVolumeDetails.SnapshotId">
            <summary>
            Gets the ID of the snapshot to create the volume from, if any.
            </summary>
            <value>The ID of the snapshot to create the volume from, or <c>null</c> if the volume is not created from a snapshot.</value>
            <seealso cref="P:net.openstack.Core.Domain.Snapshot.Id"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudBlockStorageVolumeDetails.VolumeType">
            <summary>
            Gets the ID of the type of volume to create.
            </summary>
            <seealso cref="P:net.openstack.Core.Domain.VolumeType.Id"/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudBlockStorageVolumeRequest">
            <summary>
            This models the JSON request used for the Create Volume request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Create_Volume.html">Create Volume (OpenStack Block Storage Service API Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudBlockStorageVolumeRequest.#ctor(net.openstack.Providers.Rackspace.Objects.Request.CreateCloudBlockStorageVolumeDetails)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudBlockStorageVolumeRequest"/>
            class with the specified details.
            </summary>
            <param name="details">The details of the request.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="details"/> is <c>null</c>.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.CreateCloudBlockStorageVolumeRequest.CreateCloudBlockStorageVolumeDetails">
            <summary>
            Gets additional details about the Create Volume request.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.CreateServerImageDetails">
            <summary>
            This models the JSON body containing details for the Create Image request.
            </summary>
            <seealso cref="T:net.openstack.Providers.Rackspace.Objects.Request.CreateServerImageRequest"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_Image-d1e4655.html">Create Image (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.CreateServerImageDetails.#ctor(System.String,net.openstack.Core.Domain.Metadata)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.CreateServerImageDetails"/> class
            with the specified name and metadata.
            </summary>
            <param name="imageName">Name of the new image.</param>
            <param name="metadata">The metadata to associate to the new image.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="imageName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="imageName"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.CreateServerImageDetails.ImageName">
            <summary>
            Gets the name of the image to create.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.CreateServerImageDetails.Metadata">
            <summary>
            Gets the metadata to associate with the image.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.CreateServerImageRequest">
            <summary>
            This models the JSON request used for the Create Image request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_Image-d1e4655.html">Create Image (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.CreateServerImageRequest.#ctor(net.openstack.Providers.Rackspace.Objects.Request.CreateServerImageDetails)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.CreateServerImageRequest"/>
            class with the specified details.
            </summary>
            <param name="details">The details of the request.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="details"/> is <c>null</c>.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.CreateServerImageRequest.Details">
            <summary>
            Gets additional details about the Create Image request.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.ChangeServerAdminPasswordRequest">
            <summary>
            This models the JSON request used for the Change Administrator Password request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Change_Password-d1e3234.html">Change Administrator Password (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.ChangeServerAdminPasswordRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.ChangeServerAdminPasswordRequest"/>
            class with the given password.
            </summary>
            <param name="password">The new password to use on the server.</param>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.ChangeServerAdminPasswordRequest.Details">
            <summary>
            Gets additional information about the new password to assign to the server.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.ChangeServerAdminPasswordRequest.ChangeAdminPasswordDetails">
            <summary>
            This models the JSON body containing the details of the Change Administrator Password request.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.ChangeServerAdminPasswordRequest.ChangeAdminPasswordDetails.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.ChangeServerAdminPasswordRequest.ChangeAdminPasswordDetails"/>
            class with the given password.
            </summary>
            <param name="password">The new password to use on the server.</param>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.ChangeServerAdminPasswordRequest.ChangeAdminPasswordDetails.AdminPassword">
            <summary>
            Gets the new password to assign to the server.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.SetPasswordRequest">
            <summary>
            This models the JSON request used for the Update User Credentials request
            when used with password credentials.
            </summary>
            <seealso cref="P:net.openstack.Providers.Rackspace.Objects.Request.SetPasswordRequest.PasswordCredential"/>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Update User Credentials (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.SetPasswordRequest.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.SetPasswordRequest"/> class
            with the specified username and password.
            </summary>
            <param name="username">The new username.</param>
            <param name="password">The new password.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="username"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="password"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="username"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="password"/> is empty.</para>
            </exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.SetPasswordRequest.PasswordCredential">
            <summary>
            Gets the password credentials to use for the Update User Credentials request.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.UpdateMetadataItemRequest">
            <summary>
            This models the JSON request used for the Set Metadata Item request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_or_Update_a_Metadata_Item-d1e5633.html">Set Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.UpdateMetadataItemRequest.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.UpdateMetadataItemRequest"/>
            class with the specified key and value.
            </summary>
            <param name="key">The metadata key.</param>
            <param name="value">The new value for the metadata item.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="key"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="value"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="key"/> is empty.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.UpdateMetadataItemRequest.Metadata">
            <summary>
            Gets the metadata item to associate with the server or image.
            </summary>
            <remarks>
            The value is never <c>null</c> and always contains exactly one entry.
            </remarks>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.UpdateMetadataRequest">
            <summary>
            This models the JSON request used for the Set Metadata and Update Metadata requests.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_or_Replace_Metadata-d1e5358.html">Set Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Update_Metadata-d1e5208.html">Update Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.UpdateMetadataRequest.#ctor(net.openstack.Core.Domain.Metadata)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.UpdateMetadataRequest"/> class
            with the given metadata.
            </summary>
            <param name="metadata">The metadata.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="metadata"/> is <c>null</c>.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.UpdateMetadataRequest.Metadata">
            <summary>
            Gets the metadata.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.UpdateUserCredentialRequest">
            <summary>
            This models the JSON request used for the Update User Credentials request
            when used with API Key credentials.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Update User Credentials (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.UpdateUserCredentialRequest.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.UpdateUserCredentialRequest"/>
            class with the specified API Key credentials.
            </summary>
            <param name="username">The new username.</param>
            <param name="apiKey">The new API key.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="username"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="apiKey"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="username"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="apiKey"/> is empty.</para>
            </exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.UpdateUserCredentialRequest.UserCredential">
            <summary>
            Gets the API Key credentials to use for the Update User Credentials request.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.UpdateUserRequest">
            <summary>
            This models the JSON request used for the Update User request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUser_v2.0_users__userId__.html">Update User (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.UpdateUserRequest.#ctor(net.openstack.Core.Domain.User)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.UpdateUserRequest"/> class
            with the specified user.
            </summary>
            <param name="user">A <see cref="P:net.openstack.Providers.Rackspace.Objects.Request.UpdateUserRequest.User"/> instance containing the updated details for the user.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="user"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="user"/>.<see cref="P:net.openstack.Core.Domain.User.Id"/> is <c>null</c> or empty.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.UpdateUserRequest.User">
            <summary>
            Gets the updated user information for the request.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.FlavorDetailsResponse">
            <summary>
            This models the JSON response used for the Get Flavor Details request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Get_Flavor_Details-d1e4317.html">Get Flavor Details (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.FlavorDetailsResponse.Flavor">
            <summary>
            Gets detailed information about the flavor.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.GetCloudBlockStorageSnapshotResponse">
            <summary>
            This models the JSON response used for the Create Snapshot and Show Snapshot requests.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Create_Snapshot.html">Create Snapshot (OpenStack Block Storage Service API Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Show_Snapshot.html">Show Snapshot (OpenStack Block Storage Service API Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.GetCloudBlockStorageSnapshotResponse.Snapshot">
            <summary>
            Gets information about the snapshot.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.GetCloudBlockStorageVolumeResponse">
            <summary>
            This models the JSON response used for the Create Volume and Show Volume requests.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Create_Volume.html">Create Volume (OpenStack Block Storage Service API Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Show_Volume.html">Show Volume (OpenStack Block Storage Service API Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.GetCloudBlockStorageVolumeResponse.Volume">
            <summary>
            Gets additional information about the volume.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.GetCloudBlockStorageVolumeTypeResponse">
            <summary>
            This models the JSON response used for the Show Volume Type request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Volume_Show_Type.html">Show Volume Type (OpenStack Block Storage Service API Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.GetCloudBlockStorageVolumeTypeResponse.VolumeType">
            <summary>
            Gets additional information about the volume type.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.GetImageDetailsResponse">
            <summary>
            This models the JSON response used for the Get Image Details request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Get_Image_Details-d1e4848.html">Get Image Details (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.GetImageDetailsResponse.Image">
            <summary>
            Gets detailed information about the image.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.IProviderFactory`2">
            <summary>
            Represents a factory for obtaining service providers for particular keys.
            </summary>
            <typeparam name="T">The provider type.</typeparam>
            <typeparam name="T2">The key type.</typeparam>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.IProviderFactory`2.Get(`1)">
            <summary>
            Get a provider for the specified <paramref name="key"/>.
            </summary>
            <param name="key">The key. If this value is <c>null</c>, a default provider will be returned if available.</param>
            <returns>The provider.</returns>
            <exception cref="T:System.NotSupportedException">If <paramref name="key"/> is <c>null</c>, and the factory does not support a default provider.</exception>
        </member>
        <member name="T:net.openstack.Core.Domain.NewServer">
            <summary>
            Extends <see cref="T:net.openstack.Core.Domain.ServerBase"/> with information for a newly-created server.
            </summary>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.CreateServer(System.String,System.String,System.String,net.openstack.Core.Domain.DiskConfiguration,net.openstack.Core.Domain.Metadata,net.openstack.Core.Domain.Personality[],System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/CreateServers.html">Create Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.NewServer.UpdateThis(net.openstack.Core.Domain.ServerBase)">
            <inheritdoc/>
        </member>
        <member name="P:net.openstack.Core.Domain.NewServer.DiskConfig">
            <summary>
            Gets the disk configuration used for creating the server. If the value was
            not explicitly specified in the create request, the server inherits the value
            from the image it was created from.
            </summary>
            <remarks>
            <note>This property is defined by the Rackspace-specific Disk Configuration Extension to the OpenStack Compute API.</note>
            </remarks>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/ch_extensions.html#diskconfig_attribute">Disk Configuration Extension (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.NewServer.AdminPassword">
            <summary>
            Gets the administrator password for the newly created server.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.ListAddressesResponse">
            <summary>
            This models the JSON response used for the List Addresses request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Addresses-d1e3014.html">List Addresses (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.ListAddressesResponse.Addresses">
            <summary>
            Gets the IP address details.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.ListFlavorDetailsResponse">
            <summary>
            This models the JSON response used for the List Flavors with Details request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Flavors-d1e4188.html">List Flavors (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.ListFlavorDetailsResponse.Flavors">
            <summary>
            Gets a collection of detailed information about the flavors.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.ListFlavorsResponse">
            <summary>
            This models the JSON response used for the List Flavors request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Flavors-d1e4188.html">List Flavors (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.ListFlavorsResponse.Flavors">
            <summary>
            Gets a collection of basic information about the available flavors.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.ListImagesDetailsResponse">
            <summary>
            This models the JSON response used for the List Images with Details request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Images-d1e4435.html">List Images (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.ListImagesDetailsResponse.Images">
            <summary>
            Gets a collection of detailed information about the images.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.ListImagesResponse">
            <summary>
            This models the JSON response used for the List Images request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Images-d1e4435.html">List Images (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.ListImagesResponse.Images">
            <summary>
            Gets a collection of basic information about the images.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.ListServersResponse">
            <summary>
            This models the JSON response used for the List Servers and List Servers with Details requests.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Servers-d1e2078.html">List Servers (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.ListServersResponse.Servers">
            <summary>
            Gets a collection of information about the servers.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.ListServersResponse.Links">
            <summary>
            Gets a collection of links related to the collection of servers.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.CreateServerRequest">
            <summary>
            This models the JSON request used for the Create Server request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/CreateServers.html">Create Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.CreateServerRequest.#ctor(System.String,System.String,System.String,net.openstack.Core.Domain.DiskConfiguration,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{net.openstack.Core.Domain.Personality})">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.CreateServerRequest"/> class
            with the specified details.
            </summary>
            <param name="name">Name of the new server.</param>
            <param name="imageName">The image to use for the new server instance. This is
            specified as an image ID (see <see cref="P:net.openstack.Core.Domain.SimpleServerImage.Id"/>) or a full URL.</param>
            <param name="flavor">The flavor to use for the new server instance. This
            is specified as a flavor ID (see <see cref="P:net.openstack.Core.Domain.Flavor.Id"/>) or a full URL.</param>
            <param name="diskConfig">The disk configuration. If the value is <c>null</c>, the default configuration for the specified image is used.</param>
            <param name="metadata">The metadata to associate with the server.</param>
            <param name="personality">A collection of <see cref="T:net.openstack.Core.Domain.Personality"/> objects describing the paths and contents of files to inject in the target file system during the creation process. If the value is <c>null</c>, no files are injected.</param>
            <param name="accessIPv4">The behavior of this value is unspecified. Do not use.</param>
            <param name="accessIPv6">The behavior of this value is unspecified. Do not use.</param>
            <param name="networks">A collection of identifiers for networks to initially connect to the server. These are obtained from <see cref="P:net.openstack.Core.Domain.CloudNetwork.Id">CloudNetwork.Id</see></param>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.CreateServerRequest.Details">
            <summary>
            Gets additional details about the Create Server request.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.CreateServerRequest.CreateServerDetails">
            <summary>
            This models the JSON body containing details for a Create Server request.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.CreateServerRequest.CreateServerDetails.#ctor(System.String,System.String,System.String,net.openstack.Core.Domain.DiskConfiguration,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{net.openstack.Core.Domain.Personality})">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.CreateServerRequest.CreateServerDetails"/> class
            with the specified details.
            </summary>
            <param name="name">Name of the new server.</param>
            <param name="imageName">The image to use for the new server instance. This is
            specified as an image ID (see <see cref="P:net.openstack.Core.Domain.SimpleServerImage.Id"/>) or a full URL.</param>
            <param name="flavor">The flavor to use for the new server instance. This
            is specified as a flavor ID (see <see cref="P:net.openstack.Core.Domain.Flavor.Id"/>) or a full URL.</param>
            <param name="diskConfig">The disk configuration. If the value is <c>null</c>, the default configuration for the specified image is used.</param>
            <param name="metadata">The metadata to associate with the server.</param>
            <param name="personality">A collection of <see cref="P:net.openstack.Providers.Rackspace.Objects.Request.CreateServerRequest.CreateServerDetails.Personality"/> objects describing the paths and contents of files to inject in the target file system during the creation process. If the value is <c>null</c>, no files are injected.</param>
            <param name="accessIPv4">The behavior of this value is unspecified. Do not use.</param>
            <param name="accessIPv6">The behavior of this value is unspecified. Do not use.</param>
            <param name="networks">A collection of identifiers for networks to initially connect to the server. These are obtained from <see cref="P:net.openstack.Core.Domain.CloudNetwork.Id">CloudNetwork.Id</see></param>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.CreateServerRequest.CreateServerDetails.Name">
            <summary>
            Gets the name of the new server to create.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.CreateServerRequest.CreateServerDetails.ImageName">
            <summary>
            Gets the image to use for the new server instance. This is
            specified as an image ID (see <see cref="P:net.openstack.Core.Domain.SimpleServerImage.Id"/>) or a full URL.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.CreateServerRequest.CreateServerDetails.Flavor">
            <summary>
            Gets the flavor to use for the new server instance. This
            is specified as a flavor ID (see <see cref="P:net.openstack.Core.Domain.Flavor.Id"/>) or a full URL.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.CreateServerRequest.CreateServerDetails.DiskConfig">
            <summary>
            Gets the disk configuration. If the value is <c>null</c>, the default configuration for the specified image is used.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.CreateServerRequest.CreateServerDetails.Metadata">
            <summary>
            Gets the metadata to associate with the server.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.CreateServerRequest.CreateServerDetails.AccessIPv4">
            <summary>
            The behavior of this value is unspecified. Do not use.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.CreateServerRequest.CreateServerDetails.AccessIPv6">
            <summary>
            The behavior of this value is unspecified. Do not use.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.CreateServerRequest.CreateServerDetails.Networks">
            <summary>
            Gets a collection of information about networks to initially connect to the server.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.CreateServerRequest.CreateServerDetails.Personality">
            <summary>
            Gets a collection of <see cref="P:net.openstack.Providers.Rackspace.Objects.Request.CreateServerRequest.CreateServerDetails.Personality"/> objects describing the paths and
            contents of files to inject in the target file system during the creation process.
            If the value is <c>null</c>, no files are injected.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.CreateServerRequest.CreateServerDetails.NewServerNetwork">
            <summary>
            This models the JSON body containing details for a connected network
            within the Create Server request.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.CreateServerRequest.CreateServerDetails.NewServerNetwork.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.CreateServerRequest.CreateServerDetails.NewServerNetwork"/> class
            with the specified ID.
            </summary>
            <param name="networkId">The network ID. This is obtained from <see cref="P:net.openstack.Core.Domain.CloudNetwork.Id">CloudNetwork.Id</see>.</param>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.CreateServerRequest.CreateServerDetails.NewServerNetwork.NetworkId">
            <summary>
            Gets the ID of the network.
            </summary>
            <seealso cref="P:net.openstack.Core.Domain.CloudNetwork.Id"/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.CreateServerResponse">
            <summary>
            This models the JSON response used for the Create Server request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/CreateServers.html">Create Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.CreateServerResponse.Server">
            <summary>
            Gets information about the created server.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.ListSnapshotResponse">
            <summary>
            This models the JSON response used for the List Snapshot Summaries request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/List_Snapshots.html">List Snapshot Summaries (OpenStack Block Storage Service API Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.ListSnapshotResponse.Snapshots">
            <summary>
            Gets a collection of information about the snapshots.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.ListVolumeResponse">
            <summary>
            This models the JSON response used for the List Volume Summaries request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/List_Summary_Volumes.html">List Volume Summaries (OpenStack Block Storage Service API Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.ListVolumeResponse.Volumes">
            <summary>
            Gets a collection of information about the volumes.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.ListVolumeTypeResponse">
            <summary>
            This models the JSON response used for the List Volume Types request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Volume_List_Types.html">List Volume Types (OpenStack Block Storage Service API Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.ListVolumeTypeResponse.VolumeTypes">
            <summary>
            Gets a collection of information about the volume types.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.NewUserResponse">
            <summary>
            This models the JSON response used for the Add User request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_addUser_v2.0_users_.html">Add User (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.NewUserResponse.NewUser">
            <summary>
            Gets the information about the newly created user, including the generated
            <see cref="P:net.openstack.Core.Domain.NewUser.Password"/> if no password was specified in the request.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.PasswordCredentialResponse">
            <summary>
            This models the JSON response used for the Update User Credentials request
            when used with password credentials.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Update User Credentials (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.PasswordCredentialResponse.PasswordCredential">
            <summary>
            Gets the password credentials used for the Update User Credentials request.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.TenantsResponse">
            <summary>
            This models the JSON response used for the List Tenants request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_listTenants_v2.0_tenants_Tenant_Operations.html">List Tenants (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.TenantsResponse.Tenants">
            <summary>
            Gets a collection of information about the tenants.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.UserCredentialResponse">
            <summary>
            This models the JSON response used for the Update User Credentials request
            when used with API Key credentials.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Update User Credentials (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.UserCredentialResponse.UserCredential">
            <summary>
            Gets the API key credentials sent with the Update User Credentials request.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.UsersResponse">
            <summary>
            This models the JSON response used for the List Users request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_listUsers_v2.0_users_.html">List Users (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.UsersResponse.Users">
            <summary>
            Gets a collection of information about the users.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.RackspaceImpersonationIdentity">
            <summary>
            Represents a cloud identity that impersonates another <see cref="T:net.openstack.Providers.Rackspace.Objects.RackspaceCloudIdentity"/>.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.RackspaceCloudIdentity">
            <summary>
            Extends the <see cref="T:net.openstack.Core.Domain.CloudIdentity"/> class by adding support for specifying
            a <see cref="P:net.openstack.Providers.Rackspace.Objects.RackspaceCloudIdentity.Domain"/> for the identity.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.RackspaceCloudIdentity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.RackspaceCloudIdentity"/> class
            with the default values.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.RackspaceCloudIdentity.#ctor(net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.RackspaceCloudIdentity"/> class
            from the given <see cref="T:net.openstack.Core.Domain.CloudIdentity"/> instance.
            </summary>
            <param name="cloudIdentity">The generic cloud identity.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="cloudIdentity"/> is <c>null</c>.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.RackspaceCloudIdentity.Domain">
            <summary>
            Gets or sets the <see cref="P:net.openstack.Providers.Rackspace.Objects.RackspaceCloudIdentity.Domain"/> for this account.
            </summary>
            <remarks>
            The <see cref="T:net.openstack.Providers.Rackspace.Objects.RackspaceCloudIdentity"/> class represents <em>credentials</em> (as opposed
            to an <em>account</em>), so any changes made to this property value will not be
            reflected in the account.
            </remarks>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.RackspaceImpersonationIdentity.UserToImpersonate">
            <summary>
            Gets or sets the <see cref="T:net.openstack.Providers.Rackspace.Objects.RackspaceCloudIdentity"/> of the user to impersonate.
            </summary>
            <remarks>
            The <see cref="T:net.openstack.Providers.Rackspace.RackspaceImpersonationIdentity"/> class represents <em>credentials</em>
            (as opposed to an <em>account</em>), so any changes made to this property value will
            not be reflected in the account.
            </remarks>
        </member>
        <member name="T:net.openstack.Core.Domain.Metadata">
            <summary>
            Represents metadata for servers and images in the Compute Service.
            </summary>
            <remarks>
            The metadata keys for the compute provider are case-sensitive.
            </remarks>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Credentials">
            <summary>
            Represents the credentials data for an Authenticate request to the Rackspace
            Identity Service.
            </summary>
            <seealso href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/POST_authenticate_v2.0_tokens_.html">Authenticate (Rackspace Cloud Identity Client Developer Guide - API v2.0)</seealso>
            <seealso href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/Sample_Request_Response-d1e64.html">Sample Authentication Request and Response (Rackspace Cloud Identity Client Developer Guide - API v2.0)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Credentials.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Credentials"/> class using the specified
            username, password, and API key.
            </summary>
            <param name="username">The username to use for authentication.</param>
            <param name="password">The password to use for authentication.</param>
            <param name="apiKey">The API key to use for authentication.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="username"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="username"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="password"/> and <paramref name="apiKey"/> are both <c>null</c> or empty.</para>
            </exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Credentials.Username">
            <summary>
            Gets or sets the username to use for authentication.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Credentials.Password">
            <summary>
            Gets or sets the password to use for authentication.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Credentials.APIKey">
            <summary>
            Gets or sets the API key to use for authentication.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.MetaDataResponse">
            <summary>
            This models the JSON response used for the List Metadata request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Metadata-d1e5089.html">List Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.MetaDataResponse.Metadata">
            <summary>
            Gets the metadata information.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.Server">
            <summary>
            Extends <see cref="T:net.openstack.Core.Domain.SimpleServer"/> with detailed information about a server.
            </summary>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.GetDetails(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Get_Server_Details-d1e2623.html">Get Server Details (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.Server.UpdateThis(net.openstack.Core.Domain.ServerBase)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Core.Domain.Server.GetVolumes">
            <summary>
            Lists the volume attachments for the server.
            </summary>
            <returns>A collection of <see cref="T:net.openstack.Core.Domain.ServerVolume"/> objects describing the volumes attached to the server.</returns>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.ListServerVolumes(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/List_Volume_Attachments.html">List Volume Attachments (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
        </member>
        <member name="M:net.openstack.Core.Domain.Server.GetMetadata">
            <summary>
            Gets the metadata associated with the server.
            </summary>
            <returns>A <see cref="T:net.openstack.Core.Domain.Metadata"/> object containing the metadata associated with the server.</returns>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.ListServerMetadata(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Metadata-d1e5089.html">List Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Domain.Server.SetMetadata(net.openstack.Core.Domain.Metadata)">
            <summary>
            Sets the metadata associated with the server, replacing any existing metadata.
            </summary>
            <param name="metadata">The metadata to associate with the server.</param>
            <returns><c>true</c> if the metadata for the server was successfully updated; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="metadata"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="metadata"/> contains any values with null or empty keys.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.SetServerMetadata(System.String,net.openstack.Core.Domain.Metadata,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_or_Replace_Metadata-d1e5358.html">Set Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Domain.Server.AddMetadata(net.openstack.Core.Domain.Metadata)">
            <summary>
            Updates the metadata for the server.
            </summary>
            <remarks>
            For each item in <paramref name="metadata"/>, if the key exists, the value is updated; otherwise, the item is added.
            </remarks>
            <param name="metadata">The server metadata to update.</param>
            <returns><c>true</c> if the metadata for the server was successfully updated; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="metadata"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="metadata"/> contains any values with null or empty keys.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.UpdateServerMetadata(System.String,net.openstack.Core.Domain.Metadata,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Update_Metadata-d1e5208.html">Update Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Domain.Server.AddMetadata(System.String,System.String)">
            <summary>
            Adds or updates the value for the specified metadata item.
            </summary>
            <param name="key">The metadata key.</param>
            <param name="value">The new value for the metadata item.</param>
            <returns><c>true</c> if the metadata for the server was successfully updated; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="key"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="value"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="key"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.SetServerMetadataItem(System.String,System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_or_Update_a_Metadata_Item-d1e5633.html">Set Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Domain.Server.UpdateMetadata(net.openstack.Core.Domain.Metadata)">
            <summary>
            Updates the metadata for the server.
            </summary>
            <remarks>
            For each item in <paramref name="metadata"/>, if the key exists, the value is updated; otherwise, the item is added.
            </remarks>
            <param name="metadata">The server metadata to update.</param>
            <returns><c>true</c> if the metadata for the server was successfully updated; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="metadata"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="metadata"/> contains any values with null or empty keys.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.UpdateServerMetadata(System.String,net.openstack.Core.Domain.Metadata,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Update_Metadata-d1e5208.html">Update Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Domain.Server.DeleteMetadata(net.openstack.Core.Domain.Metadata)">
            <summary>
            Deletes the specified metadata items from the server.
            </summary>
            <remarks>
            <note>
            This method ignores the values in <paramref name="metadata"/>. Metadata items are
            removed whether or not their current values match those in <paramref name="metadata"/>.
            </note>
            </remarks>
            <param name="metadata">A collection of metadata items to delete.</param>
            <returns><c>true</c> if all of the metadata item were removed; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="metadata"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="metadata"/> contains a null or empty key.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.DeleteServerMetadataItem(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Delete_Metadata_Item-d1e5790.html">Delete Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Domain.Server.DeleteMetadataItem(System.String)">
            <summary>
            Deletes the specified metadata item from the server.
            </summary>
            <param name="key">The metadata key.</param>
            <returns><c>true</c> if the metadata item was removed; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="key"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="key"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.DeleteServerMetadataItem(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Delete_Metadata_Item-d1e5790.html">Delete Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Domain.Server.UpdateMetadataItem(System.String,System.String)">
            <summary>
            Sets the value for the specified metadata item. If the key already exists, it is updated; otherwise, a new metadata item is added.
            </summary>
            <param name="key">The metadata key.</param>
            <param name="value">The new value for the metadata item.</param>
            <returns><c>true</c> if the metadata for the server was successfully updated; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="key"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="value"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="key"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.SetServerMetadataItem(System.String,System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_or_Update_a_Metadata_Item-d1e5633.html">Set Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Domain.Server.ListAddresses">
            <summary>
            Lists all networks and server addresses associated with a server.
            </summary>
            <returns>A <see cref="T:net.openstack.Core.Domain.ServerAddresses"/> object containing the list of network addresses for the server.</returns>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.ListAddresses(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Addresses-d1e3014.html">List Addresses (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Domain.Server.ListAddressesByNetwork(System.String)">
            <summary>
            Lists addresses for the server associated with the specified network.
            </summary>
            <param name="networkLabel">The network label. This is obtained from <see cref="P:net.openstack.Core.Domain.CloudNetwork.Label">CloudNetwork.Label</see>.</param>
            <returns>A collection of <see cref="T:System.Net.IPAddress"/> containing the network addresses associated with the server on the specified network.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="networkLabel"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="networkLabel"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.ListAddressesByNetwork(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Addresses_by_Network-d1e3118.html">List Addresses by Network (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Domain.Server.Snapshot(System.String,net.openstack.Core.Domain.Metadata)">
            <summary>
            Creates a new snapshot image for the server at its current state.
            </summary>
            <remarks>
            The server snapshot process is completed asynchronously. To wait for the image
            to be completed, you may call <see cref="M:net.openstack.Core.Domain.SimpleServerImage.WaitForActive(System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32})"/> on the
            returned image.
            </remarks>
            <param name="imageName">Name of the new image.</param>
            <param name="metadata">The metadata to associate to the new image.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.ServerImage"/> object containing the details of the new image if the image creation process was successfully started; otherwise, <c>null</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="imageName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="imageName"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_Image-d1e4655.html">Create Image (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Domain.Server.Delete">
            <summary>
            Marks the server for asynchronous deletion.
            </summary>
            <remarks>
            The server deletion operation is completed asynchronously. The <see cref="M:net.openstack.Core.Domain.ServerBase.WaitForDeleted(System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32})"/>
            method may be used to block execution until the server is finally deleted.
            </remarks>
            <returns><c>true</c> if the server was successfully marked for deletion; otherwise, <c>false</c>.</returns>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.DeleteServer(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Delete_Server-d1e2883.html">Delete Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:net.openstack.Core.Domain.Server.ListVirtualInterfaces">
            <summary>
            Lists the virtual interfaces for the server.
            </summary>
            <returns>A collection of <see cref="T:net.openstack.Core.Domain.VirtualInterface"/> objects describing the virtual interfaces for the server.</returns>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.ListVirtualInterfaces(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/list_virt_interfaces.html">List Virtual Interfaces (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
        </member>
        <member name="M:net.openstack.Core.Domain.Server.CreateVirtualInterface(System.String)">
            <summary>
            Creates a virtual interface for the specified network and attaches the network to the server.
            </summary>
            <param name="networkId">The network ID. This is obtained from <see cref="P:net.openstack.Core.Domain.CloudNetwork.Id">CloudNetwork.Id</see>.</param>
            <returns>A <see cref="T:net.openstack.Core.Domain.VirtualInterface"/> object containing the details of the newly-created virtual network.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="networkId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="networkId"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.CreateVirtualInterface(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/api_create_virtual_interface.html">Create Virtual Interface (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
        </member>
        <member name="M:net.openstack.Core.Domain.Server.DeleteVirtualInterface(System.String)">
            <summary>
            Deletes the specified virtual interface from the server.
            </summary>
            <param name="virtualInterfaceId">The virtual interface ID. This is obtained from <see cref="P:net.openstack.Core.Domain.VirtualInterface.Id">VirtualInterface.Id</see>.</param>
            <returns><c>true</c> if the virtual interface was successfully removed from the server; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="virtualInterfaceId"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="virtualInterfaceId"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:net.openstack.Core.Providers.IComputeProvider.DeleteVirtualInterface(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)"/>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/delete_virt_interface_api.html">Delete Virtual Interface (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.Server.DiskConfig">
            <summary>
            Gets the disk configuration used for creating, rebuilding, or resizing the server.
            If the value was not explicitly specified in the create, rebuild, or resize request,
            the server inherits the value from the image it was created from.
            </summary>
            <remarks>
            <note>This property is defined by the Rackspace-specific Disk Configuration Extension to the OpenStack Compute API.</note>
            </remarks>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/ch_extensions.html#diskconfig_attribute">Disk Configuration Extension (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.Server.PowerState">
            <summary>
            Gets the power state for the server.
            </summary>
            <remarks>
            <note>This property is defined by the Rackspace-specific Extended Status Extension to the OpenStack Compute API.</note>
            </remarks>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/ch_extensions.html#power_state">OS-EXT-STS:power_state (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.Server.TaskState">
            <summary>
            Gets the task state for the server.
            </summary>
            <remarks>
            <note>This property is defined by the Rackspace-specific Extended Status Extension to the OpenStack Compute API.</note>
            </remarks>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/ch_extensions.html#task_state">OS-EXT-STS:task_state (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.Server.VMState">
            <summary>
            Gets the virtual machine (VM) state for the server.
            </summary>
            <remarks>
            <note>This property is defined by the Rackspace-specific Extended Status Extension to the OpenStack Compute API.</note>
            </remarks>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/ch_extensions.html#vm_state">OS-EXT-STS:vm_state (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.Server.AccessIPv4">
            <summary>
            Gets the public IP version 4 access address.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Server.AccessIPv6">
            <summary>
            Gets the public IP version 6 access address.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Server.UserId">
            <summary>
            Gets the user ID for the server.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Server.Image">
            <summary>
            Gets basic information about the image the server was created from.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Server.Status">
            <summary>
            Gets the server status.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Server.Flavor">
            <summary>
            Gets basic information about the flavor for the server.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Server.Addresses">
            <summary>
            Gets the public and private IP addresses for the server.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Server.Created">
            <summary>
            Gets the time stamp for the creation date.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Server.HostId">
             <summary>
             Gets the host ID for the server.
             </summary>
             <remarks>
             The compute provisioning algorithm has an anti-affinity property that attempts
             to spread customer VMs across hosts. Under certain situations, VMs from the
             same customer might be placed on the same host. The Host ID represents the host
             your server runs on and can be used to determine this scenario if it is relevant
             to your application.
            
             <para><see cref="P:net.openstack.Core.Domain.Server.HostId"/> is unique <em>per account</em> and is not globally unique.</para>
             </remarks>
        </member>
        <member name="P:net.openstack.Core.Domain.Server.Progress">
            <summary>
            Gets the build completion progress, as a percentage.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
            <value>A percentage from 0 to 100 (inclusive) representing the build completion progress.</value>
        </member>
        <member name="P:net.openstack.Core.Domain.Server.TenantId">
            <summary>
            Gets the tenant ID of the server.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
            <seealso cref="P:net.openstack.Core.Domain.Tenant.Id"/>
        </member>
        <member name="P:net.openstack.Core.Domain.Server.Updated">
            <summary>
            Gets the time stamp for the last update.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.ServerDetailsResponse">
            <summary>
            This models the JSON response used for the Get Server Details, Update Server, and Rebuild Server requests.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Get_Server_Details-d1e2623.html">Get Server Details (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/ServerUpdate.html">Update Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Rebuild_Server-d1e3538.html">Rebuild Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.ServerDetailsResponse.Server">
            <summary>
            Gets the detailed information about the server.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.User">
            <summary>
            Represents a user account.
            </summary>
            <seealso cref="M:net.openstack.Core.Providers.IIdentityProvider.ListUsers(net.openstack.Core.Domain.CloudIdentity)"/>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Core.Domain.User.DefaultRegion">
             <summary>
             Gets or sets the default region of the user.
             <note type="warning">The value of this property is not defined. Do not use.</note>
             </summary>
             <remarks>
             Changes to this property are not automatically saved on the server. To apply the
             changes, call <see cref="M:net.openstack.Core.Providers.IIdentityProvider.UpdateUser(net.openstack.Core.Domain.User,net.openstack.Core.Domain.CloudIdentity)"/> after setting this property.
            
             <note>
             This property is a Rackspace-specific extension to the OpenStack Identity Service.
             </note>
             </remarks>
        </member>
        <member name="P:net.openstack.Core.Domain.User.Id">
            <summary>
            Gets the unique identifier for the user.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.User.Username">
            <summary>
            Gets or sets the "username" property of the user.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <remarks>
            Changes to this property are not automatically saved on the server. To apply the
            changes, call <see cref="M:net.openstack.Core.Providers.IIdentityProvider.UpdateUser(net.openstack.Core.Domain.User,net.openstack.Core.Domain.CloudIdentity)"/> after setting this property.
            </remarks>
        </member>
        <member name="P:net.openstack.Core.Domain.User.Email">
            <summary>
            Gets or sets the "email" property of the user.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <remarks>
            Changes to this property are not automatically saved on the server. To apply the
            changes, call <see cref="M:net.openstack.Core.Providers.IIdentityProvider.UpdateUser(net.openstack.Core.Domain.User,net.openstack.Core.Domain.CloudIdentity)"/> after setting this property.
            </remarks>
        </member>
        <member name="P:net.openstack.Core.Domain.User.Enabled">
            <summary>
            Gets or sets the "enabled" property of the user.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <remarks>
            Changes to this property are not automatically saved on the server. To apply the
            changes, call <see cref="M:net.openstack.Core.Providers.IIdentityProvider.UpdateUser(net.openstack.Core.Domain.User,net.openstack.Core.Domain.CloudIdentity)"/> after setting this property.
            </remarks>
        </member>
        <member name="T:net.openstack.Core.Domain.IdentityToken">
            <summary>
            Represents the authentication token used for making authenticated calls to
            multiple APIs.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Core.Domain.IdentityToken.Expires">
            <summary>
            Gets the token expiration time in the format originally returned by the
            authentication response.
            </summary>
            <seealso cref="M:net.openstack.Core.Providers.IIdentityProvider.GetToken(net.openstack.Core.Domain.CloudIdentity,System.Boolean)"/>
        </member>
        <member name="P:net.openstack.Core.Domain.IdentityToken.Id">
            <summary>
            Gets the token ID which can be used to make authenticated API calls.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.IdentityToken.Tenant">
            <summary>
            Gets a <see cref="P:net.openstack.Core.Domain.IdentityToken.Tenant"/> object containing the name and ID of the
            tenant (or account) for the authenticated credentials.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.IdentityToken.IsExpired">
            <summary>
            Gets whether or not the token has expired. This property simply checks
            the <see cref="P:net.openstack.Core.Domain.IdentityToken.Expires"/> property against the current system time.
            If the <see cref="P:net.openstack.Core.Domain.IdentityToken.Expires"/> value is missing or not in a recognized
            format, the token is assumed to have expired.
            </summary>
            <value><c>true</c> if the token has expired; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:net.openstack.Core.Domain.IdentityToken.AuthenticationTypes">
            <summary>
            Gets a Collection of <see cref="T:net.openstack.Core.Domain.AuthenticationType"/> objects representing the ways the 
            user has authenticated.
            </summary>
            <preliminary/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.RescueServerRequest">
            <summary>
            This models the JSON request used for the Rescue Server request.
            </summary>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/rescue_mode.html">Rescue Server (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.RescueServerResponse">
            <summary>
            This models the JSON response used for the Rescue Server request.
            </summary>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/rescue_mode.html">Rescue Server (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.RescueServerResponse.AdminPassword">
            <summary>
            Gets the temporary administrator password assigned for use while the server
            is in rescue mode.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.RevertServerResizeRequest">
            <summary>
            This models the JSON request used for the Revert Resized Server request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Revert_Resized_Server-d1e4024.html">Revert Resized Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.UnrescueServerRequest">
            <summary>
            This models the JSON request used for the Unrescue Server request.
            </summary>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/exit_rescue_mode.html">Unrescue Server (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.ServerRebootDetails">
            <summary>
            This models the JSON body containing details for the Reboot Server request.
            </summary>
            <seealso cref="T:net.openstack.Providers.Rackspace.Objects.Request.ServerRebootRequest"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Reboot_Server-d1e3371.html">Reboot Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.ServerRebootDetails.#ctor(net.openstack.Core.Domain.RebootType)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.ServerRebootDetails"/>
            class with the specified reboot type.
            </summary>
            <param name="type">The type of reboot to perform. See <see cref="T:net.openstack.Core.Domain.RebootType"/> for predefined values.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="type"/> is <c>null</c>.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.ServerRebootDetails.Type">
            <summary>
            Gets the type of reboot to perform.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.ServerRebootRequest">
            <summary>
            This models the JSON request used for the Reboot Server request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Reboot_Server-d1e3371.html">Reboot Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.ServerRebootRequest.#ctor(net.openstack.Providers.Rackspace.Objects.Request.ServerRebootDetails)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.ServerRebootRequest"/>
            class with the specified details.
            </summary>
            <param name="details">The details of the request.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="details"/> is <c>null</c>.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.ServerRebootRequest.Details">
            <summary>
            Gets additional details about the Reboot Server request.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.ServerRebuildDetails">
            <summary>
            This models the JSON body containing details for the Rebuild Server request.
            </summary>
            <seealso cref="T:net.openstack.Providers.Rackspace.Objects.Request.ServerRebuildRequest"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Rebuild_Server-d1e3538.html">Rebuild Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.ServerRebuildDetails.#ctor(System.String,System.String,System.String,System.String,System.Net.IPAddress,System.Net.IPAddress,net.openstack.Core.Domain.Metadata,net.openstack.Core.Domain.DiskConfiguration,net.openstack.Core.Domain.Personality)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.ServerRebuildDetails"/> class with the specified details.
            </summary>
            <param name="name">The new name for the server. If the value is <c>null</c>, the server name is not changed.</param>
            <param name="imageName">The image to rebuild the server from. This is specified as an image ID (see <see cref="P:net.openstack.Core.Domain.SimpleServerImage.Id"/>) or a full URL.</param>
            <param name="flavor">The new flavor for server. This is obtained from <see cref="P:net.openstack.Core.Domain.Flavor.Id"/>.</param>
            <param name="adminPassword">The new admin password for the server.</param>
            <param name="accessIPv4">The new IP v4 address for the server. If the value is <c>null</c>, the server's IP v4 address is not updated.</param>
            <param name="accessIPv6">The new IP v6 address for the server. If the value is <c>null</c>, the server's IP v6 address is not updated.</param>
            <param name="metadata">The list of metadata to associate with the server. If the value is <c>null</c>, the metadata associated with the server is not changed during the rebuild operation.</param>
            <param name="diskConfig">The disk configuration. If the value is <c>null</c>, the default configuration for the specified image is used.</param>
            <param name="personality">The path and contents of a file to inject in the target file system during the rebuild operation. If the value is <c>null</c>, no file is injected.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="imageName"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="flavor"/> is <c>null</c>.</para>
            <para>-or-</para>
            <para>If <paramref name="adminPassword"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="imageName"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="flavor"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="adminPassword"/> is empty.</para>
            <para>-or-</para>
            <para>If the <see cref="T:System.Net.Sockets.AddressFamily"/> of <paramref name="accessIPv4"/> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork"/></para>
            <para>-or-</para>
            <para>If the <see cref="T:System.Net.Sockets.AddressFamily"/> of <paramref name="accessIPv6"/> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6"/></para>
            </exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.ServerRebuildDetails.Name">
            <summary>
            Gets the new name for the server.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.ServerRebuildDetails.ImageName">
            <summary>
            Gets the image to rebuild the server from. This is specified as an image ID (see <see cref="P:net.openstack.Core.Domain.SimpleServerImage.Id"/>) or a full URL.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.ServerRebuildDetails.Flavor">
            <summary>
            The new flavor for server. This is obtained from <see cref="P:net.openstack.Core.Domain.Flavor.Id"/>.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.ServerRebuildDetails.DiskConfig">
            <summary>
            The disk configuration. If the value is <c>null</c>, the default configuration for the specified image is used.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.ServerRebuildDetails.AdminPassword">
            <summary>
            Gets the new admin password for the server.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.ServerRebuildDetails.Metadata">
            <summary>
            Gets the list of metadata to associate with the server. If the value is <c>null</c>, the metadata associated with the server is not changed during the rebuild operation.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.ServerRebuildDetails.Personality">
            <summary>
            The path and contents of a file to inject in the target file system during the rebuild operation. If the value is <c>null</c>, no file is injected.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.ServerRebuildDetails.AccessIPv4">
            <summary>
            The new IP v4 address for the server. If the value is <c>null</c>, the server's IP v4 address is not updated.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.ServerRebuildDetails.AccessIPv6">
            <summary>
            The new IP v6 address for the server. If the value is <c>null</c>, the server's IP v6 address is not updated.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.ServerRebuildRequest">
            <summary>
            This models the JSON request used for the Rebuild Server request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Rebuild_Server-d1e3538.html">Rebuild Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.ServerRebuildRequest.#ctor(net.openstack.Providers.Rackspace.Objects.Request.ServerRebuildDetails)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.ServerRebuildRequest"/>
            class with the specified details.
            </summary>
            <param name="details">The details of the request.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="details"/> is <c>null</c>.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.ServerRebuildRequest.Details">
            <summary>
            Gets additional information about the Rebuild Server request.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.ServerResizeDetails">
            <summary>
            This models the JSON body containing details for the Resize Server request.
            </summary>
            <seealso cref="T:net.openstack.Providers.Rackspace.Objects.Request.ServerResizeRequest"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Resize_Server-d1e3707.html">Resize Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.ServerResizeDetails.#ctor(System.String,System.String,net.openstack.Core.Domain.DiskConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.ServerResizeDetails"/> class with the specified details.
            </summary>
            <param name="name">The new name for the resized server.</param>
            <param name="flavor">The new flavor. This is obtained from <see cref="P:net.openstack.Core.Domain.Flavor.Id">Flavor.Id</see>.</param>
            <param name="diskConfig">The disk configuration. If the value is <c>null</c>, the default configuration for the specified image is used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="name"/> is <c>null</c>.
            <para>-or-</para>
            <para>If <paramref name="flavor"/> is <c>null</c>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="name"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="flavor"/> is empty.</para>
            </exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.ServerResizeDetails.Name">
            <summary>
            Gets the new name for the resized server.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.ServerResizeDetails.Flavor">
            <summary>
            Gets the ID of the new flavor.
            </summary>
            <seealso cref="P:net.openstack.Core.Domain.Flavor.Id"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.ServerResizeDetails.DiskConfig">
            <summary>
            The disk configuration. If the value is <c>null</c>, the default configuration for the image is used.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.ServerResizeRequest">
            <summary>
            This models the JSON request used for the Resize Server request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Resize_Server-d1e3707.html">Resize Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.ServerResizeRequest.#ctor(net.openstack.Providers.Rackspace.Objects.Request.ServerResizeDetails)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.ServerResizeRequest"/>
            class with the specified details.
            </summary>
            <param name="details">The details of the request.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="details"/> is <c>null</c>.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.ServerResizeRequest.Details">
            <summary>
            Gets additional information about the Resize Server request.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Exceptions.UserAuthenticationException">
            <summary>
            The exception thrown when the user authentication process fails, or
            the authentication process did not provide a value for the <see cref="P:net.openstack.Core.Domain.UserAccess.ServiceCatalog"/>.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Exceptions.UserAuthenticationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.UserAuthenticationException"/> class
            with the specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:net.openstack.Core.Exceptions.UserAuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.UserAuthenticationException"/> class with
            serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="info"/> is <c>null</c>.</exception>
        </member>
        <member name="T:net.openstack.Core.Exceptions.UserAuthorizationException">
            <summary>
            The exception that is thrown when a user does not have access to a REST API method
            (status code <see cref="F:System.Net.HttpStatusCode.Forbidden"/>), or an endpoint could not be
            obtained for a particular provider because it was not present in the user's
            <see cref="P:net.openstack.Core.Domain.UserAccess.ServiceCatalog"/>.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Exceptions.UserAuthorizationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.UserAuthorizationException"/> class
            with the specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:net.openstack.Core.Exceptions.UserAuthorizationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Exceptions.UserAuthorizationException"/> class with
            serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="info"/> is <c>null</c>.</exception>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Validators.CloudBlockStorageValidator">
            <summary>
            Provides an implementation of <see cref="T:net.openstack.Core.Validators.IBlockStorageValidator"/> for
            operation with Rackspace's Cloud Block Storage product.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Validators.CloudBlockStorageValidator._default">
            <summary>
            A default instance of <see cref="T:net.openstack.Providers.Rackspace.Validators.CloudBlockStorageValidator"/>.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Validators.CloudBlockStorageValidator.ValidateVolumeSize(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Validators.CloudBlockStorageValidator.Default">
            <summary>
            Gets a default implementation of <see cref="T:net.openstack.Providers.Rackspace.Validators.CloudBlockStorageValidator"/>.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Validators.CloudNetworksValidator">
            <summary>
            Provides an implementation of <see cref="T:net.openstack.Core.Validators.INetworksValidator"/> for
            operation with Rackspace's Cloud Networks product.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Validators.CloudNetworksValidator._default">
            <summary>
            A default instance of <see cref="T:net.openstack.Providers.Rackspace.Validators.CloudNetworksValidator"/>.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Validators.CloudNetworksValidator.ValidateCidr(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Validators.CloudNetworksValidator.IsIpAddress(System.String)">
            <summary>
            Returns true if the string matches the ip address pattern (xxx.xxx.xxx.xxx) 
            and all octets are numeric and less than 256
            </summary>
            <param name="address"></param>
            <returns></returns>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Validators.CloudNetworksValidator.Default">
            <summary>
            Gets a default instance of <see cref="T:net.openstack.Providers.Rackspace.Validators.CloudNetworksValidator"/>.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Caching.UserAccessCache">
            <summary>
            Provides a thread-safe cache of <see cref="T:net.openstack.Core.Domain.UserAccess"/> objects. A default shared
            instance is available through <see cref="P:net.openstack.Core.Caching.UserAccessCache.Instance"/>.
            </summary>
        </member>
        <member name="M:net.openstack.Core.Caching.UserAccessCache.Get(System.String,System.Func{net.openstack.Core.Domain.UserAccess},System.Boolean)">
             <summary>
             Gets a <see cref="T:net.openstack.Core.Domain.UserAccess"/> cached for a particular key, updating the value if necessary.
             </summary>
             <remarks>
             This method returns a previously cached <see cref="T:net.openstack.Core.Domain.UserAccess"/> when possible. If any
             of the following conditions are met, the <paramref name="refreshCallback"/> function
             will be called to obtain a new value for <paramref name="key"/> which is then added to
             the cache, replacing any previously cached value.
             
             <list type="bullet">
             <item>The cache does not contain any value associated with <paramref name="key"/>.</item>
             <item><paramref name="forceCacheRefresh"/> is <c>true</c>.</item>
             <item>The previously cached <see cref="T:net.openstack.Core.Domain.UserAccess"/> for <paramref name="key"/> has expired
             (see <see cref="P:net.openstack.Core.Domain.IdentityToken.IsExpired"/>).</item>
             </list>
            
             <para>If any of the above conditions is met and <paramref name="refreshCallback"/> is <c>null</c>,
             the previously cached value for <paramref name="key"/>, if any, is removed from the cache
             and the method returns <c>null</c>.</para>
             </remarks>
             <param name="key">The key.</param>
             <param name="refreshCallback">A function which returns a new value for the specified <paramref name="key"/>,
             or <c>null</c> if no update function available (see remarks). This function may perform a synchronous
             authentication to an <see cref="T:net.openstack.Core.Providers.IIdentityProvider"/>.</param>
             <param name="forceCacheRefresh">If <c>true</c>, the value associated with <paramref name="key"/> will be always be refreshed by calling <paramref name="refreshCallback"/>, even if a value is already cached.</param>
             <returns>
             The cached <see cref="T:net.openstack.Core.Domain.UserAccess"/> associated with the specified <paramref name="key"/>.
             If no cached value is available (see remarks), the method returns <c>null</c>.
             </returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="key"/> is <c>null</c>.</exception>
        </member>
        <member name="P:net.openstack.Core.Caching.UserAccessCache.Instance">
            <summary>
            Gets a default instance of <see cref="T:net.openstack.Core.Caching.UserAccessCache"/>.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.UserAccess">
            <summary>
            Represents the response to a user authentication.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.UserAccess.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.UserAccess"/> class.
            </summary>
            <remarks>
            This constructor is used by the JSON deserializer.
            </remarks>
        </member>
        <member name="M:net.openstack.Core.Domain.UserAccess.#ctor(net.openstack.Core.Domain.IdentityToken,net.openstack.Core.Domain.UserDetails,net.openstack.Core.Domain.ServiceCatalog[])">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.UserAccess"/> class
            with the specified token, user, and service catalog.
            </summary>
            <param name="token">The <see cref="T:net.openstack.Core.Domain.IdentityToken"/>.</param>
            <param name="user">The <see cref="T:net.openstack.Core.Domain.UserDetails"/>.</param>
            <param name="serviceCatalog">List of <see cref="P:net.openstack.Core.Domain.UserAccess.ServiceCatalog"/>s.</param>
        </member>
        <member name="P:net.openstack.Core.Domain.UserAccess.Token">
            <summary>
            Gets the <see cref="T:net.openstack.Core.Domain.IdentityToken"/> which allows providers to make authenticated
            calls to API methods.
            </summary>
            <remarks>
            The specific manner in which the token is used is provider-specific. Some implementations
            pass the token's <see cref="P:net.openstack.Core.Domain.IdentityToken.Id"/> as an HTTP header when requesting a
            resource.
            </remarks>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.UserAccess.User">
            <summary>
            Gets the details for the authenticated user, such as the username and roles.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.UserAccess.ServiceCatalog">
            <summary>
            Gets the services which may be accessed by this user.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.AuthRequest">
            <summary>
            This models the JSON request used for the Authenticate request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.AuthRequest.#ctor(net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.AuthRequest"/> class with the
            given identity.
            </summary>
            <param name="identity">The identity of the user to authenticate.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="identity"/> is <c>null</c>.</exception>
            <exception cref="T:System.NotSupportedException">If given <paramref name="identity"/> type is not supported.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.AuthRequest.Credentials">
            <summary>
            Gets additional information about the credentials to authenticate.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.Role">
            <summary>
            A personality that a user assumes when performing a specific set of operations. A role
            includes a set of right and privileges. A user assuming that role inherits those rights
            and privileges.
            </summary>
            <remarks>
            In OpenStack Identity Service, a token that is issued to a user includes the list of
            roles that user can assume. Services that are being called by that user determine how
            they interpret the set of roles a user has and to which operations or resources each
            role grants access.
            </remarks>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.Role.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.Role"/> class with
            the specified name and description.
            </summary>
            <param name="name">The name of the role.</param>
            <param name="description">The description of the role.</param>
        </member>
        <member name="P:net.openstack.Core.Domain.Role.Id">
            <summary>
            Gets the unique identifier for the role.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Role.Name">
            <summary>
            Gets the name of the role.
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.Role.Description">
            <summary>
            Gets a description of the role, if one is provided.
            </summary>
        </member>
        <member name="T:net.openstack.Core.Domain.ServiceCatalog">
            <summary>
            Represents a single service provided to an authenticated user. Each service
            has one or more <see cref="P:net.openstack.Core.Domain.ServiceCatalog.Endpoints"/> providing access information for the
            service.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Core.Domain.ServiceCatalog.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.ServiceCatalog"/> class.
            </summary>
            <remarks>
            This constructor is used by the JSON deserializer.
            </remarks>
        </member>
        <member name="M:net.openstack.Core.Domain.ServiceCatalog.#ctor(System.String,System.String,net.openstack.Core.Domain.Endpoint[])">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Core.Domain.ServiceCatalog"/> class
            with the specified name, username, and endpoints.
            </summary>
            <param name="name">The display name of the service.</param>
            <param name="type">The canonical name of the service.</param>
            <param name="endpoints">A collection of <see cref="T:net.openstack.Core.Domain.Endpoint"/> objects describing the service endpoints.</param>
        </member>
        <member name="P:net.openstack.Core.Domain.ServiceCatalog.Endpoints">
            <summary>
            Gets the endpoints for the service.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.ServiceCatalog.Name">
            <summary>
            Gets the display name of the service, which may be a vendor-specific
            product name.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="P:net.openstack.Core.Domain.ServiceCatalog.Type">
            <summary>
            Gets the canonical name of the specification implemented by this service.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.AuthenticationResponse">
            <summary>
            This models the JSON response used for the Authenticate request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.AuthenticationResponse.UserAccess">
            <summary>
            Gets additional information about the authenticated user.
            </summary>
            <seealso cref="P:net.openstack.Providers.Rackspace.Objects.Response.AuthenticationResponse.UserAccess"/>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.CloudIdentityProvider">
            <summary>
            Provides an implementation of <see cref="T:net.openstack.Core.Providers.IIdentityProvider"/> and <see cref="T:net.openstack.Providers.Rackspace.IExtendedCloudIdentityProvider"/>
            for operating with Rackspace's Cloud Identity product.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/">OpenStack Identity Service API v2.0 Reference</seealso>
            <seealso href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/index.html">Rackspace Cloud Identity Client Developer Guide - API v2.0</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudIdentityProvider._userAccessCache">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.CloudIdentityProvider.TokenCache"/> property.
            </summary>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.CloudIdentityProvider._urlBase">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.CloudIdentityProvider.UrlBase"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> class
            with no default identity, and the default base URL, REST service implementation,
            and token cache.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.#ctor(net.openstack.Core.Domain.CloudIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> class
            with the specified default identity, and the default base URL, REST service
            implementation, and token cache.
            </summary>
            <param name="defaultIdentity">The default identity to use for calls that do not explicitly specify an identity. If this value is <c>null</c>, no default identity is available so all calls must specify an explicit identity.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> class
            with no default identity, the specified base URL, and the default REST service
            implementation and token cache.
            </summary>
            <param name="urlBase">The base URL for the cloud instance. If this value is <c>null</c>, the provider will use <c>https://identity.api.rackspacecloud.com</c>.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.#ctor(net.openstack.Core.Domain.CloudIdentity,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> class
            with the specified default identity and base URL, and the default REST service
            implementation and token cache.
            </summary>
            <param name="defaultIdentity">The default identity to use for calls that do not explicitly specify an identity. If this value is <c>null</c>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="urlBase">The base URL for the cloud instance. If this value is <c>null</c>, the provider will use <c>https://identity.api.rackspacecloud.com</c>.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.#ctor(JSIStudios.SimpleRESTServices.Client.IRestService,net.openstack.Core.Caching.ICache{net.openstack.Core.Domain.UserAccess},System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> class
            with no default identity, and the specified base URL, REST service
            implementation, and token cache.
            </summary>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <c>null</c>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
            <param name="tokenCache">The cache to use for caching user access tokens. If this value is <c>null</c>, the provider will use <see cref="P:net.openstack.Core.Caching.UserAccessCache.Instance"/>.</param>
            <param name="urlBase">The base URL for the cloud instance. If this value is <c>null</c>, the provider will use <c>https://identity.api.rackspacecloud.com</c>.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.#ctor(net.openstack.Core.Caching.ICache{net.openstack.Core.Domain.UserAccess})">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> class
            with no default identity, the default base URL, the default REST service
            implementation, and the specified token cache.
            </summary>
            <param name="tokenCache">The cache to use for caching user access tokens. If this value is <c>null</c>, the provider will use <see cref="P:net.openstack.Core.Caching.UserAccessCache.Instance"/>.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.#ctor(JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> class
            with no default identity, the default base URL, the specified REST service
            implementation, and the <see cref="P:net.openstack.Core.Caching.UserAccessCache.Instance"/>
            token cache.
            </summary>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <c>null</c>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.#ctor(JSIStudios.SimpleRESTServices.Client.IRestService,net.openstack.Core.Caching.ICache{net.openstack.Core.Domain.UserAccess})">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> class
            with no default identity, the default base URL, and the specified REST service
            implementation and token cache.
            </summary>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <c>null</c>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
            <param name="tokenCache">The cache to use for caching user access tokens. If this value is <c>null</c>, the provider will use <see cref="P:net.openstack.Core.Caching.UserAccessCache.Instance"/>.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.#ctor(net.openstack.Core.Domain.CloudIdentity,JSIStudios.SimpleRESTServices.Client.IRestService,net.openstack.Core.Caching.ICache{net.openstack.Core.Domain.UserAccess},System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.CloudIdentityProvider"/> class
            using the provided values.
            </summary>
            <param name="defaultIdentity">The default identity to use for calls that do not explicitly specify an identity. If this value is <c>null</c>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <c>null</c>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
            <param name="tokenCache">The cache to use for caching user access tokens. If this value is <c>null</c>, the provider will use <see cref="P:net.openstack.Core.Caching.UserAccessCache.Instance"/>.</param>
            <param name="urlBase">The base URL for the cloud instance. If this value is <c>null</c>, the provider will use <c>https://identity.api.rackspacecloud.com</c>.</param>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.ListRoles(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.AddRole(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.GetRole(System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.GetRolesByUser(System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.AddRoleToUser(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.DeleteRoleFromUser(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.ListUsersByRole(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.SetUserPassword(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.SetUserPassword(net.openstack.Core.Domain.User,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.SetUserPassword(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.ListUserCredentials(System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.GetUserCredential(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.UpdateUserCredentials(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.UpdateUserCredentials(net.openstack.Core.Domain.User,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.UpdateUserCredentials(System.String,System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.DeleteUserCredentials(System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.ListUsers(net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.GetUserByName(System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.GetUsersByEmail(System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.GetUser(System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.AddUser(net.openstack.Core.Domain.NewUser,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.UpdateUser(net.openstack.Core.Domain.User,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.DeleteUser(System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.ListTenants(net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.GetToken(net.openstack.Core.Domain.CloudIdentity,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.GetTokenAsync(net.openstack.Core.Domain.CloudIdentity,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.Authenticate(net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.AuthenticateAsync(net.openstack.Core.Domain.CloudIdentity,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.GetUserAccess(net.openstack.Core.Domain.CloudIdentity,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.GetUserAccessAsync(net.openstack.Core.Domain.CloudIdentity,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.Impersonate(net.openstack.Providers.Rackspace.RackspaceImpersonationIdentity,System.Boolean)">
            <summary>
            Gets the authentication token for the specified impersonation identity. If necessary, the
            identity is authenticated on the server to obtain a token.
            </summary>
            <remarks>
            If <paramref name="forceCacheRefresh"/> is <c>false</c> and a cached <see cref="T:net.openstack.Core.Domain.IdentityToken"/>
            is available for the specified <paramref name="identity"/>, this method may return the cached
            value without performing an authentication against the server. If <paramref name="forceCacheRefresh"/>
            is <c>true</c>, this method always authenticates the identity with the server.
            </remarks>
            <param name="identity">The identity of the user to authenticate. If this value is <c>null</c>, the authentication is performed with the <see cref="P:net.openstack.Providers.Rackspace.CloudIdentityProvider.DefaultIdentity"/>.</param>
            <param name="forceCacheRefresh">If <c>true</c>, the user is always authenticated against the server; otherwise a cached <see cref="T:net.openstack.Core.Domain.IdentityToken"/> may be returned.</param>
            <returns>The user's authentication token.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="identity"/> is <c>null</c>.</exception>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <c>null</c> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the authentication request failed.</exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.BuildServiceCatalog(System.Collections.Generic.IEnumerable{net.openstack.Core.Domain.ExtendedEndpoint})">
            <summary>
            Converts a collection of <see cref="T:net.openstack.Core.Domain.ExtendedEndpoint"/> objects describing service endpoints
            for an impersonated identity to a collection of <see cref="T:net.openstack.Core.Domain.ServiceCatalog"/> objects used by
            the provider implementations for endpoint resolution.
            </summary>
            <param name="endpoints">A collection of <see cref="T:net.openstack.Core.Domain.ExtendedEndpoint"/> objects describing the available endpoints.</param>
            <returns>A collection of <see cref="T:net.openstack.Core.Domain.ServiceCatalog"/> objects describing the same endpoints as <paramref name="endpoints"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="endpoints"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="endpoints"/> contains any <c>null</c> values.</exception>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.ValidateToken(System.String,System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.ListEndpoints(System.String,net.openstack.Core.Domain.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.CloudIdentityProvider.BuildImpersonationRequestJson(System.String,System.Int32)">
            <summary>
            Constructs the JSON representation used for an impersonation request.
            </summary>
            <param name="userName">The username of the user to impersonate.</param>
            <param name="expirationInSeconds">The time until the impersonation token will expire.</param>
            <returns>A <see cref="T:Newtonsoft.Json.Linq.JObject"/> representing the JSON body of the impersonation request.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="userName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="userName"/> is empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="expirationInSeconds"/> is less than or equal to 0.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.CloudIdentityProvider.TokenCache">
            <summary>
            Gets the cache to use for caching user access tokens.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.CloudIdentityProvider.UrlBase">
            <summary>
            Gets the base URL for the cloud instance.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.CloudIdentityProvider.DefaultIdentity">
            <inheritdoc/>
        </member>
        <member name="T:net.openstack.Core.Domain.UserDetails">
            <summary>
            Contains additional information about an authenticated user.
            </summary>
            <seealso cref="P:net.openstack.Core.Domain.UserAccess.User"/>
            <seealso cref="M:net.openstack.Core.Providers.IIdentityProvider.Authenticate(net.openstack.Core.Domain.CloudIdentity)"/>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Core.Domain.UserDetails.Id">
            <summary>
            Gets the unique identifier for the user.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.UserDetails.Name">
            <summary>
            Gets the "name" property for the user.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.UserDetails.Roles">
            <summary>
            Gets the "roles" property for the user.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:net.openstack.Core.Domain.UserDetails.DefaultRegion">
             <summary>
             Gets the default region for the user.
             </summary>
             <remarks>
             Users can be assigned a default region so that, when there is a choice between
             multiple endpoints associated with a service in the user's catalog, the endpoint
             for the user's default region will be selected if it is available. The default
             region is only used when a region is not explicitly specified in the API call.
            
             <note>
             This property is a Rackspace-specific extension to the OpenStack Identity Service.
             </note>
             </remarks>
             <seealso href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/Sample_Request_Response-d1e64.html">Sample Authentication Request and Response (Rackspace Cloud Identity Client Developer Guide - API v2.0)</seealso>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.RolesResponse">
            <summary>
            This models the JSON response used for the List Roles and List User Global Roles requests.
            </summary>
            <seealso href="http://docs.rackspace.com/openstack-extensions/auth/OS-KSADM-admin-devguide/content/GET_listRoles_v2.0_OS-KSADM_roles_Admin_API_Service_Developer_Operations-d1e1357.html">List Roles (Rackspace OS-KSADM Extension - API v2.0)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_listUserGlobalRoles_v2.0_users__user_id__roles_User_Operations.html">List User Global Roles (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.RolesResponse.Roles">
            <summary>
            Gets a collection of roles.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.RolesResponse.RoleLinks">
            <summary>
            Gets a collection of links related to <see cref="P:net.openstack.Providers.Rackspace.Objects.Response.RolesResponse.Roles"/>.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.UpdateServerRequest">
            <summary>
            This models the JSON request used for the Update Server request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/ServerUpdate.html">Update Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.UpdateServerRequest.#ctor(System.String,System.Net.IPAddress,System.Net.IPAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.UpdateServerRequest"/> class
            with the specified name and access IP addresses.
            </summary>
            <param name="name">The new name for the server. If the value is <c>null</c>, the server name is not changed.</param>
            <param name="accessIPv4">The new IP v4 address for the server. If the value is <c>null</c>, the server's IP v4 address is not updated.</param>
            <param name="accessIPv6">The new IP v6 address for the server. If the value is <c>null</c>, the server's IP v6 address is not updated.</param>
            <exception cref="T:System.ArgumentException">
            If the <see cref="T:System.Net.Sockets.AddressFamily"/> of <paramref name="accessIPv4"/> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork"/>
            <para>-or-</para>
            <para>If the <see cref="T:System.Net.Sockets.AddressFamily"/> of <paramref name="accessIPv6"/> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6"/></para>
            </exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.UpdateServerRequest.Server">
            <summary>
            Gets additional details about the updated server.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Request.UpdateServerRequest.ServerUpdateDetails">
            <summary>
            This models the JSON body containing details for the Update Server request.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Objects.Request.UpdateServerRequest.ServerUpdateDetails.#ctor(System.String,System.Net.IPAddress,System.Net.IPAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.Objects.Request.UpdateServerRequest"/> class
            with the specified name and access IP addresses.
            </summary>
            <param name="name">The new name for the server. If the value is <c>null</c>, the server name is not changed.</param>
            <param name="accessIPv4">The new IP v4 address for the server. If the value is <c>null</c>, the server's IP v4 address is not updated.</param>
            <param name="accessIPv6">The new IP v6 address for the server. If the value is <c>null</c>, the server's IP v6 address is not updated.</param>
            <exception cref="T:System.ArgumentException">
            If the <see cref="T:System.Net.Sockets.AddressFamily"/> of <paramref name="accessIPv4"/> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork"/>
            <para>-or-</para>
            <para>If the <see cref="T:System.Net.Sockets.AddressFamily"/> of <paramref name="accessIPv6"/> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6"/></para>
            </exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.UpdateServerRequest.ServerUpdateDetails.Name">
            <summary>
            Gets the new name for the server, or <c>null</c> if the server's name should not be changed by the update.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.UpdateServerRequest.ServerUpdateDetails.AccessIPv4">
            <summary>
            Gets the IP v4 access address for the server, or <c>null</c> if the access address should not be changed by the update.
            </summary>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Request.UpdateServerRequest.ServerUpdateDetails.AccessIPv6">
            <summary>
            Gets the IP v6 access address for the server, or <c>null</c> if the access address should not be changed by the update.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.UserResponse">
            <summary>
            This models the JSON response used for the Get User Information by Name, Get User Information by ID, and Update User requests.
            </summary>
            <remarks>
            In certain situations with certain vendors, the List Users request is known to result
            in a response that resembles this model. When such a situation is detected, this
            response model is also used for the List Users response.
            </remarks>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_getUserByName_v2.0_users__User_Operations.html">Get User Information by Name (OpenStack Identity Service API v2.0 Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_getUserById_v2.0_users__user_id__User_Operations.html">Get User Information by ID (OpenStack Identity Service API v2.0 Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUser_v2.0_users__userId__.html">Update User (OpenStack Identity Service API v2.0 Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_listUsers_v2.0_users_.html">List Users (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.UserResponse.User">
            <summary>
            Gets information about the user.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.UserImpersonationResponse">
            <summary>
            This models the JSON response used for the Impersonate User request.
            </summary>
            <remarks>
            The Impersonate User API is a Rackspace-specific extension to the OpenStack
            Identity Service, and is documented in the Rackspace <strong>Cloud Identity
            Admin Developer Guide - API v2.0</strong>.
            </remarks>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.UserImpersonationResponse.UserAccess">
            <summary>
            Gets the details for the response.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Objects.Response.UserImpersonationResponse.UserImpersonationData">
            <summary>
            This models the JSON body containing details for the Impersonate User response.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Objects.Response.UserImpersonationResponse.UserImpersonationData.Token">
            <summary>
            Gets the <see cref="T:net.openstack.Core.Domain.IdentityToken"/> which allows providers to make
            impersonated calls to API methods.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Validators.HttpResponseCodeValidator">
            <summary>
            Provides an implementation of <see cref="T:net.openstack.Core.Validators.IHttpResponseCodeValidator"/> for
            operation with Rackspace's products.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.Validators.HttpResponseCodeValidator._default">
            <summary>
            A default instance of <see cref="T:net.openstack.Providers.Rackspace.Validators.HttpResponseCodeValidator"/>.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.Validators.HttpResponseCodeValidator.Validate(JSIStudios.SimpleRESTServices.Client.Response)">
            <inheritdoc/>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.Validators.HttpResponseCodeValidator.Default">
            <summary>
            Gets a default instance of <see cref="T:net.openstack.Providers.Rackspace.Validators.HttpResponseCodeValidator"/>.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.Validators.NamespaceDoc">
            <summary>
            The <see cref="N:net.openstack.Providers.Rackspace.Validators"/> namespace defines
            classes for validating various arguments before they are used in API calls to Rackspace
            services.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.WebRequestEventArgs">
            <summary>
            This class contains data for events that happen in the context of a
            <see cref="T:System.Net.WebRequest"/>.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.WebRequestEventArgs._request">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.WebRequestEventArgs.Request"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.WebRequestEventArgs.#ctor(System.Net.HttpWebRequest)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.WebRequestEventArgs"/> class
            with the specified web request.
            </summary>
            <param name="request">The HTTP web request.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="request"/> is <c>null</c>.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.WebRequestEventArgs.Request">
            <summary>
            Gets the <see cref="T:System.Net.HttpWebRequest"/> associated with the event.
            </summary>
        </member>
        <member name="T:net.openstack.Providers.Rackspace.WebResponseEventArgs">
            <summary>
            This class contains data for events that happen in the context of a
            <see cref="T:System.Net.WebResponse"/>.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:net.openstack.Providers.Rackspace.WebResponseEventArgs._response">
            <summary>
            This is the backing field for the <see cref="P:net.openstack.Providers.Rackspace.WebResponseEventArgs.Response"/> property.
            </summary>
        </member>
        <member name="M:net.openstack.Providers.Rackspace.WebResponseEventArgs.#ctor(System.Net.HttpWebResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:net.openstack.Providers.Rackspace.WebResponseEventArgs"/> class
            with the specified web response.
            </summary>
            <param name="response">The HTTP web response.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="response"/> is <c>null</c>.</exception>
        </member>
        <member name="P:net.openstack.Providers.Rackspace.WebResponseEventArgs.Response">
            <summary>
            Gets the <see cref="T:System.Net.HttpWebResponse"/> associated with the event.
            </summary>
        </member>
    </members>
</doc>
